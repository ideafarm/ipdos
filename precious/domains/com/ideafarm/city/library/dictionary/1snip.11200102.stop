
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


#define STOP ( F(tinP.flagsThreadMode1) & flTHREADmODE1_WATCHfORaSYNCHiMPOTENCE && thirdC::thPrimeIF( tinP ) )

//IF THAT EVER BECOMES A PROBLEM, JUST PUT IN THE TEST FOR EXISTENCE AND ENSURE THAT thPrime CANNOT BE DESTRUCTED AFTER THE TEST AND BEFORE THE QUERY
//THIS WILL BLOCK FOREVER (REALLY STOP!) IF USED VERY EARLY OR VERY LATE
//OPTIMIZATION: REMOVED: " && thirdC::thPrimeExistsIF( tinP )"

/**/
/*1*//*STOP*//*1*/
*/
  __( STOP ) ;
  while( !third && !STOP ) doTaskF() ;
 example code
in the ifc base code, it is illegal to abort normal functioning due to STOP without also setting impotence explicitly
 this might be enforced in the definition of STOP in the future
it is good style to always set impotence if normal completion is aborted because STOP is true
 normally, asynchronous impotence only affects code that explicitly looks for it
the normal behavior for all etherC and thirdC functions is to -not- look for asynch impotence and not be affected by it
even where i am used, asynch impotence has no effect unless the caller has set flTHREADmODE1_WATCHfORaSYNCHiMPOTENCE
i am used in some base function definitions that take much time to complete
i can be used to check for asynchronous impotence
\<A HREF=\"5.0010179.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//

