
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return pTin ;

    }
        *pcb = 0xbad32000 ; // "bad32000": "bad" <DDNUMB group bigits>
        ZE( countT* , pcb ) ; //CANNOT USE BLAMMO MACRO HERE BECAUSE THAT INVOKES TINSL WHICH INVOKES ME
    {
    if( pTin && getNegAM( pTin->fingerprint ) != FINGERnEG_TINs && getNegAM( pTin->fingerprint ) != FINGERnEG_TINszOMBIE )

    tinS*& pTin = pTinAM() ; //IF THIS LINE A.V.'S IN DEBUGGER, CLIMB THE CALL STACK INTO TH CALLER AND READ COMMENTS THERE
    
    }
        }
            *pcb = 0xbad32000 ; // "bad32000": "bad" <DDNUMB group bigits>
            ZE( countT* , pcb ) ; //CANNOT USE BLAMMO MACRO HERE BECAUSE THAT INVOKES TINSL WHICH INVOKES ME
        {
        if( osTidMe != processGlobal2I.osTidMain && osTidMe != processGlobal2I.osTidTerminator )
        countT osTidMe = dosGetInfoBlocksIdThreadIF() ;
    {
    //if( F(processGlobal2I._thirdC_flagsProcessState) & flPROCESSsTATE_EXCEPTIONnOThANDLED && bTlsEarlyLateI )
    if( F(processGlobal2I._thirdC_flagsProcessState) & flPROCESSsTATE_EXCEPTIONnOThANDLED && bTlsEarlyLateIF() )

    //IF YOU DON'T BELIEVE THIS, ENABLE THE CONoUTrAW3 LINE AND RUN A TEST ADAM THAT BLAMMOS AND HAS SYSTEM THREADS
    //THIS IS NEEDED BECAUSE OTHER THREADS CONTINUE TO EXECUTE WHILE THE EXCEPTION HANDLER IS PROCESSING AN EXCEPTION
{
/*1*/tinS*& _export pTinF( voidT )/*1*/

/**/
*/
\<A HREF=\"5.0c00026.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$pTinF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

