
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etherC::loafIF( tinP ) ;
etThread.traceF( tinP , T("ok") ) ;

}
    }
        }
            }
                etThread.traceF( tinP , T(postFile) ) ;
            {
            else
            if( !postFile ) break ;

            const osTextT* postFile = pageFile ;
            pageC pageFile = myJotFile ;
        {
        while( !ether && !POOP )

        jotC myJotFile( tinP , "myjot.file" ) ;
    {

    }
        }
            while( ~hFind && !POOP ) ;
            }
                }
                    }
                        DEL( pInfo ) ;
                        myJotFile.writeF( tinP , tShort , tShort.csF( tinP ) + 1 ) ;
                        etThread.traceF( tinP , T("file: ")+tShort ) ;
                    {
                    else
                    }
                        DEL( pInfo ) ;
                        myJotDir.writeF( tinP , tShort , tShort.csF( tinP ) + 1 ) ;
                        etThread.traceF( tinP , T("dir:  ")+tShort ) ;
                    {
                    if( bDir )

                    }
                        etThread.delF( tinP , psttShort ) ;
                        tShort = T(psttShort) ;
                        etThread.delF( tinP , psttnu ) ;
                        etThread.strBisectF( tinP , psttnu , psttShort , pInfo->psttIfoName , tSlash , - 1 - bDir , flSTRbISECT_APPENDdELIMITER ) ; ___( psttnu ) ; ___( psttShort ) ;
                        ZE( strokeS* , psttShort ) ;
                        ZE( strokeS* , psttnu ) ;
                    {
                    TN( tShort , "" ) ;

                    const boolT bDir = pInfo->psttIfoName[ CSpREFIX - 1 + pInfo->psttIfoName->idAdam ].idAdam == '/' ;

                    //etRock.traceF( tinP , T("cloudC: [file]: ")+tIfoName ) ;
                    TN( tIfoName , pInfo->psttIfoName ) ;
                {
                else
                }
                    break ;
                    DEL( pInfo ) ;
                {
                if( !pInfo || !pInfo->psttIfoName )

                }
                    break ;
                    ++ s ; etPrime.osSleepF( tinP , TOCK << 4 ) ;
                    sleepC s( tinP , TAG( TAGiDnULL ) ) ;
                    etRock.traceF( tinP , T("could not access local disk while obtaining \"file find\" info for a file ; will retry after napping 01 tock") ) ;
                    DEL( pInfo ) ;
                    POOPR
                {
                if( POOP )

                etScratch.diskFindFileOrDirOldF( tinP , pInfo , hFind , T("///d/ideafarm.home.1/precious/domains/com/ideafarm/city/library/dictionary/1*") ) ;
                ZE( infoFileS* , pInfo ) ;
            {
            do
            handleC hFind( tinP , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_FILEfIND ) ;

            SCOOPS
        {
        IFsCRATCH

        TN( tSlash , "/" ) ;
        etherC& etScratch = *tinP.pEtScratch ;
        etherC& etPrime   = etherC::etPrimeIF( tinP ) ;
        etherC& etRock    = etherC::etRockIF( tinP ) ;
    {

    jotC myJotFile( tinP , "myjot.file" , flJOTc_DELETE | flJOTc_WRITE ) ;
    jotC myJotDir(  tinP , "myjot.dir"  , flJOTc_DELETE | flJOTc_WRITE ) ;
{

TODO

/*1*/WAKEsHOWtEXT( "was.scratch.9.archived.20180508@1202.scr" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//

