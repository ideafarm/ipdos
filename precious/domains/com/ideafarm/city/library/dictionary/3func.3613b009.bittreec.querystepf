
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return bDone ;

    }
        }
            pp.cBits  -- ;
            pp.offBit ++ ;

            }
                pp.idThis = idThisNew ;

                //;
                //    : (bitNodeS*)(const byteT*)(*pNapkins)[ idThisNew - 1 ]
                //    ? 0
                //pp.pThis = !idThisNew

                countT idThisNew = BhIDE( BM_HIGH , PtHIS->p1 ) ;




            {
            else
            }











                pp.pThis = (bitNodeS*)BhIDE( BM_HIGH , PtHIS->p1 ) ;
            {
            if( pbRawBegin )
        {
        else
        }
            pp.cBits  -- ;
            pp.offBit ++ ;

            }




                pp.idThis = idThisNew ;

                //;
                //    : (bitNodeS*)(const byteT*)(*pNapkins)[ idThisNew - 1 ]
                //    ? 0
                //pp.pThis = !idThisNew

                countT idThisNew = BhIDE( BM_HIGH , PtHIS->p0 ) ;
            {
            else
            }











                pp.pThis = (bitNodeS*)BhIDE( BM_HIGH , PtHIS->p0 ) ;
            {
            if( pbRawBegin )
        {
        if( !pp.myBit )

        pp.myBit >>= SB - 1 - pp.offBit ;
        pp.myBit <<= SB - 1 - pp.offBit ;                                                                   // DISCARD HIGHER BITS

        pp.myBit <<= pp.offBit ;
        pp.myBit >>= pp.offBit ;                                                                            // DISCARD LOWER BITS

        pp.myBit = *pp.pbBits ;
    {
    else                                                                                                    // ATTACH A NODE FOR THE CURSORED BIT
    }
        bDone = 1 ;



























        }
            pp.idThis = 0 ;
            pp.pThis = 0 ; // INDICATE NOT FOUND
        {
        if( !( *(countT*)&PtHIS->p0 & BM_HIGH ) )
    {
    if( !pp.cBits )
    ZE( boolT , bDone ) ;

    }
        }
            pp.idThis = idThisNew ;
              pp.pThis = (bitNodeS*)(*pNapkins)[ idThisNew - 1 ] ;
            countT idThisNew = BhIDE( BM_HIGH , PtHIS->p1 ) ;
        {
        else
        if( pbRawBegin ) pp.pThis = (bitNodeS*)BhIDE( BM_HIGH , PtHIS->p1 ) ;

        if( pp.pcDatum && !pp.cBits ) *pp.pcDatum = BhIDE( BM_HIGH , PtHIS->p0 ) ;
    {
    while( BkEEP( BM_HIGH , PtHIS->p1 ) )                                                                //SKIP ANY ESCAPE NODES

    }
                     pp.offBit %= SB ;
        pp.pbBits += pp.offBit /  SB ;
    {
    if( pp.offBit >= SB )                                                                                   // NORMALIZE SO pp.offBit IS [0-7]

    if( !pp.pbBits ) { BLAMMO ; }                                                                           // SOURCE BITS MUST BE SPECIFIED

    //tinP.pEther->traceF( tinP , TF3(espAM(),flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED|flFORMAT_FILLzE,8) ) ;
    pp.cSteps ++ ;

    rParam_new_S& pp = *(rParam_new_S*)tinP.pbRecursiveParameters ;
    _IO_
{
/*1*/boolT bitTreeC::queryStepF( tinS& tinP )/*1*/

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

