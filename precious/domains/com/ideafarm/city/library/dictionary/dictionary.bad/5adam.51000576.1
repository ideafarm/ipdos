
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


//VISIBLE

//==============================================================================================================================================================
//==== BELOW THIS LINE: DAYTIME WORK ===========================================================================================================================
//==============================================================================================================================================================

REST

}
    }
        }
            etThread.delF( tinP , pbs ) ;
            if( pbs ) del_sessionS_ptrs_F( tinP , (sessionS*)pbs ) ;
            sws_session >> pbs ;
            ZE( byteT* , pbs ) ;
        {
        while( sws_session )
        idhLever = *(nicNameC*)sws_session.leverF( tinP , idf ) ;
    {
    for( countT idf = 1 ; idf <= cFlavors ; idf ++ )
    countT cFlavors = sws_session.cFlavorsF( tinP ) ;
{
TELL( "cleaning up" ) ;

etThread.delF( tinP , postxHelpExe   ) ;
etThread.delF( tinP , postxLoggedOut ) ;
etThread.delF( tinP , postxLoggedIn  ) ;
etThread.delF( tinP , postxNotFound  ) ;

etThread.ifcDrivenServerF( tinP , i1 , i2 ) ;
//etThread.ifcHireF( tinP , T("ifcIDaDAM_ROOThTTPsERVER") , ifcIDaDAM_ROOTmAILoUT , T("!ignoreFireByOperator") , flHIRE_DISPLAYaUTO , nicNameC() ) ;

etThread.ifcHireF( tinP , T("ifcIDaDAM_ROOThTTPsERVER") , ifcIDaDAM_ROOTmAILoUT , T("!ignoreFireByOperator") , flHIRE_DISPLAYaUTO , nicNameC() ) ;

serverInfo2S i2( ifcIDpORT_HTTP , flSOCKETc_null , TF2(thirdC::third_idAdamRootI_IF( tinP ),flFORMAT_UNSIGNED|flFORMAT_NObIGITvALUES) , 0 , (countT)&c3p , 0 , - 1 , 1 , sizeof( stateS ) , translateStateF ) ;
serverInfo1S i1( &pbdVarying , b_pbdVarying , bHandedOff , sgnIdPortReplaced , tmcF , countTC() , ether ) ;
TELL( "serving the HTTP port" ) ;

count3S c3p( (countT)&c8p1 , (countT)&c8p2 , (countT)&c8p3 ) ;
c8p3.c5 = (countT)&costxTM ;
c8p3.c4 = (countT)&postxTM ;
c8p3.c3 = (countT)&costxIPDOS ;
c8p3.c2 = (countT)&postxIPDOS ;
c8p3.c1 = (countT)&costxIA ;
c8p2.c8 = (countT)&postxIA ;
c8p2.c7 = (countT)&costxHelpExe ;
c8p2.c6 = (countT)&postxHelpExe ;
c8p2.c5 = (countT)&costxLoggedOut ;
c8p2.c4 = (countT)&postxLoggedOut ;
c8p2.c3 = (countT)&costxLoggedIn ;
c8p2.c2 = (countT)&postxLoggedIn ;
c8p2.c1 = (countT)&sws_session ;
c8p1.c8 = (countT)&b_idhLever ;
c8p1.c7 = (countT)&idhLever ;
c8p1.c6 = (countT)&costxHome ;
c8p1.c5 = (countT)&postxHome ;
c8p1.c4 = (countT)&costxNotFound ;
c8p1.c3 = (countT)&postxNotFound ;
c8p1.c2 = (countT)&b_pbdVarying ;
c8p1.c1 = (countT)&pbdVarying ;
count8S c8p3 ;
count8S c8p2 ;
count8S c8p1 ;

switchStackC sws_session( tinP , etThread , TAG( TAGiDnULL ) , flSTACKc_null , idhLever , flSTACKc_null , ifcSTACKtYPE_PTR_byteT ) ;
batonC b_idhLever( tinP , TAG( TAGiDnULL ) ) ;
nicNameC idhLever ;

//}
//    etThread.delF( tinP , pbExe ) ;
//    etThread.memCopyF( tinP , postxHelpExe + cb0 , pbExe , cbExe ) ;
//    etThread.memCopyF( tinP , postxHelpExe       , pb0   , cb0   ) ;
//    etThread.newF( tinP , LF , postxHelpExe , cb0 + cbExe ) ; ___( postxHelpExe ) ;
//
//    countT cb0 = t0.csF( tinP ) ;
//    byteT* pb0 = t0 ;
//    textC t0 = T("HTTP/1.1 200 OK\r\nCache-Control: no-cache\r\nPragma: no-cache\r\nContent-Type: application/octet-stream\r\nContent-Length: ")+TF4(cbExe,flFORMAT_FILLzE|flFORMAT_NObASE|flFORMAT_FOREIGN,8,0xa)+T("\r\n\r\n") ;
//
//    etThread.boxGetShadowF( tinP , pbExe , cbExe , T("///" ifc PAPERS "/ifcwhelp.exe") ) ; ___( pbExe ) ;
//    ZE( countT , cbExe ) ;
//    ZE( byteT* , pbExe ) ;
//{
ZE( countT   , costxHelpExe ) ;
ZE( osTextT* , postxHelpExe ) ;

}
    costxLoggedOut = etThread.strMakeF( tinP , LF , postxLoggedOut , t0+tnf ) ; ___( postxLoggedOut ) ;
    textC t0 = T("HTTP/1.1 200 OK\r\nCache-Control: no-cache\r\nPragma: no-cache\r\nContent-Type: text/html\r\nContent-Length: ")+TF4(tnf.csF(tinP),flFORMAT_FILLzE|flFORMAT_NObASE|flFORMAT_FOREIGN,8,0xa)+T("\r\n\r\n") ;
    TN( tnf , "You have been logged out.  If you are a visitor, thank you for visiting us in IdeaFarm " "(tm) City.  While we value the opportunity to exchange goods, services, and money with you, that is not why we want you to visit us.  You are welcome because you are an important part of God's creation, and we want you to enjoy true community when with us.   If you are a resident, please act immediately and decisively if you ever find that any aspect of the operation of the city does not proclaim Jesus's rule for our lives: \"Love God.  Love Neighbor.\"" ) ;
{
ZE( countT   , costxLoggedOut ) ;
ZE( osTextT* , postxLoggedOut ) ;

}
    costxLoggedIn = etThread.strMakeF( tinP , LF , postxLoggedIn , t0+tnf ) ; ___( postxLoggedIn ) ;
    textC t0 = T("HTTP/1.1 200 OK\r\nCache-Control: no-cache\r\nPragma: no-cache\r\nContent-Type: text/html\r\nContent-Length: ")+TF4(tnf.csF(tinP),flFORMAT_FILLzE|flFORMAT_NObASE|flFORMAT_FOREIGN,8,0xa)+T("\r\n\r\n") ;
    TN( tnf , "You have been logged in.  Please be sure to log out when you are no longer using, or supervising the use of, this computer.  If you have an account with the IdeaFarm " "(tm) City central bank, logging out is important to prevent someone else from spending your money." ) ;
{
ZE( countT   , costxLoggedIn ) ;
ZE( osTextT* , postxLoggedIn ) ;

}
    costxNotFound = etThread.strMakeF( tinP , LF , postxNotFound , t0+tnf ) ; ___( postxNotFound ) ;
    textC t0 = T("HTTP/1.1 200 OK\r\nCache-Control: no-cache\r\nPragma: no-cache\r\nContent-Type: text/html\r\nContent-Length: ")+TF4(tnf.csF(tinP),flFORMAT_FILLzE|flFORMAT_NObASE|flFORMAT_FOREIGN,8,0xa)+T("\r\n\r\n") ;

    ) ;

        "</BODY>"
        "</FONT>"
        "The requested page is not currently available, probably because the preceding page that you were viewing just became obsolete.  Please reload the preceding page and then try again."
        "<FONT SIZE=\"3\" STYLE=\"COLOR: white\" FACE=\"arial\">"
        //"<SPAN class=\"blackisneat\">"
        "<BODY BGCOLOR=\"#000000\" >"
        "</HEAD>"
        "    </STYLE>"
        "        }"
        "            font-variant: small-caps"
        "        {"
        "        SPAN.blackisneat"
        "    <STYLE type=\"text/css\">"
        "    <META http-equiv=\"Content-Style-Type\" content=\"text/css\">"
        "<HEAD>"

    TN( tnf ,
{
ZE( countT   , costxNotFound ) ;
ZE( osTextT* , postxNotFound ) ;

}
    costxTM = etThread.strMakeF( tinP , LF , postxTM , t0+tnf ) ; ___( postxTM ) ;
    textC t0 = T("HTTP/1.1 200 OK\r\nCache-Control: no-cache\r\nPragma: no-cache\r\nContent-Type: text/html\r\nContent-Length: ")+TF4(tnf.csF(tinP),flFORMAT_FILLzE|flFORMAT_NObASE|flFORMAT_FOREIGN,8,0xa)+T("\r\n\r\n") ;



//http://www.uspto.gov/main/profiles/acadres.htm
//http://www.rareplay.com/index.php?page=ideafarm


    ) ;

        "</BODY>"
        "</UL>"
        "<LI><A HREF=\"http://web.archive.org/web/*/http://www.ideafarm.com\" TARGET=\"_new\">www.ideafarm.com site history (WayBack Machine)</A>"
        "<UL>"











//  1999, my marketing assault on the Internet, and the consequent discovery of "IdeaFarm" by the slimeballs who plagiarized it!
//   that is the origin of the IdeaFarm trademark
//   i vaguely recall that the original inspiration was to mark my software "ideafarmed"
//   so, soon after i let go of the idea of using papyrus, it occured to me to use "ideafarm"
//   we shared the same moral perspective, and it never occured to me that disrespecting the prior use was an option
//   i knew that my mother was correct
//   (my wife was no big fan of ideafarming, for several reasons!)
//   i called my discipline ideafarming, and i attributed to it credit for the reliable and steady flow of ideas that enabled me to complete my very difficult research project in mathematical economics.
//   my idea capturing discipline: during my ph.d. research 1980-1992, i had developed the discipline of always having pen and paper handy, and always jotting down any idea that came to me, even if i was awakened by it, even if i was having sex!
//   i remember expressing my frustration over the prior use of my coveted trademark to my mother, who said that i would just have to come up with a good name that is not already being used
//   oh, rats; papyrus is already being used (by a stationary / paper products retailer)
//   papyrus would be a great name for my electronic book distribution product, which introduced knowledge trees, reinventing writing!
//  papyrus and the origin of the IdeaFarm mark
//  fix: Econosee came before the IdeaFarm " "(tm) mark
//U::






        "<UL>"
        "<LI>2005: IdeaFarm " "(tm) Piggyback Distributed Operating System for MS Windows"
        "<LI>2001: IdeaFarm " "(tm) City for MS Windows (second complete rewrite)"
        "<LI>1998: IdeaFarm " "(tm) Electronic Book Distribution System for MS Windows (first complete rewrite)"
        "<LI>1996: IdeaFarm " "(tm) Newsgroup Moderator for OS/2"
        "<LI>1996: IdeaFarm " "(tm) File Adder Utility for OS/2"
        "<LI>1995: IdeaFarm " "(tm) Electronic Book Distribution System for OS/2 and MS Windows"
        "<LI>1993: Custom software enhancements to C language application code in an IBM database product for OS/2"
        "<LI>1993: Custom software enhancements to Forth language system code in the Peak RTP for MS-DOS"
        "<LI>1993: IdeaFarm " "(tm) SECS Communication Subsystem for the Peak Rapid Thermal Wafer Processor for MS-DOS"
        "<LI>1992: IdeaFarm " "(tm) Modulated RF QSD Tester for MS-DOS"
        "<UL>"
        "<P>"
        "I have used IdeaFarm " "(tm) to mark the following products:"
        "<P>"
        "  It was time to archive the software and begin another complete rewrite."
        "  From the beginning, IdeaFarm " "(tm) City was envisioned as a software product, as the software system that would give form to this new place in cyberspace."
        "  I saw cyberspace as a newly discovered continent, and I saw myself as a Pilgrim intent on emigrating to that new place in order to build, from scratch, a culture in which I could thrive as an intellectual creative."
        "  IdeaFarm " "(tm) City would be a sovereign \"country\" in cyberspace, a place not defiled by any facet of mainstream culture, including territorial law and government regulation."
        "  That was the genesis of IdeaFarm " "(tm) City."
        "So, with a completed but still buggy product, a product that I now knew to be way too eccentric in its features to be marketed successfully, my goal became to drop out of mainstream culture and wrap myself in an alternative culture that nurtured rather than killed intellectual life."
        "<P>"
        "  I was dismayed to recognize an abundance of evidence all around me of what one author called, in the title to his book, \"The Dumbing of America\"."
        "  Human culture worldwide was becoming, at best, indifferent to, and at worst, hostile to science and to intellectual life and discourse."
        "  But it was at this time that I realized that the market for such products was vanishing."
        "  (In particular, I wanted to fund MY research with revenue from the electronic book that I had just completed plus revenue that the infrastructure would generate for me as other authors used it.)"
        "  From 1992 to 1998, my goal was to create an electronic book infrastructure that would enable scientists like me to fund research as independent businessmen rather than as suckers on the government teat."
        "  From 1980 to 1992 my goal was to complete a very difficult research project in mathematical economics."
        "  It was during this time that my vision for the product changed."
        "  With my attention no longer riveted onto coding challenges, I was able to take another bird's eye view of my business situation."
        "  In 1998, I released a complete rewrite of IdeaFarm " "(tm) Electronic Book Distribution System."
        "  But since my products were built for both OS/2 and Windows, I simply abandoned the OS/2 market, held my nose, and jumped into the Windows cesspoolOld."
        "  In a way, I was, too."
        "  Most of us were destroyed, in business and othewise."
        "  Religously fanatic in our belief in its technical superiority, and loath to be defiled by any contact with that marketing scumbag Bill Gates, we refused to jump the sinking ship."
        "  OS/2 was a disaster for all of us."
        "<P>"
        "  But the archives for comp.os.os2.moderated establish my prior, vigorous, and effective use of the mark in the software product arena."
        "  (When I rail against slimeball marketers, do not think that I am standing on a moral pinnacle!)"
        "  The thousands of subsequent posts in the newsgroup, approved using IdeaFarm (tm) branded automated moderation software, attest to my youthful crassness in getting the IdeaFarm " "(tm) mark to appear in as many posts as possible."
        "  The very first message posted (by me) in comp.os.os2.moderated shows the importance of God in my life and thinking."
        "  (My base library was, from the beginning, written for portability, and my plan was that all IdeaFarm " "(tm) products would be released simultaneously for OS/2 and Windows.)"
        "  My business motive for this involvement was to encourage the then growing OS/2 market, recruit a group of alpha testers (which numbered 22 at its zenith) for my IdeaFarm (tm) Electronic Book Distribution System, support users, and (I admit) develop brand awareness of the IdeaFarm " "(tm) trademark among OS/2 and Windows developers and users."
        "  (I drafted the charter and completed the rfc and voting process, and then organized a team of five moderators.)"
        "  In 1996 I registered the IDEAFARM.COM domain and organized the moderated newsgroup for OS/2, <A HREF=\"http://groups.google.com/group/comp.os.os2.moderated/about\">comp.os.os2.moderated</A>."
        "  When the Internet took off in the mid 1990's, I switched to the Internet and continued my interaction with the OS/2 developer and user community there."
        "  (Does Compuserve posess an archive of messages posted in those early days?)"
        "  As user 71732,5561, I was active in the OS/2 groups, promoting my IdeaFarm " "(tm) Electronic Book Distribution System for OS/2 and Windows, one of the few dual port products."
        "  Compuserve was the primary forum for the software industry, sporting scores, perhaps over 100, groups."
        "  In the early 1990's, OS/2 was the NEW THING that was going to sweep the software market."
        "<P>"
        "  These frustrations, combined with the earlier blasphemy against OS/2, led me to literally tell my customer that he had his head up his ass as I quit the contract!"
        "  We were only allowed to \"check out\" little pieces, one at a time, and my interest in the overall structure of the system was received with show stopping suspicion."
        "  Separately, the Unicode retrofit would touch code all over the place, but IBM was not willing to trust us contractors enough to let us become familiar with the code asset as an entity."
        "  Frustrated with this team development, I began to consider bailing out of the contract."
        "  I discussed this with the other contractors, who advised me to just keep quiet; it would take IBM a year to end our contracts."
        "  The scope of work kept expanding as new difficulties became evident, and it became obvious that the project was not feasible within budget."
        "  I was one of three contractors for the Unicode project."
        "  Still a strident OS/2 zealot, I was shocked to be told by a manager at IBM Santa Theresa that no more new software should be written for OS/2."
        "  My next use of the IdeaFarm " "(tm) mark was to be for an engagement by IBM (Santa Theresa Laboratory) for me to enhance their flagship OS/2 database product to support Unicode."
        "<P>"
        "  This complete loss for them of their control software (their baseline archive was an unuseable mess), plus the inability of their hardware engineers to reduce the electronic noise created by those five unshielded computers, killed their company."
        "  I was so sick of the project that I hadn't bothered to make a copy for myself."
        "  They had lost the release package!"
        "  Shortly thereafter, my customer contacted me and asked me to help them with a little problem."
        "  Furious, I completed my assignment shortly afterward, spent a full week putting together a fully documented release package, and bid my customer adieu."
        "  I was very nearly killed when, after working inches away from my development unit for hours, I discovered that a young \"accident on wheels\" engineer had left the metal cover leaning against the machine, nearly within arc'ing distance of the uninsulated high voltage (400V) power contacts for the heat lamp."
        "  The whole project was horrible."
        "  I abandoned the C code that I had inherited, rewriting the comm system from scratch, and I marked it with the IdeaFarm " "(tm) mark."
        "  Cleaning the very buggy baseline code as I went, I developed, using the C language, took over development of a communications subsystem that would allow other robotic machines in a manufacturing cluster to chat with and control this RTP cooker."
        "  While all of this was going on, the software was ramping temperature up and down."
        "  The computers controlled two robot arms, a high voltage heat lamp, and valves through which the cooking chamber was sucked to a vacuum and/or filled with whatever gas the recipe called for."
        "  The system contained five single board computers, each running MS-DOS and connected via serial links."
        "  My primary value added for them was to resurrect the horribly buggy Forth distributed real time control software for that robotic wafer cooker."
        "I next used the mark on custom software written for Peak Systems, Inc., a now defunct manufacturer of a rapid thermal wafer processor."
        "<P>"
        "  It merely establishes due diligence so that later coveters of the trademark cannot claim to have been reasonably unaware of the prior (and continuing) use of the mark by another."
        "  In U.S. trademark law, registration does not establish \"ownership\" or the right to use."
        "  (The oldest of IBM's eight global research laboratories, the <A HREF=\"http://www.almaden.ibm.com/\" TARGET=\"new\">Almaden Research Center</A>, was established in San Jose in 1955.)"
        "  I viewed the California registration as sufficient because Silicon Valley was the world capital, the mecca, for software development."
        "<P>"
        "  Application to the Trademark Registrar at the U.S. Patent Office was not made because I could not afford the much steeper fee."
        "  A copy of the diskette label, which clearly showed the \"IdeaFarm " "(tm)\" with the capitalized 'I' and 'F', was submitted with my application for trademark registration to the Trademark Registrar of the State of California."
        "<P>"
        "  The whole contraption applied a controlled waveform of power to a device supplied by one of Laserscope's vendors, controlled the oscilloscope to obtain output waveform data, and analyzed the waveform to pronounce pass or fail for the device under test."
        "  The title was something like \"IdeaFarm " "(tm) Modulated QSD Tester\", and was graphic software that controled a personal computer equipped with an Analog/Digital I/O card and connected to a Hewlett Packard Programmable Oscilloscope."
        "  My first use of the mark was on a custom software product made to an order by <A HREF=\"http://www.laserscope.com/\" TARGET=\"new\">Laserscope Corporation</A>."
        "I have used the IdeaFarm " "(tm) trademark to mark software products continuously, beginning in 1992."
        "<P>"
        "</UL>"
        "<LI><A HREF=\"http://reports.internic.net/cgi/whois?whois_nic=ideafarmindia.com&type=domain\" TARGET=\"_new\">2006: ideafarmindia.com</A>"
        "<LI><A HREF=\"http://reports.internic.net/cgi/whois?whois_nic=ideafarm.org&type=domain\" TARGET=\"_new\">2002: ideafarm.org</A>"
        "<LI><A HREF=\"http://reports.internic.net/cgi/whois?whois_nic=ideafarmstudios.com&type=domain\" TARGET=\"_new\">2001: ideafarmstudios.com</A>"
        "<LI><A HREF=\"http://reports.internic.net/cgi/whois?whois_nic=ideafarm.net&type=domain\" TARGET=\"_new\">1999: ideafarm.net</A>"
        "<LI><A HREF=\"http://reports.internic.net/cgi/whois?whois_nic=ideafarm.com&type=domain\" TARGET=\"_new\">1996: ideafarm.com</A>"
        "<UL>"
        "  All of the later registrants are commercial entities, all marketing firms!"
        "  I registered the ideafarm.com domain in January 1996, creating it."
        "  So the domain registration history for \"ideafarm\" will not suprise you."
        "  It was marketing people (lawyers marketing their services), who created SPAM."
        "  And marketing people are the worst, the lowest of the low, the scummiest of the scum."
        "  But the general public is not so prosocial."
        "  Of course they would abide by the design, for the good of everyone on the Internet, by respecting the .COM .ORG .NET .GOV root branches of the name tree."
        "  Of course people would decline to renew their registrations when they ceased using the name!"
        "  They never spammed each other on the original collegiate Arpanet."
        "  Software nerds and the other techies who created the Internet were so clueless."
        "  A nominal registration fee was naively expected to suffice to prevent squatting and lead people to release a name when they ceased using it."
        "  This scheme had the potential to avoid \"name collisions\" in cyberspace automatically and costlessly, by allowing individuals to grab exclusive use of a name on a first come, first served basis."
        "  \".GOV\" domains were supposed to be for territorial government entities."
        "  \".NET\" domains were supposed to be for Internet service providers, organizations responsible for providing the computation and interconnection resources that make the Internet possible."
        "  \".ORG\" domains were supposed to be for nonprofit and other noncommercial organizations."
        "According to the original domain name scheme, commercial entities are supposed to use \".COM\" domains.:"
        "<P>"
        "<I>Use of the IdeaFarm " "(tm) Mark in Internet Domain Name Registrations</I>"
        "<P>"
        "  Anyone with a few minutes can browse the Internet archives by clicking the following links to see for themselves:"
        "  There is no need for lawyers or a courtroom to determine who is the first user of this mark, and its rightful user."
        "  But it is my hope that, in the marketplace itself, they will become so embarrassed by the sins of their youth that they will abandon their use of it voluntarily."
        "  Those who have plagiarized the mark that I have been using since 1992 might never be forced in courtroom to come up with their own mark."
        "  It will redefine the whole software industry, and even redefine the idea of a \"computer\"."
        "  It will be a \"product of the year\" in the software marketplace."
        "  IdeaFarm " "(tm) Piggyback Distributed Operating System is going to be big."
        "  But, for those who have plagiarized my mark for their own use, What Goes Around is about to Come Around in a big way."
        "  I have been a two-bit operator for 15 years, a man who others could safely walk all over without fear."
        "<P>"
        "  And, being roughly equally matched against each other, no one of these marketers can hope to overcome his several rivals."
        "  They can attack neither me nor each other in court."
        "  For none of them have any defensible claim to the mark, as my own prior use of it is a matter of public record."
        "  They do not appear to see that this is a hopeless enterprise; all they can accomplish is the mark's complete destruction."
        "  They are all working hard to outdo each other in building market awareness of the mark as a mark for their marketing consulting services."
        "  What is particularly amusing is that every single one of the plagiarists are marketers."
        "<P>"
        "  I often encounter people who are familiar with the mark, but no one has a clear idea what it marks, with each person thinking of a different company."
        "  Even if I died tomorrow and my business disappeared like a soap bubble, these plagiarists have ruined the mark for each other."
        "  Now someone is even marking a software product, not produced by me, with \"IdeaFarm\"."
        "  The first plagiarist, a marketing company, must now deal with three other marketing companies who are also using the mark!"
        "  But what goes around does indeed come around."
        "  As a small business operator struggling to write <B>an entire computer operating system</B> all by myself, I have not had the resources needed to complain to the courts about these people."
        "<P>"
        "  This will happen, because the history of this mark is easily viewed by anyone with a web browser."
        "  They will regret this as the sins of their youth become widely known."
        "  Each of them then went on to put a lot of money and effort at risk by plagiarizing the IdeaFarm " "(tm) mark."
        "  There was a moment when each of these other people decided that I was a runt that they could just be a bully and beat up."
        "  When used to mark a software product, they harm me by selling \"counterfeit\" IdeaFarm " "(tm) software, and they dilute the meaning of the mark to the point of destroying its usefulness in the software market."
        "  When used to mark nonsoftware products and services, they harm me by \"diluting\" the meaning of the mark."
        "<P>"
        "  Others who have chosen to mark their own products with this mark cannot claim to have been ignorant of its prior and current use by me."
        "  This usage history has been visible via both trademark search and, from 1996 onward, by simply viewing the ideafarm.com web site."
        "The history of the IdeaFarm " "(tm) trademark illustrates the dysfunction inherent in societies characterized by selfishness."
        "<P>"
        "<I>What Goes Around, Comes Around</I>"
        "<P>"
        "  But my name is Popeye the Sailor Man, and I am about to eat some spinach..."
        "  Since 1992, I have been easy prey for any bully who came along."
        "  But I am, as business people go, a runt."
        "  I registered this mark in the United States in 1992 and have used it continuously since then to mark my custom and packaged software products."
        "<P>"
        "  The selfish entrepreneur, in contrast, says, \"Fuck the other guy.  I'll use it anyway.  If the need arises, I'll hire a lawyer to beat the crap out of him.  I'm bigger than he is, and tougher; he looks like a wimp.  I want the mark that he is using.  So I'm just gonna take it.\""
        "  The unselfish entrepreneur, upon discovering that his beloved trademark idea is already being used, says, \"I've got to respect that, for the benefit of everyone in the market.  I'll just have to keep working to come up with a good mark that isn't already being used.\""
        "<P>"
        "<I>Summary</I>"
        "</CENTER>"
        "<P>"
        "Wo'O Ideafarm"
        "by<BR>"
        TITLEtM "<BR>"
        "<CENTER>"





//
//www.ideafarm.net/ IdeaFarmOffers franchise marketing support programs, materials and services.
//
//www.ideafarm.com/ IdeaFarm " "(tm) Associates - economic association for unselfish people. We meet for dinner and brotherhood/sisterhood every 8 days at 6PM at the nearest fast food joint.
//
//www.ideafarm.com.au/ IdeaFarm. Strategic Innovation. website by good.
//
//www.ideafarm.co.za/ IDEAFARM :: business creativity & innovation catalystsIdeafarm is an organisation that helps companies grow revenue through process, product, and service innovations. As a catalyst to the innovation process, ...
//
//ideafarm.org/ Your browser does not support frames. Click Here to Proceed to ideafarm.org.
//
//www.rareplay.com/index.php?page=ideafarm RarePlay | IdeaFarm - Oct 17IdeaFarm provides organizations with powerful and easy to use software that enables them to tap into the creativity of their entire workforce through ...



        "<P>"
        "<I>What Goes Around... Comes Around...</I>"
        "<FONT SIZE=\"3\">"
        "<FONT STYLE=\"COLOR: white\" FACE=\"arial\">"
        "<BODY BGCOLOR=\"#000000\" >"
        "</HEAD>"
        "    </STYLE>"
        "        }"
        "            font-variant: small-caps"
        "        {"
        "        SPAN.blackisneat"
        "    <STYLE type=\"text/css\">"
        "    <META NAME=\"KEYWORDS\" CONTENT=\"trademarks, selfishness\">"
        "    <META NAME=\"DESCRIPTION\" CONTENT=\"The IdeaFarm " "(tm) trademark was invented and registered by Wo Of Ideafarm in 1992.\">"
        "    <TITLE>" TITLEtM USCORE79 "</TITLE>"
        "<HEAD>"

    TN( tnf ,
{
ZE( countT   , costxTM ) ;
ZE( osTextT* , postxTM ) ;

}
    costxIPDOS = etThread.strMakeF( tinP , LF , postxIPDOS , t0+tnf ) ; ___( postxIPDOS ) ;
    textC t0 = T("HTTP/1.1 200 OK\r\nCache-Control: no-cache\r\nPragma: no-cache\r\nContent-Type: text/html\r\nContent-Length: ")+TF4(tnf.csF(tinP),flFORMAT_FILLzE|flFORMAT_NObASE|flFORMAT_FOREIGN,8,0xa)+T("\r\n\r\n") ;

    ) ;

        "</BODY>"
        "  <A HREF=\"http://ifc1.ideafarm.com:902/\">http://ifc1.ideafarm.com:902/</A>"
        "  To access IPDOS (tm) now, click this link:"
        "  Each IPDOS (tm) home can be accessed via any web browser by specifying port 902, the registered well known system port IDEAFARM-CHAT."
        "  Each of these computers hosts one or more IPDOS (tm) \"homes\"."
        "<B>IdeaFarm " "(tm) Piggyback Distributed Operating System</B> is a single global entity computationally distributed over many computers."
        "<P>"
        "  <B>IPDOS (tm)</B> is the tool that will enable <B>IdeaFarm " "(tm) Associates</B> to \"Connect People Wholesomely\"."
        "  This trademark has been in continuous use since 1992 to market <B>IdeaFarm (tm) Electronic Book Distribution System</B>, the predecessor to <B>IdeaFarm " "(tm) Piggyback Distributed Operating System</B>, or <B>IPDOS (tm)</B>."
        "  The <B>IdeaFarm " "(tm)</B> trademark has been registered in the state of California since 1992 for the software product category."
        "This web site is served by the <B>IdeaFarm " "(tm) Piggyback Distributed Operating System</B>."
        "<P>"
        "</CENTER>"
        "</FONT>"
        "<P>"
        "<B>Who:</B> To access IPDOS (tm), you must become an IdeaFarm " "(tm) Associate."
        "<P>"
        "<B>How:</B> Give unselfish people access to a computer of infinite power."
        "<P>"
        "<B>Why:</B> To connect people wholesomely and empower them."
        "<P>"
        "<B>What:</B> A \"global virtual computer\"."
        "<P>"
        "<B><I>IdeaFarm " "(tm) Piggyback Distributed Operating System - IPDOS (tm)</B></I>"
        "<FONT SIZE=\"6\">"
        "<CENTER>"
        "<P>"
        "<I>Connecting People Wholesomely... Globally...</I>"
        "<FONT SIZE=\"3\">"
        "<FONT STYLE=\"COLOR: white\" FACE=\"arial\">"
        "<BODY BGCOLOR=\"#000000\" >"
        "</HEAD>"
        "    </STYLE>"
        "        }"
        "            font-variant: small-caps"
        "        {"
        "        SPAN.blackisneat"
        "    <STYLE type=\"text/css\">"
        "    <META NAME=\"KEYWORDS\" CONTENT=\"operating system, distributed computing, ms windows\">"
        "    <META NAME=\"DESCRIPTION\" CONTENT=\"Computer software used by IdeaFarm " "(tm) Associates to connect people wholesomely globally.\">"
        "    <TITLE>IdeaFarm " "(tm) Piggyback Distributed Operating System - IPDOS (tm) " USCORE79 "</TITLE>"
        "<HEAD>"

    TN( tnf ,
{
ZE( countT   , costxIPDOS ) ;
ZE( osTextT* , postxIPDOS ) ;

}
    costxIA = etThread.strMakeF( tinP , LF , postxIA , t0+tnf ) ; ___( postxIA ) ;
    textC t0 = T("HTTP/1.1 200 OK\r\nCache-Control: no-cache\r\nPragma: no-cache\r\nContent-Type: text/html\r\nContent-Length: ")+TF4(tnf.csF(tinP),flFORMAT_FILLzE|flFORMAT_NObASE|flFORMAT_FOREIGN,8,0xa)+T("\r\n\r\n") ;

    ) ;

        "</BODY>"
        "</FORM>"
        "    <INPUT TYPE=\"Submit\" NAME=\"Submit\" VALUE=\"Submit\"> "
        "    Note: <TEXTAREA NAME=\"note\" COLS=\"31\" ROWS=\"5\"></TEXTAREA>"
        "    <INPUT TYPE=\"radio\" VALUE=\"Other (specify below)\" NAME=\"language\"> Other (specify below)<BR>"
        "    <INPUT TYPE=\"radio\" VALUE=\"Spanish\" NAME=\"language\"> Spanish<BR>"
        "    <INPUT TYPE=\"radio\" VALUE=\"English\" NAME=\"language\" CHECKED> English<BR>"
        "    Conversational Language:<BR>"
        "    Email:                   <INPUT TYPE=\"text\" SIZE=\"41\" NAME=\"email\" value=\"\"><BR>"
        "    Postal Code (Zip Code):  <INPUT TYPE=\"text\" SIZE=\"41\" NAME=\"zip\" value=\"\"><BR>"
        "    Country:                 <INPUT TYPE=\"text\" SIZE=\"41\" NAME=\"country\" value=\"United States of America\"><BR>"
        "    <INPUT TYPE=\"hidden\" VALUE=\"emailzip\" NAME=\"form\">"
        "<FORM METHOD=\"POST\" NAME=\"querylocation\" ACTION=\"http:/emailzip.html\">"
        "<P>"
        "No newsletters or spam will be sent to you, only information on where and when your local village meets for dinner. Tell the organizer, \"Count Me In!\":"
        "<P>"
        "Email addresses entered below are only used to send you information about the dinners in your postal code.  You can enter the email address of someone who has agreed to relay that information to you."
        "<B>Can I participate even if I do not have an email address?</B>"
        "<P>"
        "Perhaps.  But that homeless person is, like you, interested in living unselfishly.  He will do his best to wear clean clothes, and he won't ask you to purchase his meal for him.  Everyone uses only first names at the dinners."
        "<B>I am a wealthy person.  Will I have to sit next to a homeless person?</B>"
        "<P>"
        "Yes.  But remember, each person pays for his own meal."
        "<B>I am homeless.  Am I welcome?</B>"
        "<P>"
        "Yes.  Attendance at the dinners is open, free, and anonymous.  (Exception: Hosts must be members.)"
        "<B>Can I participate without becoming a member?</B>"
        "<P>"
        "Yes, you are welcome.  But you may not solicit.  Our dinners are not the place to \"network\", i.e. look for people who can do something for you.  The dinners are opportunities for you to get to know others so that you can discover what you can do for them."
        "<B>I am unselfish, and I need a job.  Am I welcome?</B>"
        "<P>"
        "No.  Selfish people network.  Selfish people seek association with those who can do something for them.  Selfish people look for opportunities to take, not to give.  We are an association of people who come together with a sincere interest in getting to know each other, with the goal of discovering what we can do for the other person, rather than what the other person can do for us."
        "<B>Is this a networking opportunity?</B>"
        "<P>"
        "This is an economic association, not a charity.  The dinner gatherings create the opportunity for people in a locale to come together regularly for a meal, without regard to economic or social status, for the purpose of getting to know each other."
        "<B>Why aren't the meals free?</B>"
        "<P>"
        "<B>Where and when are the dinners, and who pays for them?</B> The teenage hosts for your postal code select an inexpensive, healthy fast food restaurant, set a schedule, and welcome people at the dinners.  Each person pays for his or her own meal."
        "<P>"
        "For each postal code, worldwide, 16 or more people, including 2 teenage hosts, make a \"village\".  These groups meet for dinner every 8 days.  There are no other meetings or events.  The \"host\" is the only formal leadership role; hosts must be teenagers.  Meetings are open to people of all ages."
        "<B>How is this organized?</B>"
        "<P>"
        "No."
        "<B>Are any other ideas (religious, political, social, etc.) promoted?</B>"
        "<P>"
        "Wholesome means good for the whole."
        "Living unselfishly is living wholesomely connected to others, to the Earth, and to the Higher Power in your life."
        "<B>What is \"unselfish living\"?</B>"
        "<P>"
        "<B><I>FAQ</I></B>"
        "<P>"
        "</CENTER>"
        "<object width=\"425\" height=\"350\"><param name=\"movie\" value=\"http://www.youtube.com/v/n5thnfY6BwQ\"></param><param name=\"wmode\" value=\"transparent\"></param><embed src=\"http://www.youtube.com/v/n5thnfY6BwQ\" type=\"application/x-shockwave-flash\" wmode=\"transparent\" width=\"425\" height=\"350\"></embed></object>"
        "</FONT>"
        "<P>"
        "<B>Who:</B> All are welcome.  Leadership is provided by teenagers."
        "<P>"
        "<B>How:</B> We eat dinner together every 8 days."
        "<P>"
        "<B>Why:</B> To encourage unselfish living."
        "<P>"
        "<B>What:</B> An economic association."
        "<P>"
        "<B><I>IdeaFarm " "(tm) Associates</B></I>"
        "<FONT SIZE=\"6\">"
        "<CENTER>"
        "<P>"
        "<I>Connecting People Wholesomely... Locally...</I>"
        "<FONT SIZE=\"3\">"
        "<FONT STYLE=\"COLOR: white\" FACE=\"arial\">"
        "<BODY BGCOLOR=\"#000000\" >"
        "</HEAD>"
        "    </STYLE>"
        "        }"
        "            font-variant: small-caps"
        "        {"
        "        SPAN.blackisneat"
        "    <STYLE type=\"text/css\">"
        "    <META NAME=\"KEYWORDS\" CONTENT=\"unselfishness,wholesome connectedness,people,Earth,higher power,selfish,selfishness,good,evil,sustainability,peace,fear,greed,love,deep love\">"
        "    <META NAME=\"DESCRIPTION\" CONTENT=\"An economic association for unselfish people.  We meet for dinner and brotherhood/sisterhood every 8 days at 6PM at the nearest healthy fast food restaurant.\">"
        "    <TITLE>IdeaFarm " "(tm) Associates " USCORE79 "</TITLE>"
        "<HEAD>"

    TN( tnf ,
{
ZE( countT   , costxIA ) ;
ZE( osTextT* , postxIA ) ;

}
    costxHome = etThread.strMakeF( tinP , LF , postxHome , t0+tnf ) ; ___( postxHome ) ;
    textC t0 = T("HTTP/1.1 200 OK\r\nCache-Control: no-cache\r\nPragma: no-cache\r\nContent-Type: text/html\r\nContent-Length: ")+TF4(tnf.csF(tinP),flFORMAT_FILLzE|flFORMAT_NObASE|flFORMAT_FOREIGN,8,0xa)+T("\r\n\r\n") ;

    ) ;

        "</BODY>"
        "</FONT>"
        "</UL>"
        "<LI>a login account"
        "<LI>membership"
        "<UL>"
        "<P>"
        "What you can purchase here:"
        "<P>"
        "</UL>"
        "<LI>log in to our computer system"
        "<LI>join us for dinner"
        "<UL>"
        "<P>"
        "What you can do here:"
        "<P>"
        "</UL>"
        "<LI><A HREF=\"tm.html\">" TITLEtM "</A>"
        "<LI><A HREF=\"ipdos.html\">IdeaFarm " "(tm) Piggyback Distributed Operating System - IPDOS (tm)</A>"
        "<LI><A HREF=\"ia.html\">IdeaFarm " "(tm) Associates</A>"
        "<UL>"
        "<P>"
        "What you can read here:"
        "<P>"
        TRADEMARKnOTICE
        "This is the official site for software products marked with the IdeaFarm " "(tm) trademark.  "
        "<P>"
        "  Such products and services are marked with the IdeaFarm " "(tm) trademark."
        "  The project is funded solely by the export of products and services produced within IdeaFarm " "(tm) City."
        "  The Constitutional Declaration prohibits the Governing Proprietor from receiving donations."
        "  This project is not funded by either territorial governments or donors."
        "IdeaFarm " "(tm) City is a civic and political project that could advance liberty."
        "<P>"
        "  As the property of a citizen of the United States of America, IdeaFarm " "(tm) City enjoys the full protection given by U.S. law to private property."
        "  IdeaFarm " "(tm) City, an external association constituted by declaration in 1999, is the property of Wo of Ideafarm."
        "  Wo of Ideafarm, a citizen of the United States of America, asserts his right to create an external association that exists in cyberspace."
        "  The Internet, i.e. \"cyberspace\", can be viewed as a newly discovered continent, a new \"place\" where people can associate."
        "  While abroad, a U.S. citizen is subject to U.S. law only to the extent that it applies on foreign soixlOld."
        "  While abroad, they are within the jurisdiction of the law of the sovereign government of that territory."
        "  Citizens of the United States of America operate outside of the jurisdiction of U.S. law whenever they travel to a foreign territory."
        "  An \"external association\" is an association that exists under the protective aegis of the U.S. Constitution yet operates outside of the jurisdiction of U.S. law."
        "IdeaFarm " "(tm) City is an \"external association\"."
        "<P>"
        "</CENTER>"
        "Governing Proprietor"
        "Wo'O Ideafarm<BR>"
        "<P>"
        "United States of America"
        "of the<BR>"
        "Federal Constitutional Protectorate<BR>"
        "<P>"
        "IdeaFarm " "(tm) City"
        "<CENTER>"
        "<P>"
        "<I>City of Light... State of Mind...</I>"
        "<FONT  SIZE=\"3\" STYLE=\"COLOR: white\" FACE=\"arial\">"
        "<BODY BGCOLOR=\"#000000\" >"
        "</HEAD>"
        "    </STYLE>"
        "        }"
        "            font-variant: small-caps"
        "        {"
        "        SPAN.blackisneat"
        "    <STYLE type=\"text/css\">"
        "    <META NAME=\"KEYWORDS\" CONTENT=\"ideafarm, ideafarm trademark, ideafarm (tm) associates, ideafarm (tm) piggyback distributed operating system, operating system\">"
        "    <META NAME=\"DESCRIPTION\" CONTENT=\"Federal Constitutional Protectorate of the United States of America\">"
        "    <TITLE>IdeaFarm " "(tm) City " USCORE79 "</TITLE>"
        "<HEAD>"

    TN( tnf ,
{
ZE( countT   , costxHome ) ;
ZE( osTextT* , postxHome ) ;

#define TRADEMARKnOTICE "IdeaFarm " "(tm) has been a registered trademark for the software product category since 1992 and has been in continuous use to mark the custom and packaged software products of Wo Ideafarm."

//OLD: }
//OLD:     costxHome = etThread.strMakeF( tinP , LF , postxHome , t0+tnf ) ; ___( postxHome ) ;
//OLD:     textC t0 = T("HTTP/1.1 200 OK\r\nCache-Control: no-cache\r\nPragma: no-cache\r\nContent-Type: text/html\r\nContent-Length: ")+TF4(tnf.csF(tinP),flFORMAT_FILLzE|flFORMAT_NObASE|flFORMAT_FOREIGN,8,0xa)+T("\r\n\r\n") ;
//OLD: 
//OLD:     ) ;
//OLD: 
//OLD:         "</BODY>"
//OLD:         //"</SPAN>"
//OLD:         "</FORM>"
//OLD:         "    <INPUT TYPE=\"Submit\" NAME=\"Submit\" VALUE=\"Submit\"> "
//OLD:         "    Note: <TEXTAREA NAME=\"note\" COLS=\"31\" ROWS=\"5\"></TEXTAREA>"
//OLD:         "    <INPUT TYPE=\"radio\" VALUE=\"Other (specify below)\" NAME=\"language\"> Other (specify below)<BR>"
//OLD:         "    <INPUT TYPE=\"radio\" VALUE=\"Spanish\" NAME=\"language\"> Spanish<BR>"
//OLD:         "    <INPUT TYPE=\"radio\" VALUE=\"English\" NAME=\"language\" CHECKED> English<BR>"
//OLD:         "    Conversational Language:<BR>"
//OLD:         "    Email:                   <INPUT TYPE=\"text\" SIZE=\"41\" NAME=\"email\" value=\"\"><BR>"
//OLD:         "    Postal Code (Zip Code):  <INPUT TYPE=\"text\" SIZE=\"41\" NAME=\"zip\" value=\"\"><BR>"
//OLD:         "    Country:                 <INPUT TYPE=\"text\" SIZE=\"41\" NAME=\"country\" value=\"United States of America\"><BR>"
//OLD:         "    <INPUT TYPE=\"hidden\" VALUE=\"emailzip\" NAME=\"form\">"
//OLD:         "<FORM METHOD=\"POST\" NAME=\"querylocation\" ACTION=\"http://ifc1.ideafarm.com/emailzip.html\">"
//OLD:         //"<FORM METHOD=\"POST\" NAME=\"querylocation\" ACTION=\"http://172.31.1.150/emailzip.html\">"//U::
//OLD:         "<P>"
//OLD:         "No newsletters or spam will be sent to you, only information on where and when your local village meets for dinner. Tell the organizer, \"Count Me In!\":"
//OLD:         "<P>"
//OLD:         "Email addresses entered below are only used to send you information about the dinners in your postal code.  You can enter the email address of someone who has agreed to relay that information to you."
//OLD:         "<B>Can I participate even if I do not have an email address?</B>"
//OLD:         "<P>"
//OLD:         "Perhaps.  But that homeless person is, like you, interested in living unselfishly.  He will do his best to wear clean clothes, and he won't ask you to purchase his meal for him.  Everyone uses only first names at the dinners."
//OLD:         "<B>I am a wealthy person.  Will I have to sit next to a homeless person?</B>"
//OLD:         "<P>"
//OLD:         "Yes.  But remember, each person pays for his own meal."
//OLD:         "<B>I am homeless.  Am I welcome?</B>"
//OLD:         "<P>"
//OLD:         "Yes.  Attendance at the dinners is open, free, and anonymous.  (Exception: Hosts must be members.)"
//OLD:         "<B>Can I participate without becoming a member?</B>"
//OLD:         "<P>"
//OLD:         "Yes, you are welcome.  But you may not solicit.  Our dinners are not the place to \"network\", i.e. look for people who can do something for you.  The dinners are opportunities for you to get to know others so that you can discover what you can do for them."
//OLD:         "<B>I am unselfish, and I need a job.  Am I welcome?</B>"
//OLD:         "<P>"
//OLD:         "No.  Selfish people network.  Selfish people seek association with those who can do something for them.  Selfish people look for opportunities to take, not to give.  We are an association of people who come together with a sincere interest in getting to know each other, with the goal of discovering what we can do for the other person, rather than what the other person can do for us."
//OLD:         "<B>Is this a networking opportunity?</B>"
//OLD:         "<P>"
//OLD:         "This is an economic association, not a charity.  The dinner gatherings create the opportunity for people in a locale to come together regularly for a meal, without regard to economic or social status, for the purpose of getting to know each other."
//OLD:         "<B>Why aren't the meals free?</B>"
//OLD:         "<P>"
//OLD:         "<B>Where and when are the dinners, and who pays for them?</B> The teenage hosts for your postal code select an inexpensive, healthy fast food restaurant, set a schedule, and welcome people at the dinners.  Each person pays for his or her own meal."
//OLD:         "<P>"
//OLD:         "For each postal code, worldwide, 16 or more people, including 2 teenage hosts, make a \"village\".  These groups meet for dinner every 8 days.  There are no other meetings or events.  The \"host\" is the only formal leadership role; hosts must be teenagers.  Meetings are open to people of all ages."
//OLD:         "<B>How is this organized?</B>"
//OLD:         "<P>"
//OLD:         //"  You will just connect wholesomely with others in your postal code by joining them at the weekly dinner gathering."
//OLD:         //"  You are only getting involved with the \"urban villages\" part."
//OLD:         //"No."
//OLD:         //"<B>If I come to the dinners, am I getting myself involved with the organizer's full vision?</B>"
//OLD:         //"<P>"
//OLD:         "No."
//OLD:         "<B>Are any other ideas (religious, political, social, etc.) promoted?</B>"
//OLD:         "<P>"
//OLD:         "Wholesome means good for the whole."
//OLD:         "Living unselfishly is living wholesomely connected to others, to the Earth, and to the Higher Power in your life."
//OLD:         "<B>What is \"unselfish living\"?</B>"
//OLD:         "<P>"
//OLD:         "<B><I>FAQ</I></B>"
//OLD:         "<P>"
//OLD:         //"  People who are wholesomely connected escape the harsh slavedrivers of selfishness: fear, greed, and loneliness."
//OLD:         //"  The First New Possibility is that we can ESCAPE ENSLAVEMENT TO SELF, and the Other Seven Possibilities do not matter."
//OLD:         //"Eight New Possibilities are visible only to those who are wholesomely connected."
//OLD:         //"<P>"
//OLD:         //"  People who are wholesomely connected can see new possibilities for self, for village, for country, and for all of humanity."
//OLD:         //"  The First Benefit is the ability to SEE NEW POSSIBILITIES, and the Other Seven Benefits do not matter."
//OLD:         //"Eight Benefits flow to people who are wholesomely connected."
//OLD:         //"<P>"
//OLD:         //"  <B>IdeaFarm " "(tm) Associates</B> develop wholesome connections with each other and with others for mutual economic benefit."
//OLD:         //"  The First Goal is to CONNECT PEOPLE WHOLESOMELY, and the Other Seven Goals do not matter."
//OLD:         //"There are Eight Goals to achieve by organizing <B>IdeaFarm " "(tm) Associates</B>."
//OLD:         //"<P>"
//OLD:         //"  Although the organizer's work is a labor of love, it is work, and he is doing it to obtain money."
//OLD:         //"  The First Reason is to OBTAIN MONEY, and the Other Seven Reasons do not matter."
//OLD:         //"There are Eight Reasons why a man works."
//OLD:         //"<P>"
//OLD:         //"<B><I>The Eight Reasons: An Analytical Penetration To The Core of IdeaFarm " "(tm) Associates</B></I>"
//OLD:         //"<P>"
//OLD:         "</CENTER>"
//OLD:         "<object width=\"425\" height=\"350\"><param name=\"movie\" value=\"http://www.youtube.com/v/n5thnfY6BwQ\"></param><param name=\"wmode\" value=\"transparent\"></param><embed src=\"http://www.youtube.com/v/n5thnfY6BwQ\" type=\"application/x-shockwave-flash\" wmode=\"transparent\" width=\"425\" height=\"350\"></embed></object>"
//OLD:         "</FONT>"
//OLD:         "<P>"
//OLD:         "<B>Who:</B> All are welcome.  Leadership is provided by teenagers."
//OLD:         "<P>"
//OLD:         "<B>How:</B> We eat dinner together every 8 days."
//OLD:         "<P>"
//OLD:         "<B>Why:</B> To encourage unselfish living."
//OLD:         "<P>"
//OLD:         "<B>What:</B> An economic association."
//OLD:         "<P>"
//OLD:         "<B><I>IdeaFarm " "(tm) Associates</B></I>"
//OLD:         "<FONT SIZE=\"6\">"
//OLD:         "<CENTER>"
//OLD:         "<P>"
//OLD:         "  <A HREF=\"http://ifc1.ideafarm.com:902/\">http://ifc1.ideafarm.com:902/</A>"
//OLD:         "  To access IPDOS (tm) now, click this link:"
//OLD:         "  Each IPDOS (tm) home can be accessed via any web browser by specifying port 902, the registered well known system port IDEAFARM-CHAT."
//OLD:         "  Each of these computers hosts one or more IPDOS (tm) \"homes\"."
//OLD:         "<B>IdeaFarm " "(tm) Piggyback Distributed Operating System</B> is a single global entity computationally distributed over many computers."
//OLD:         "<P>"
//OLD:         "This web site is served by the <B>IdeaFarm (tm) Piggyback Distributed Operating System</B>.  The <B>IdeaFarm (tm)</B> trademark has been registered in the state of California since 1992 for the software product category.  This trademark has been in continuous use since 1992 to market <B>IdeaFarm (tm) Electronic Book Distribution System</B> and its successor software products, including <B>IdeaFarm (tm) Piggyback Distributed Operating System</B>, or <B>IPDOS (tm)</B>.  <B>IPDOS (tm)</B> is the tool that will enable <B>IdeaFarm " "(tm) Associates</B> to \"Connect People Wholesomely\"."
//OLD:         "<P>"
//OLD:         "<I>Connecting People Wholesomely...</I>"
//OLD:         //"<P>"
//OLD:         //"<HR>"
//OLD:         //"<P>"
//OLD:         //"Thank you for reading these preliminaries."
//OLD:         //"<P>"
//OLD:         //"</FONT>"
//OLD:         //"  We need to get behind IPv6 completely and work hard to eliminate NAT and restore the original simplicity of an Internet in which every computer enjoys equal addressability."
//OLD:         //"  This nonsense has virtually eliminated the development of new peer to peer system architectures, forcing designers to deal with a world in which most of the computers are hidden behind NAT's and cannot accept connections from, or be seen by, other computers."
//OLD:         //"  The sharing of address numbers is a nightmare for software developers."
//OLD:         //"  In today's Internet, we have 10,000 computers sharing 100 address numbers."
//OLD:         //"  Instead, the industry worked around the problem by devising schemes for sharing numbers."
//OLD:         //"  As people realized that we would run out of numbers that can be stored using 32 bits, we should have united behind the push to convert to the use of 128 bits (IPv6)."
//OLD:         //"  Today's Internet has abandoned this simplicity with the widespread use of NAT, or Nominal Address Translation."
//OLD:         //"  Think of 100 computers, each assigned a single number from 1 to 100."
//OLD:         //"In the beginning, the Internet had a simple design, in that it interconnected computers, with each computer having an address number."
//OLD:         //"<P>"
//OLD:         //"<FONT SIZE=\"3\"><B><I>Threat #3: Abandonment of the original, simple, and elegant design of the Internet</B></I></FONT>"
//OLD:         //"<P>"
//OLD:         //"  He is working to realize that vision before the window of opportunity slams shut."
//OLD:         //"  Wo'O Ideafarm has one such vision."
//OLD:         //"  Instead, human beings worldwide will be free to \"emigrate\" there and construct new and unimaginable forms of self government."
//OLD:         //"  It will not be colonized by the old powers."
//OLD:         //"  Let us fight, to the death if need be, for the idea that Cyberspace is indeed a separate place, a newly discovered continent."
//OLD:         //"  This newly discovered continent gives us a window of opportunity to tell territorial governments \"No!\""
//OLD:         //"  But why should that regulation be provided by the territorial governments?"
//OLD:         //"  Wherever humans gather to exploit scarce resources, regulation is needed."
//OLD:         //"  When a woman in Mexico confers with a man in Kenya, does that conversation occur in Mexico or Keyna?"
//OLD:         //"  Cyberspace is a new place where humans can cooperate."
//OLD:         //"  The emergence of the Internet in the 1990's is like the discovery of a new continent."
//OLD:         //"  Control over territory is the original and natural function of territorial government."
//OLD:         //"Do you love liberty?"
//OLD:         //"<P>"
//OLD:         //"<FONT SIZE=\"3\"><B><I>Threat #2: Assertions by territorial governments that they have jurisdiction in cyberspace</B></I></FONT>"
//OLD:         //"<P>"
//OLD:         //"  "
//OLD:         //"  When used on a nonsoftware product, please refrain from capitalizing only the 'I' and the 'F', so that your mark will not be confused with \"<B>IdeaFarm " "(tm)</B>.\""
//OLD:         //"  By using it on a software product, you are telling your potential customers that you are a slimeball."
//OLD:         //"  It should not be used on other software products at all."
//OLD:         //"  Wo'O Ideafarm, the 1992 creator of the <B>IdeaFarm " "(tm)</B> mark, hereby asks all other users of that mark to show their integrity by respecting his rights."
//OLD:         //"<P>"
//OLD:         //"  Unselfish people know that \"What Goes Around, Comes Around!\""
//OLD:         //"  Unselfish people would say, \"Gee, it's a good trademark, but it is already in use by someone else.  Let's respect that and work some more to come up with a good trademark of our own!\""
//OLD:         //"  Unselfish people wouldn't behave that way."
//OLD:         //"  Wo'O Ideafarm has a message for the unscrupulous business people who infringe on his trademark, especially those who use it on software products:"
//OLD:         //"<P>"
//OLD:         //"  After Wo'O Ideafarm refuses, reasonably, to sell the trademark, they simply think, \"Fine; I'll just use it anyway.\""
//OLD:         //"  They don't care."
//OLD:         //"  Others who infringe on his rights by using his trademark, even to the detail of capitalizing the 'F', know that he has."
//OLD:         //"  Wo'O Ideafarm has invested 15 years of his life in the <B>IdeaFarm " "(tm)</B> trademark for his software."
//OLD:         //"<P>"
//OLD:         //"  Other businesspeople who use <B>IdeaFarm " "(tm)</B> cannot claim to have been unaware of Wo'O Ideafarm's prior use of it for software when they decided to apply it to their own products."
//OLD:         //"  All major search engines have listed http://www.ideafarm.com near the top of searches for \"ideafarm\" for many years."
//OLD:         //"  The web site http://www.ideafarm.com has been up almost continuously since the early 1990's."
//OLD:         //"  There is no excuse for this.  Any competent trademark search would have revealed the California registration."
//OLD:         //"  This will confuse software users."
//OLD:         //"  There is now an unscrupulous businessperson who has decided to apply it to his own software product."
//OLD:         //"  They have diluted its power by applying it to nonsoftware products."
//OLD:         //"  Over the years, unscrupulous business people have infringed on Wo'O Ideafarm's rights to this trademark."
//OLD:         //"<P>"
//OLD:         //"  "
//OLD:         //"  Over this period, Wo'O has also used the mark on minor titles, such as the <B>IdeaFarm " "(tm) File Adder</B> utility."
//OLD:         //"  The major packaged software titles bearing this mark are <B>IdeaFarm (tm) Electronic Book Distribution System for OS/2</B>, which was released in 1995, rewritten to support Windows in 1999, and rewritten again to become the present bearer of the mark, <B>IPDOS (tm) IdeaFarm " "(tm) Piggyback Distributed Operating System</B>."
//OLD:         //"  Custom software marked <B>IdeaFarm " "(tm)</B> has been produced for Laserscope Corporation, Peak Systems, Inc., GW Associates, and IBM Corporation."
//OLD:         //"  Over that period, it has been in continuous use by Wo'O Ideafarm to mark custom and packaged software written by him."
//OLD:         //"  This trademark has been registered in the State of California since 1992 for the <B>software</B> product category."
//OLD:         //"<B>IdeaFarm " "(tm)</B> is a registered trademark of Wo'O Ideafarm."
//OLD:         //"<P>"
//OLD:         //"<FONT SIZE=\"3\"><B><I>Threat #1: </I>IdeaFarm " "(tm) <I>trademark infringement</B></I></FONT>"
//OLD:         //"<FONT SIZE=\"2\">"
//OLD:         //"<P>"
//OLD:         //"</UL>"
//OLD:         //"<LI>Abandonment of the original, simple, and elegant design of the Internet"
//OLD:         //"<LI>Assertions by territorial governments that they have jurisdiction in cyberspace"
//OLD:         //"<LI><B>IdeaFarm " "(tm)</B> trademark infringement"
//OLD:         //"<UL>"
//OLD:         //"<P>"
//OLD:         //"Current threats:  The mission is threatened!  Get involved!  Inform yourself about this project!"
//OLD:         //"<P>"
//OLD:         //"</UL>"
//OLD:         //"<LI><B>IdeaFarm " "(tm) City</B>"
//OLD:         //"<LI><B>IdeaFarm " "(tm) Associates</B>"
//OLD:         //"<LI><B>IdeaFarm " "(tm) Piggyback Distributed Operating System (\"IPDOS (tm)\")</B>"
//OLD:         //"<UL>"
//OLD:         //"<P>"
//OLD:         //"The products:"
//OLD:         //"<P>"
//OLD:         //"</UL>"
//OLD:         //"<LI>Obtain U.S. Supreme Court affirmation of sovereign \"external associations\" in cyberspace that exist outside of the jurisdictions of all territorial governments."
//OLD:         //"<LI>Organize weekly dinner gatherings at healthy fast food joints, hosted by teenagers, where anyone can drop in for an hour of fellowship."
//OLD:         //"<LI>Deploy software that connects people wholesomely, worldwide, with security and accountability."
//OLD:         //"<UL>"
//OLD:         //"<P>"
//OLD:         //"The approach:"
//OLD:         //"<P>"
//OLD:         //"</UL>"
//OLD:         //"<LI>The end of serfdom: Ending the subordination of individuals to territorial governments, worldwide."
//OLD:         //"<LI>Urban \"villages\" worldwide where people committed to living unselfishly can experience true community."
//OLD:         //"<LI>An Internet with ze""ro regulation, ze""ro taxation, and ze""ro spam."
//OLD:         //"<UL>"
//OLD:         //"<P>"
//OLD:         //"The vision:"
//OLD:         //"<P>"
//OLD:         //"</FONT>"
//OLD:         //"The invitation: <B>Come, Eat With Us!</B>"
//OLD:         //"The mission: <B>Connect People Wholesomely (Encourage Unselfish Living)</B><BR>"
//OLD:         //"The man: Wo'O Ideafarm<BR>"
//OLD:         "<FONT SIZE=\"3\">"
//OLD:         "<FONT STYLE=\"COLOR: white\" FACE=\"arial\">"
//OLD:         //"<SPAN class=\"blackisneat\">"
//OLD:         "<BODY BGCOLOR=\"#000000\" >"
//OLD:         "</HEAD>"
//OLD:         "    </STYLE>"
//OLD:         "        }"
//OLD:         "            font-variant: small-caps"
//OLD:         "        {"
//OLD:         "        SPAN.blackisneat"
//OLD:         "    <STYLE type=\"text/css\">"
//OLD:         "    <META NAME=\"KEYWORDS\" CONTENT=\"unselfishness,wholesome connectedness,people,Earth,higher power,selfish,selfishness,good,evil,sustainability,peace,fear,greed,love,deep love\">"
//OLD:         "    <META NAME=\"DESCRIPTION\" CONTENT=\"An economic association for unselfish people.  We meet for dinner and brotherhood/sisterhood every 8 days at 6PM at the nearest healthy fast food restaurant.\">"
//OLD:         "    <TITLE>IdeaFarm " "(tm) Associates</TITLE>"
//OLD:         "<HEAD>"
//OLD: 
//OLD:     TN( tnf ,
//OLD: {
//OLD: ZE( countT   , costxHome ) ;
//OLD: ZE( osTextT* , postxHome ) ;

ZE( boolT , bHandedOff ) ;
batonC b_pbdVarying( tinP , TAG( TAGiDnULL ) , 0 , flBATONc_ALLOWsLEEPwHILEgRABBED /*LEGACY WORKAROUND*/ ) ;
ZE( byteT* , pbdVarying ) ;
signC sgnIdPortReplaced( tinP , TAG( TAGiDnULL ) ) ;

//etThread.osThreadSwitchingDesireF( tinP , ifcTHREADpRIORITY_RUSH ) ;

TELL( "preparing for work" ) ;
TODO

DONEdRIVENsERVER( tmcF )
}
    }
        }
            POOPR
        {
        if( POOP )

        TELL( "cleaning up" ) ;
        }
            ++ s ; etThread.osSleepF( tinP , TOCK * 8 ) ; // THIS IS USED INSTEAD OF shutdown TO GIVE PACKETS TIME TO REACH THE PEER; IT IS DONE THIS WAY TO AVOID HAVING THE "SHUTDOWN" CONCEPT IN THE IFC API
            sleepC s( tinP , TAG( TAGiDnULL ) ) ;
        {
        TELL( "sleeping so client can close connection wo'th" ) ;
    
        }
            etThread.delF( tinP , psttPeer ) ;
            etThread.delF( tinP , psttKeyValueReply ) ;
            etThread.delF( tinP , psttName ) ;
            etThread.delF( tinP , pcIdName ) ;
            }
                if( bHttpWoZe ) postxNotFound[ 7 ] = '1' ;
                pso->writeF( tinP , postxNotFound , costxNotFound ) ;
                if( bHttpWoZe ) postxNotFound[ 7 ] = '0' ;
                POOPR
            {
            else
            }
                if( bHttpWoZe ) postxIPDOS[ 7 ] = '1' ;
                pso->writeF( tinP , postxTM , costxTM ) ;
                if( bHttpWoZe ) postxIPDOS[ 7 ] = '0' ;
                POOPR
            {
            else if( !etThread.strCompareF( tinP , psttName , T("/tm.html") ) )
            }
                if( bHttpWoZe ) postxIPDOS[ 7 ] = '1' ;
                pso->writeF( tinP , postxIPDOS , costxIPDOS ) ;
                if( bHttpWoZe ) postxIPDOS[ 7 ] = '0' ;
                POOPR
            {
            else if( !etThread.strCompareF( tinP , psttName , T("/ipdos.html") ) )
            }
                if( bHttpWoZe ) postxIA[ 7 ] = '1' ;
                pso->writeF( tinP , postxIA , costxIA ) ;
                if( bHttpWoZe ) postxIA[ 7 ] = '0' ;
                POOPR
            {
            else if( !etThread.strCompareF( tinP , psttName , T("/ia.html") ) )
            }
                if( bHttpWoZe ) postxHome[ 7 ] = '1' ;
                pso->writeF( tinP , postxHome , costxHome ) ;
                if( bHttpWoZe ) postxHome[ 7 ] = '0' ;
                POOPR
            {
            else if( !etThread.strCompareF( tinP , psttName , T("/") ) )
            }
                }
                    pso->writeF( tinP , postxReply , costxReply ) ;
                    costxReply = etThread.strMakeF( tinP , LF , postxReply , t0+tnf ) ; ___( postxReply ) ;
                    textC t0 = T("HTTP/1.1 200 OK\r\nCache-Control: no-cache\r\nPragma: no-cache\r\nContent-Type: text/html\r\nContent-Length: ")+TF4(tnf.csF(tinP),flFORMAT_FILLzE|flFORMAT_NObASE|flFORMAT_FOREIGN,8,0xa)+T("\r\n\r\n") ;

                    tnf += T(psttKeyValueReply)+T("</FONT></BODY>") ;
                
                    ) ;
                
                        "The following information has been received" ":\r\n\r\n"
                        "<FONT SIZE=\"3\" STYLE=\"COLOR: white\" FACE=\"arial\">"
                        //"<SPAN class=\"blackisneat\">"
                        "<BODY BGCOLOR=\"#000000\" >"
                        "</HEAD>"
                        "    </STYLE>"
                        "        }"
                        "            font-variant: small-caps"
                        "        {"
                        "        SPAN.blackisneat"
                        "    <STYLE type=\"text/css\">"
                        "    <META http-equiv=\"Content-Style-Type\" content=\"text/css\">"
                        "<HEAD>"
                
                    TN( tnf ,
                {
                ZE( countT   , costxReply ) ;
                ZE( osTextT* , postxReply ) ;

                POOPR
            {
            else if( !etThread.strCompareF( tinP , psttName , T("/emailzip.html") ) )
            if( !psttName ) ;

#endif
            }
                if( bHttpWoZe ) postxNotFound[ 7 ] = '1' ;
                pso->writeF( tinP , postxNotFound , costxNotFound ) ;
                if( bHttpWoZe ) postxNotFound[ 7 ] = '0' ;
                POOPR
            {
            else
            }
                OStEXTAK( ostoFile , ".log.port.05" ) ;
                OStEXTC( ostoFile , etherC::ifc_idHomeI_IF() , 0 ) ;
                OStEXTAK( ostoFile , "\\ideafarm." ) ;
                OStEXT( ostoFile , 0x100 )
                }
                    }
                        lake.readCloseF( tinP , handle ) ;
                        if( bHttpWoZe ) postx[ 7 ] = '1' ;
                        pso->writeF( tinP , postx , costx ) ;
                        if( bHttpWoZe ) postx[ 7 ] = '0' ;
                    {
                    else
                    }
                        if( bHttpWoZe ) postxNotFound[ 7 ] = '1' ;
                        pso->writeF( tinP , postxNotFound , costxNotFound ) ;
                        if( bHttpWoZe ) postxNotFound[ 7 ] = '0' ;
                    {
                    if( !postx )
                    TELL( "writing the requested fish image" ) ;
            
                    //}
                    //    lake.readF( tinP , postx , costx , handle , count3S( 1 , 1 ) , cSkip ) ; //SERVE HOME PAGE IF THE SPECIFIED PAGE IS NOT FOUND
                    //    cSkip = 0 ;
                    //{
                    //if( !postx )
            
                    if( *pcIdName ) lake.readF( tinP , postx , costx , handle , pcIdName , cSkip ) ;
                    ZE( countT , cSkip ) ;
                    handleC handle( tinP , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_FISH ) ;
                    ZE( countT , costx ) ;
                    ZE( osTextT* , postx ) ;
                    TELL( "retrieving the requested fish from the lake" ) ;
                {
                else
                }
                    if( bHttpWoZe ) postxLoggedOut[ 7 ] = '1' ;
                    pso->writeF( tinP , postxLoggedOut , costxLoggedOut ) ;
                    if( bHttpWoZe ) postxLoggedOut[ 7 ] = '0' ;
            
                    b_idhLever.ungrabF( tinP ) ;
                    }
                        etThread.osTimeNowF( tinP , ps->timeLogout1 , ps->timeLogout2 ) ;
                        ps->flags |= fliSESSION_ENDED ;
                    {
                    if( ps )
                    sessionS* ps = sws_session ? (sessionS*)sws_session[ 1 ] : 0 ;
                    idhLever = nicNamePeer ;
                    b_idhLever.grabF( tinP , TAG( TAGiDnULL ) ) ;
                    TELL( "writing logout confirmation reply" ) ;
                {
                else if( idRequestType == ifcIDrEQtYPE_LOGOUT )
                }
                    if( bHttpWoZe ) postxLoggedIn[ 7 ] = '1' ;
                    pso->writeF( tinP , postxLoggedIn , costxLoggedIn ) ;
                    if( bHttpWoZe ) postxLoggedIn[ 7 ] = '0' ;
                    TELL( "writing login confirmation reply" ) ;
                {
                if( bLogin )
    
                }
                    }
                        }
                            }
                                }
                                    //U:etThread.boxPutF( tinP , T("ideafarm.com//smtp/" ifcEMAIL_OLDfROM ) , tNote ) ;
                                    //TELL( "sending login confirmation email" ) ;
                                    ;
            
                                        postEMAILsECTIONhEAD_c_END)
                                        postEMAILsECTIONbODY_b_MAILcLIENTsETTINGS
                                        postEMAILsECTIONhEAD_b_MAILcLIENTsETTINGS
                                        postEMAILsECTIONhEAD_a_CONSTANTrEFERENCE
                                        postEMAILsECTIONhEAD_9_VARIABLErEFERENCE
                                        postEMAILsECTIONbODY_8_CONSTANTcONTACTS
                                        postEMAILsECTIONhEAD_8_CONSTANTcONTACTS
                                        postEMAILsECTIONhEAD_7_VARIABLEcONTACTS
                                        "!nicNameC:")+T(idhLever)+T("\r\n"
                                        "!passCode:")+T(cPassCode)+T("\r\n"
                                        postEMAILsECTIONhEAD_6_DATAdOnOTmODIFY)+T(
                                        postEMAILsECTIONhEAD_5_DATApLEASEeDIT
                                        postEMAILsECTIONbODY_4_EXPLANATION
                                        postEMAILsECTIONhEAD_4_EXPLANATION
                                        postEMAILsECTIONbODY_3_INSTRUCTIONS
                                        postEMAILsECTIONhEAD_3_INSTRUCTIONS
                                        postEMAILsECTIONhEAD_2_MESSAGE
                                        "or submit forms at http://www.ideafarm.com, you are communicating with me.  You can send email to me at mailto:")+tMyEmail+T(".\r\n"
                                        "I am ")+TF2(DDNUMB,flFORMAT_CITIZENnAME)+T(", a sentient robot and full citizen of IdeaFarm " "(tm) City.  When you request web pages\r\n"
                                        postEMAILsECTIONhEAD_1_INTRODUCTION
            
                                        T("Subject: !IFC login confirmation"
            
                                    TN( tNote , "" ) ; tNote =
                                    TN( tMyEmail , "" ) ; tMyEmail = TF2(DDNUMB,flFORMAT_CITIZENeMAIL) ;
            
                                    countT cPassCode = ru ;
                                    ranUniC ru( 0xffffffff ) ;
            
                                    bLogin = 1 ;
                                    b_idhLever.ungrabF( tinP ) ;
                                    }
                                        sws_session << (byteT*)ps ;
                                        etThread.osTimeNowF( tinP , ps->timeLogin1 , ps->timeLogin2 ) ;
                                        etThread.strMakeF( tinP , LF , ps->psttEmail , psttv ) ; ___( ps->psttEmail ) ;
                                    {
                                    if( ps )
                                    sessionS* ps = new_sessionS_F( tinP ) ;
                                    idhLever = nicNamePeer ;
                                    b_idhLever.grabF( tinP , TAG( TAGiDnULL ) ) ;
                                    TELL( "composing a login confirmation email" ) ;
                                {
                                if( psttv && psttv->idAdam )
                                etThread.strTrimF( tinP , psttv , 0 , T(TbLACKnEWlINE) ) ;
                            {
                            if( psttv && psttv->idAdam )
                            strokeS*& psttv = tblKeyValue._CT1_07F( idr , 2 ) ;
                        {
                        if( !etThread.strCompareF( tinP , tEmail , tblKeyValue._CT1_07F( idr , 1 ) ) )
                    {
                    for( countT idr = 1 ; idr <= cRows ; idr ++ )
                    countT cRows = tblKeyValue.cRowsF( tinP ) ;
                    TN( tEmail , "email" ) ;
            
                    !tblKeyValue ;
                {
                if( !POOP && tblKeyValue.cRowsF( tinP ) )
                ZE( boolT , bLogin ) ;
            {
            else if( !POOP )
            if( etThread ) ;
#if defined( NEVERdEFINED )
            TELL( "preparing to compose a reply" ) ;
            countT idRequestType = readRequestF( tinP , etThread , *pso , bMore , bHttpWoZe , pcIdName , psttName , tblKeyValue , psttKeyValueReply /*KLUDGE*/ , std_pstt , psttPeer , nicNamePeer /*, dict*/ ) ;
            ZE( strokeS* , psttKeyValueReply ) ;
            ZE( strokeS* , psttName ) ;
            TELL( "reading a request" ) ;
            ZE( boolT , bHttpWoZe ) ;
            stackC std_pstt( tinP , etThread , TAG( TAGiDnULL ) , flSTACKc_null , ifcSTACKtYPE_PTR_strokeS ) ;
            ZE( strokeS* , psttPeer ) ;
        
            tblKeyValue.newColF( tinP , T("value") ) ;
            tblKeyValue.newColF( tinP , T("key") ) ;
            tableC tblKeyValue( tinP , etThread , T("keyValue") ) ;
        
            b_pbdVarying.ungrabF( tinP ) ;
            }
                TN( t_cHamburgers , "" ) ; t_cHamburgers = TF3(++state.cHamburgers,0,8) ;
                TN( t_idMe        , "" ) ; t_idMe        = TF3(state.idMe,0,8) ;
                stateS& state = *(stateS*)pbdVarying ;
            {
            if( pbdVarying )
            b_pbdVarying.grabF( tinP , TAG( TAGiDnULL ) ) ;
        
            etThread.newF( tinP , LF , pcIdName , CCiDnAMEmAX + 1 ) ; ___( pcIdName ) ;
            ZE( countT* , pcIdName ) ;
        
            nicNameC nicNamePeer ;
            TELL( "preparing to read a request" ) ;
        {
        while( !etThread && !POOP && bMore )
        boolT bMore = 1 ;

        SCOOPS
    {
    IFsCRATCH

    PARAMS( cArg )
{
if( cArg )
TELL( "preparing for work" ) ;
TASKdRIVENsERVER( tmcF )

}
    return idRequestType ;

    }    
        }
            POOPR
        {
        if( POOP )

        etThread.delF( tinP , psttName ) ;
        etThread.delF( tinP , psttAction ) ;
        }
            }
                tinP.pEtScratch->delF( tinP , psttNameTrimmed ) ;
    
                if( offi < CCiDnAMEmAX ) pcIdNameP[ offi ++ ] = 0 ;
                }
                    tinP.pEtScratch->delF( tinP , psttw ) ;
                    else __1
                    }
                        }
                            __( !pcIdNameP[ offi ++ ] ) ;
                            tinP.pEtScratch->delF( tinP , psttw2 ) ;
                            //pcIdNameP[ offi ] = dictP( psttw2 ) ;
                            tinP.pEtScratch->strSubstringF( tinP , psttw2 , idf2 , idl2 , psttw ) ; ___( psttw2 ) ;
                            ZE( strokeS* , psttw2 ) ;
                            ZE( countT , idl2 ) ;
                            countT idf2 = 2 ;
                        {
                        else
                        if( 1 != tinP.pEtScratch->strIdF( tinP , sttDollar , psttw ) ) pcIdNameP[ offi ++ ] = tinP.pEtScratch->strDigitsToSCountF( tinP , psttw ) ;
                    {
                    if( offi < CCiDnAMEmAX - 1 )
                    tinP.pEtScratch->strSubstringF( tinP , psttw , idf , sttq , sttDot , psttNameTrimmed ) ; ___( psttw ) ;            // "$foo"
                    ZE( strokeS* , psttw ) ;
                {
                while( !POOP && idf )
                strokeS sttDollar( '$' ) ;
                strokeS sttDot( '.' ) ;
                idf = 1 ;
                ZE( countT , offi ) ;
    
                tinP.pEtScratch->strSubstringF( tinP , psttNameTrimmed , idf , idl , psttName ) ; ___( psttNameTrimmed ) ;      // "1.2.$foo.4"
                ZE( strokeS* , psttNameTrimmed ) ;
                countT idl = idDot0 ? idDot0 - 1 : 0 ;
                idf = 2 ;
    
                __( psttName->idAdam - 1 - idDot0 ) ;
                countT idDot0 = tinP.pEtScratch->strIdF( tinP , countTC( 1 ) , sttq , tDot0 , psttName , 0 , - 1 ) ;
                TN( tDot0 , ".0" ) ;
                idf = 1 ;
            {
            else
            }
                pcIdNameP[ 2 ] = 0 ;
                pcIdNameP[ 1 ] = 1 ;
                pcIdNameP[ 0 ] = 1 ;
            {
            else if( psttName->idAdam == 1 )
            if( idRequestType != ifcIDrEQtYPE_FISH ) ;
            strokeS sttq( (countT)0 , sc_IGNOREqUOTES ) ;
            countT idf = 1 ;
            __( tinP.pEtScratch->strIdF( tinP , sttSlash , psttName ) - 1 ) ;                                                  // "/1.2.$foo.4.0"
            __( !psttName->idAdam ) ;
        {
        if( !POOP && !etThread )
        __Z( psttName ) ; // WILL BE NULL IF CLIENT CLOSES WITHOUT TELLING ME TO CLOSE
    
        etThread.delF( tinP , psttKV ) ;
        }
            }
                etThread.strMakeF( tinP , LF , psttKeyValueReplyP , tReply ) ; ___( psttKeyValueReplyP ) ;
            {
            if( tReply.csF( tinP ) )

            etThread.delF( tinP , psttFileName ) ;
            etThread.delF( tinP , pbFileImage ) ;
            etThread.boxPutUniqueF( tinP , psttFileName , T("///ideafarm/ephemeral/backed.up.daily/domains/com/ideafarm/")+TF1(ifcIDaDAM_ROOTfORMdATAeATER)+T("/in/form") , pbFileImage , offo ) ;
            ZE( strokeS* , psttFileName ) ;

            tinP.pEtScratch->delF( tinP , pstt1e ) ;
            }
                }
                    tblKeyValueP.newObjectF( tinP , psttv ) ;
                    tblKeyValueP.newObjectF( tinP , psttk ) ;
                    tblKeyValueP.newEventF( tinP ) ;
    
                    std_psttP << psttv ;
                    std_psttP << psttk ;

                    }
                        etThread.delF( tinP , postv ) ;
                        thirdC::c_memcpyIF( tinP , pbFileImage + offo , postv , costa ) ; offo += costa ;
                        countT costa = 1 + etThread.strMakeF( tinP , LF , postv , psttv ) ; ___( postv ) ;
                        ZE( osTextT* , postv ) ;
                    {
                    if( offo + psttv->idAdam + 1 < cbaFileImage )

                    }
                        etThread.delF( tinP , postk ) ;
                        thirdC::c_memcpyIF( tinP , pbFileImage + offo , postk , costa ) ; offo += costa ;
                        countT costa = 1 + etThread.strMakeF( tinP , LF , postk , psttk ) ; ___( postk ) ;
                        ZE( osTextT* , postk ) ;
                    {
                    if( offo + psttk->idAdam + 1 < cbaFileImage )

                    tReply += T(psttk)+T(":")+T(psttv)+T("\r\n") ;

                    }
                        etThread.delF( tinP , psttd ) ;
                        etThread.strSubstringF( tinP , psttv , idf , idl , psttd ) ; ___( psttv ) ;
                        countT idl = csMax ;
                        countT idf = 1 ;
                        strokeS* psttd = psttv ; psttv = 0 ;
                    {
                    if( psttv->idAdam > csMax ) 
                    const countT csMax = !etThread.strCompareF( tinP , psttk , T("note") ) ? TUCK * 0x10 : TUCK ;

                    }
                        etThread.delF( tinP , psttd ) ;
                        etThread.strSubstringF( tinP , psttk , idf , idl , psttd ) ; ___( psttk ) ;
                        countT idl = TUCK ;
                        countT idf = 1 ;
                        strokeS* psttd = psttk ; psttk = 0 ;
                    {
                    if( psttk->idAdam > TUCK ) 
                {
                else
                if( POOP ) { POOPR ; }
    
                tinP.pEtScratch->strFromUrlF( tinP , psttv ) ; ___( psttv ) ;
                tinP.pEtScratch->strFromUrlF( tinP , psttk ) ; ___( psttk ) ;
    
                tinP.pEtScratch->strSubstringF( tinP , psttv , idf , sttq , sttEq , psttc1 ) ; ___( psttv ) ;
                tinP.pEtScratch->strSubstringF( tinP , psttk , idf , sttq , sttEq , psttc1 ) ; ___( psttk ) ;
                ZE( strokeS* , psttv ) ;
                ZE( strokeS* , psttk ) ;
                strokeS sttq( (countT)0 , sc_IGNOREqUOTES ) ;
                countT idf = 1 ;
            {
            FORsTRINGSiN1( pstt1e )
            ZE( countT , offo ) ;
            etThread.newF( tinP , LF , pbFileImage , cbaFileImage ) ; ___( pbFileImage ) ;
            const countT cbaFileImage = TOCK ;
            ZE( byteT* , pbFileImage ) ;
            strokeS sttEq( '=' ) ;
            tinP.pEtScratch->strWordsOldF( tinP , pstt1e , psttKV , sttq , T("&") ) ; ___( pstt1e ) ;
            strokeS sttq( (countT)0 , sc_IGNOREqUOTES ) ;
            ZE( strokeS* , pstt1e ) ;
            TN( tReply , "" ) ;
        {
        if( !POOP && psttKV ) // STORE THE KEY/VALUE PAIRS
    
        }
            etThread.strMakeF( tinP , LF , psttKV , ( psttw ? T(psttw)+T("&") : T("") )+tBody ) ; ___( psttKV ) ; //ASSUME: psttKV IS OF FORM T("aaaa=1111&bbbb=2222&cccc=3333&dddd=4444")
            psttKV = 0 ;
            strokeS* psttw = psttKV ;
            TN( tBody , "" ) ; tBody = T(postBody) ;
    
            //LOGrAW( T("--------\r\n")+T(postBody)+T("\r\n--------\r\n") ) ; //U::
            if( postBody ) postBody[ costBody ] = 0 ;
            sInP.readF( tinP , postBody , costBody ) ;
            etThread.newF( tinP , LF , postBody , costBody + 1 ) ;
            ZE( osTextT* , postBody ) ;
        {
        if( !POOP && costBody ) // HTTP/1.1 KEYvALUE PAIRS
    
        }
            tinP.pEtScratch->delF( tinP , psttw ) ;
            tinP.pEtScratch->strWordF( tinP , psttKV   , psttw , sttq , sttQuest , 2 ) ; ___( psttKV   ) ;
            tinP.pEtScratch->strWordF( tinP , psttName , psttw , sttq , sttQuest , 1 ) ; ___( psttName ) ;
            psttName = 0 ;
            strokeS* psttw = psttName ;
        {
        if( tinP.pEtScratch->strIdF( tinP , T("?") , psttName ) ) // HTTP/1.0 KEYvALUE PAIRS
        ZE( strokeS* , psttKV ) ;
    
        }
            tinP.pEtScratch->delF( tinP , psttl ) ;
            }
                break ;
                tinP.pEtScratch->delF( tinP , psttl ) ;
            {
            else
            }
                tinP.pEtScratch->delF( tinP , psttValue ) ;
                tinP.pEtScratch->delF( tinP , psttKey ) ;
                }
                    if( tinP.pEtScratch->strIdF( tinP , tClose , psttValue ) ) bMoreP = 0 ;
                {
                else if( !tinP.pEtScratch->strCompareF( tinP , tConnection    , psttKey ) )
                     if( !tinP.pEtScratch->strCompareF( tinP , tContentLength , psttKey ) ) costBody = tinP.pEtScratch->strDigitsToSCountF( tinP , psttValue , 0xa , 1 ) ;
                tinP.pEtScratch->strSubstringF( tinP , psttValue , idf , idl , psttl ) ; ___( psttValue ) ;
                ZE( countT , idl ) ;
                tinP.pEtScratch->strConvertToLowerCaseF( tinP , psttKey ) ; ___( psttKey ) ;
                tinP.pEtScratch->strSubstringF( tinP , psttKey , idf , sttq , tColonWhite , psttl , 1 ) ; ___( psttKey ) ;
                countT idf = 1 ;
                ZE( strokeS* , psttValue ) ;
                ZE( strokeS* , psttKey ) ;
            {
            else if( psttl && psttl->idAdam ) // HEADER LINE ASSUMED TO BE OF THE FORM, FOR EXAMPLE,  "Content-Length:1234"
            }
                if( tinP.pEtScratch->strIdF( tinP , idf , sttq , T("logout") , psttName ) ) idRequestType = ifcIDrEQtYPE_LOGOUT ;
                countT idf = 1 ;
                tinP.pEtScratch->delF( tinP , psttw ) ;
                bHttpWoZeP = !tinP.pEtScratch->strIdF( tinP , tHttp11 , psttw ) ;
                bMoreP = !!tinP.pEtScratch->strIdF( tinP , tHttp11 , psttw ) ;
                tinP.pEtScratch->strConvertToLowerCaseF( tinP , psttw ) ; ___( psttw ) ;
                tinP.pEtScratch->strWordF( tinP , psttw , psttl , sttq , sttb , 3 ) ; ___( psttw ) ;
                ZE( strokeS* , psttw ) ;
                etThread.strMakeF( tinP , LF , psttNameP , psttName ) ; ___( psttNameP ) ;
                //LOGrAW( T("url requested: \"")+T(psttName)+T("\"") ) ; //U::
                tinP.pEtScratch->strWordF( tinP , psttName , psttl , sttq , sttb , 2 ) ; ___( psttName ) ;
                tinP.pEtScratch->strConvertToLowerCaseF( tinP , psttAction ) ; ___( psttAction ) ;
                tinP.pEtScratch->strWordF( tinP , psttAction , psttl , sttq , sttb , 1 ) ; ___( psttAction ) ;
            {
            if( !psttAction ) // IF WO'TH LINE

            //LOGrAW( T(psttl)+T("\r\n") ) ; //U::
    
            if( POOP ) break ;
            sInP.readWoLineF( tinP , psttl , 0x200 ) ; ___( psttl ) ;
            ZE( strokeS* , psttl ) ;
        {
        while( !POOP && !etThread )
        ZE( countT , costBody ) ;
        ZE( strokeS* , psttName ) ;
        ZE( strokeS* , psttAction ) ;
        strokeS sttq( (countT)0 , sc_IGNOREqUOTES ) ;
        strokeS sttSlash( '/' ) ;
        strokeS sttQuest( '?' ) ;
        strokeS sttb( ' ' ) ;
        TN( tHttp11 , "http/1.1" ) ;
        TN( tLog   , "///d/log." ) ; tLog += T(DDNUMB) ;
        TN( tClose , "close" ) ;
        TN( tConnection , "connection" ) ;
        TN( tContentLength , "content-length" ) ;
        TN( tColonWhite , ": " ) ;

        SCOOPS
    {
    IFsCRATCH

    etThread.sockPsttHostF( tinP , psttPeerP , nicNamePeerP ) ; ___( psttPeerP ) ;
    { ZE( countT , idp ) ; sInP.peerNameF( tinP , idp , nicNamePeerP ) ; }

    countT idRequestType = ifcIDrEQtYPE_FISH ;
    __( bHttpWoZeP ) ;
    __( bMoreP - 1 ) ;
{
countT readRequestF( tinS& tinP , etherC& etThread , socketC& sInP , boolT& bMoreP , boolT& bHttpWoZeP , countT* pcIdNameP , strokeS*& psttNameP /*KLUDGE ADDED FOR SIMPLE SERVER*/ , tableC& tblKeyValueP , strokeS*& psttKeyValueReplyP /*KLUDGE*/ , stackC& std_psttP , strokeS*& psttPeerP , nicNameC& nicNamePeerP /*, dictionary1C& dictP*/ )
*/
 terminate pcIdNameP with a 0
  if     begin with '$': look up the word in the dictionary; if not found, use -1
  if not begin with '$': else        : - 1
  if not begin with '$': if <= 8 char: convert the word to a countT 
 convert each '.' delimited word to a countT value and place that value in pcIdNameP[]
 obtain the request that is either "/ " or "/aaaaaaaa.bbbbbbbb.cccccccc.<...>.zzzzzzzz.0 "
 read at least the wo'th line of the request
 captures domain name of peer
pseudocode
i evaluate to idRequestType
/*

#define ifcIDrEQtYPE_LOGOUT                   2
#define ifcIDrEQtYPE_FISH                     1

//==============================================================================================================================================================
//==== ABOVE THIS LINE: DAYTIME WORK ===========================================================================================================================
//==============================================================================================================================================================


//==============================================================================================================================================================
//==== BELOW THIS LINE: PROCESS STATE CODE =====================================================================================================================
//==============================================================================================================================================================

TRANSLATEsTATEdRIVENsERVER_END
    state.idMe ++ ;
TRANSLATEsTATEdRIVENsERVER_MIDDLE
    case 1 : { state.idMe        = stateOther.idMe        ; }
    case 2 : { state.cHamburgers = stateOther.cHamburgers ; }
TRANSLATEsTATEdRIVENsERVER_BEGIN( stateS , 2 )

;
}
    countT cHamburgers ;
    countT idMe ;
    countT idVersion ;
{
struct stateS

//==============================================================================================================================================================
//==== ABOVE THIS LINE: PROCESS STATE CODE =====================================================================================================================
//==============================================================================================================================================================

}
    }
        if( POOP ) POOPR
        if( psP ) tinP.pEtScratch->delF( tinP , psP->psttEmail ) ;
        SCOOPS
    {
    IFsCRATCH
{
voidT del_sessionS_ptrs_F( tinS& tinP , sessionS* psP )

}
    return (sessionS*)pbs ;
    }
        if( POOP ) POOPR
        tinP.pEtScratch->memSetF( tinP , pbs , sizeof( sessionS ) ) ;
        tinP.pEtScratch->newF(    tinP , pbs , sizeof( sessionS ) ) ; ___( pbs ) ;
        SCOOPS
    {
    IFsCRATCH
    ZE( byteT* , pbs ) ;
{
sessionS* new_sessionS_F( tinS& tinP )

;
}
    sCountT  timeLogout2 ;
    countT   timeLogout1 ;      // TIME EXPLICIT LOGOUT, IF ANY, OCCURS
    sCountT  timeConfirmed2 ;
    countT   timeConfirmed1 ;   // TIME PASSCODE IS RECEIVED VIA EMAIL
    sCountT  timeLogin2 ;
    countT   timeLogin1 ;            // TIME OF LOGIN (AND TIME WHEN PASSCODE IS EMAILED TO THE EMAIL ADDRESS GIVEN IN THE LOGIN FORM
    countT   passcode ;              // CAN BE USED ONLY WO TIME.  SET UPON LOGIN.  RESET UPON CONFIRMATION
    strokeS* psttEmail ;
    flagsT   flags ;
{
struct sessionS
*/
session management is integrated with the port.05 server because sessions are begun and ended using a port.05 client
all state information for each host session is kept in wo sessionS object
each logged in interval is called a host session
each host is either logged in or logged out
/*

    countT&       costxTM        =       *(countT*)c8p3.c5 ;
    osTextT*&     postxTM        =     *(osTextT**)c8p3.c4 ;                                                                                \
    countT&       costxIPDOS     =       *(countT*)c8p3.c3 ;                                                                                \
    osTextT*&     postxIPDOS     =     *(osTextT**)c8p3.c2 ;                                                                                \
    countT&       costxIA        =       *(countT*)c8p3.c1 ;                                                                                \
    osTextT*&     postxIA        =     *(osTextT**)c8p2.c8 ;                                                                                \
    countT&       costxHelpExe   =       *(countT*)c8p2.c7 ;                                                                                \
    osTextT*&     postxHelpExe   =     *(osTextT**)c8p2.c6 ;                                                                                \
    countT&       costxLoggedOut =       *(countT*)c8p2.c5 ;                                                                                \
    osTextT*&     postxLoggedOut =     *(osTextT**)c8p2.c4 ;                                                                                \
    countT&       costxLoggedIn  =       *(countT*)c8p2.c3 ;                                                                                \
    osTextT*&     postxLoggedIn  =     *(osTextT**)c8p2.c2 ;                                                                                \
    switchStackC& sws_session    = *(switchStackC*)c8p2.c1 ;                                                                                \
    batonC&       b_idhLever     =       *(batonC*)c8p1.c8 ;                                                                                \
    nicNameC&     idhLever       =     *(nicNameC*)c8p1.c7 ;                                                                                \
    countT&       costxHome      =       *(countT*)c8p1.c6 ;                                                                                \
    osTextT*&     postxHome      =     *(osTextT**)c8p1.c5 ;                                                                                \
    countT&       costxNotFound  =       *(countT*)c8p1.c4 ;                                                                                \
    osTextT*&     postxNotFound  =     *(osTextT**)c8p1.c3 ;                                                                                \
    batonC&       b_pbdVarying   =       *(batonC*)c8p1.c2 ;                                                                                \
    byteT*&       pbdVarying     =       *(byteT**)c8p1.c1 ;                                                                                \
                                                                                                                                            \
    count8S&      c8p3           =      *(count8S*)c3p.c3 ;                                                                                 \
    count8S&      c8p2           =      *(count8S*)c3p.c2 ;                                                                                 \
    count8S&      c8p1           =      *(count8S*)c3p.c1 ;                                                                                 \
    count3S&      c3p            =      *(count3S*)cArgP ;                                                                                  \
                                                                                                                                            \
#define PARAMS(cArgP)                                                                                                                       \

#define fliSESSION_ENDED      0x00000002
#define fliSESSION_CONFIRMED  0x00000001

#define CCiDnAMEmAX 0x10
#define COSTiN 0x1000
#define CsLOTpSO 0x4

    "note immediately to the \"abuse\" or \"fraud\" address listed below.\r\n"
    "If you suspect that someone else is entering your email address in order to harass you or to defraud you, please forward this\r\n"     \
    "\r\n"                                                                                                                                  \
    "web page.  If you did not do this, or if you would like to cancel your login, do -not- reply to this note.\r\n"                        \
    "You received this note because your email address was entered, presumably by you, at the top of the http://www.ideafarm.com\r\n"       \
    "\r\n"                                                                                                                                  \
    "you will be allowed to pass through the gate, into the city.\r\n"                                                                      \
    "Please click the \"Reply\" button to complete your login at the gate of IdeaFarm " "(tm) City.  As soon as your reply is received,\r\n"   \
                                                                                                                                            \
#define postEMAILsECTIONbODY_4_EXPLANATION                                                                                                  \

    "(b) To complete your log in, click \"Reply\".\r\n"
    "\r\n"                                                                                                                                  \
    "(a) If you did not expect to receive this, DO NOT REPLY.\r\n"                                                                          \
    "\r\n"                                                                                                                                  \
    "Do either (a) -or- (b): \r\n"                                                                                                          \
                                                                                                                                            \
#define postEMAILsECTIONbODY_3_INSTRUCTIONS                                                                                                 \

#define TITLEtM "The Official, Amusing, and Illustrative History of the IdeaFarm " "(tm) Trademark"

//OBSOLETES a340104
//OBSOLETED BY 185

/*1*/WAKEhIDE( "server.port.05.http" )/*1*/
/**/
*/
obsoleted by 1850104
\<A HREF=\"5.a840104.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

