
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


;
}
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3400f.grabitC.resetIF!||
    static voidT resetIF( tinS& tinP , byteT* const pbP , const countT ifcIdBitP = ifcIDgRABITbIT_00 , countT* const pcGrabberOsTidP = 0 , countT* const pcGrabberRecurseP = 0 ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3400e.grabitC.resetF!||
    voidT resetF( tinS& tinP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3400c.grabitC.aimF!||
    voidT aimF( tinS& tinP , flagsT flagsMaskP = flGRABITcaIMmASK_null , byteT* const pbP = 0 , const countT ifcIdBitP = ifcIDgRABITbIT_00 , countT* const pcGrabberOsTidP = 0 , countT* const pcGrabberRecurseP = 0 ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3400b.grabitC.operator_byteT_ptr_ref!||
    operator byteT&( voidT ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3400a.grabitC.ungrabIF!||
    static voidT ungrabIF( tinS& tinP , byteT* const pbP , const countT ifcIdBitP = ifcIDgRABITbIT_00 , countT* const pcGrabberOsTidP = 0 , countT* const pcGrabberRecurseP = 0 ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34009.grabitC.grabIF!||
    static voidT grabIF( tinS& tinP , const countT idLineP , const countT idiFileP , const byteT* const pbBitsP , byteT* const pbP , const countT ifcIdBitP = ifcIDgRABITbIT_00 , countT* const pcGrabberOsTidP = 0 , countT* const pcGrabberRecurseP = 0 , const countT msNapP = 0 ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34007.grabitC.ungrabF!||
    voidT ungrabF( tinS& tinP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34006.grabitC.grabF!||
    voidT grabF( tinS& tinP , const countT idLineP , const countT idiFileP , const byteT* const pbBitsP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34008.grabitC.grabitC!||
    grabitC( tinS& tinP , const countT idLineCtP , const countT idiFileCtP , const byteT* const pbBitsCtP , listingC& aptP                                              , grabitC& grabitNUP = *(grabitC*)0 , countT* const pcKeyP = 0 , countT* const pcGrabberOsTidP = 0 , countT* const pcGrabberRecurseP = 0 , const flagsT flagsP = flGRABITc_null , const countT msNapP = 0 , const countT idGrabLayerP = ifcIDgRABlAYER_7BASEmISC1 ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34005.grabitC.grabitC!||
    grabitC( tinS& tinP , const countT idLineCtP , const countT idiFileCtP , const byteT* const pbBitsCtP , countT& cP     , const countT ifcIdBitP = ifcIDgRABITbIT_00 , grabitC& grabitNUP = *(grabitC*)0 , countT* const pcKeyP = 0 , countT* const pcGrabberOsTidP = 0 , countT* const pcGrabberRecurseP = 0 , const flagsT flagsP = flGRABITc_null , const countT msNapP = 0 , const countT idGrabLayerP = ifcIDgRABlAYER_7BASEmISC1 ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34004.grabitC.grabitC!||
    grabitC( tinS& tinP , const countT idLineCtP , const countT idiFileCtP , const byteT* const pbBitsCtP , byteT& bP      , const countT ifcIdBitP = ifcIDgRABITbIT_00 , grabitC& grabitNUP = *(grabitC*)0 , countT* const pcKeyP = 0 , countT* const pcGrabberOsTidP = 0 , countT* const pcGrabberRecurseP = 0 , const flagsT flagsP = flGRABITc_null , const countT msNapP = 0 , const countT idGrabLayerP = ifcIDgRABlAYER_7BASEmISC1 ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34003.grabitC.grabitC!||
    grabitC( tinS& tinP , const countT idLineCtP , const countT idiFileCtP , const byteT* const pbBitsCtP , byteT* pbP = 0 , const countT ifcIdBitP = ifcIDgRABITbIT_00 , grabitC& grabitNUP = *(grabitC*)0 , countT* const pcKeyP = 0 , countT* const pcGrabberOsTidP = 0 , countT* const pcGrabberRecurseP = 0 , const flagsT flagsP = flGRABITc_null , const countT msNapP = 0 , const countT idGrabLayerP = ifcIDgRABlAYER_7BASEmISC1 ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3400d.grabitC.grabitC!||
    //U::20140420@1137: grabitC( const countT idLineCtP , const countT idiFileCtP , const flagsT flagsP = flGRABITc_null , const countT msNapP = 0 ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34002.grabitC.dt_grabitC!||
    ~grabitC( voidT ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34001.grabitC.NEWdELcLASSb!||
    NEWdELcLASSpROTOS

    public :

    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34010.grabitC.ctCheckF!||
    //voidT ctCheckF( voidT ) ;

    const countT msNap ;
    countT       idDesire ;
    countT*      poff_cGrabberRecurse ;
    countT*      poff_cGrabberOsTid ;  // "poff": "pointer or offset from (byteT*)this"
    countT*      poff_key ;
    byteT*       poff_bo ;
    const byteT  pbPad[ sizeof( countT ) - sizeof( byteT ) ] ;
    byteT        bitsDefault ;
    countT       keyDefault ;                                       // MUST NOT BE AT OFFSET 0 BECAUSE A NULL poff_key IS INTERPRETED AS "DON'T USE KEYED BTS BTR"
    countT       offo ;                                             // MUST BE BEFORE bitsDefault
    const flagsT flagsCt2 ;
{
/*1*/class _export grabitC : public baseGrabC/*1*/

/**/

*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
