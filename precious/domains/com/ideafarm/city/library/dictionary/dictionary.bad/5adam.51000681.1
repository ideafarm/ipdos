
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


                            
REST

etThread.loafIF( tinP ) ;
CONoUTrAW( POOP ? "loafing with POOP in my pants\r\n" : "loafing AOK\r\n" ) ;

}
    if( POOP ) { CONoUTrAW3( "" , cDo , " [cDo after]: called osThreadF and it POOPED\r\n" ) ; }
    etThread.osThreadF( tinP , countTC() , tmGorillaF , 0 , flTHREADlAUNCH_null , TOCK >> 3 ) ;
    CONoUTrAW3( "" , cDo , " [cDo after]: calling osThreadF\r\n" ) ;
{
while( cDo -- )
countT cDo = CgORILLAS ;

TODO

DONE( tmGorillaF )
}
    }
        pg3.bksTrace.writeF( tinP , ostoSay , 0 , 0 , 0 , flagsWrite ) ;

        OStEXTC(  ostoSay , idCycle , ' ' ) ;
        OStEXTAK( ostoSay , " " ) ;
        OStEXTC(  ostoSay , idGorilla , ' ' ) ;
        OStEXTAK( ostoSay , "\r\n[idGorilla,idCycle]: " ) ;
        OStEXT( ostoSay , TUCK ) ;

        idCycle ++ ;
    {
    while( !etThread && !ether )
    processGlobal3S& pg3 = processGlobal3S::_processGlobal3I_IF() ;
    ZE( countT , idCycle ) ;
    countT idGorilla = 1 + incv02AM( idGorillaLath ) ;

    const flagsT flagsWrite = flBOOKScwRITE_ALLoRnONE | flBOOKScwRITE_ALLOWoDDlENGTH ;
{
if( pTaskP )
TASK( tmGorillaF )
countT idGorillaLath ;
countT idGotAok ;

countT cDone ;

//#define CgORILLAS              0x1
//#define CgORILLAS              0x2
#define CgORILLAS              0x10

/*1*/WAKEsHOWtEXT( "gorilla: bksTrace trace" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

