
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


//VISIBLE

REST

}
    if( nicName == nicNameDoomed && pbIn && cbIn ) etThread.strokeF( tinP , T(pbIn) ) ;

    sockd.readF( tinP , pbIn , cbIn , idPort , nicName ) ;
    nicNameC nicName ;
    ZE( countT , idPort ) ;
    ZE( countT , cbIn ) ;
    ZE( byteT* , pbIn ) ;
{
while( !ether && !etThread )

etThread.osThreadF( tinP , countTC() , tmFireF , 0 , flTHREADlAUNCH_null , 0 , (countT)&nicNameDoomed , (countT)&sockd , (countT)&bQuit ) ;
ZE( boolT , bQuit ) ;

sockd.bindF( tinP ) ;
socketC sockd( tinP , etThread , TAG( TAGiDnULL ) , ifcSOCKETtYPE_DATAgRAM ) ;

nicNameC nicNameDoomed = etThread.sockNicNameF( tinP , tIP ) ;
TN( tIP , "64.239.5.37" ) ;
//TN( tIP , "216.162.169.49" ) ;

TODO

DONE( tmFireF )

}
    }
        etThread.osSleepF( tinP , TUCK * 0x80 ) ;
        sockd.writeF( tinP , ifcPORToLD2_CONTROL , nicNameDoomed , (byteT*)&c2o , sizeof c2o ) ;
    {
    while( !ether && !etThread && !bQuit )
    
    count2S  c2o( 1 , ifcPASSCODE_OSfIRE ) ;

    boolT&    bQuit         =    *(boolT*)pTaskP->c3 ;
    socketC&  sockd         =  *(socketC*)pTaskP->c2 ;
    nicNameC& nicNameDoomed = *(nicNameC*)pTaskP->c1 ;
{
if( pTaskP && pTaskP->c1 && pTaskP->c2 && pTaskP->c3 )
TASK( tmFireF )

/*1*/WAKEhIDE( "tool.reboot.ifc.root" )/*1*/
/**/
*/
\<A HREF=\"5.6840104.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

