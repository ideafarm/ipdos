
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


#undef  BaNY
#undef  STRiDf_OR_sTRiDaNYf

#include "\ideafarm.home.1\ephemeral\domains\com\ideafarm\city\workshop\snip\1snip.19000004.strReplaceF_strReplaceAnyF.h"

#define STRiDf_OR_sTRiDaNYf strIdAnyF
#define BaNY

/*1*/countT etherC::strReplaceAnyF( tinS& tinP , strokeS*& psttNewBigP , const strokeS* psttOldBigP , const strokeS* const psttOldSmallP , const strokeS* const psttNewSmallP , const countT csttExtraP , const flagsT flagsP )/*1*/

/**/
*/
  use csttExtraP to specify additional extra strokes
  i always preserve the extra strokes that are present in the source string
  can be 0
 csttExtraP
 psttNewSmallP
   behavior is identical to that of a unit length string containing a null stroke
  this can also be null, or a null length string
  this string can include a null stroke
 psttOldSmallP
 psttOldBigP
 psttNewBigP
arguments
see the notes for strReplaceF
evaluates to the number of replacements made
replaces substrings made up entirely of the characters in psttOldSmallP with the string psttNewSmallP
  \<A HREF=\"5.9a10104.1.1.0.html\"\>9a10104:  WAKEsHOW( "example.simplest.func.1030087.etherC.strReplaceAnyF" )\</A\>
 simplest
examples
\<A HREF=\"5.1030087.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$strReplaceAnyF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

