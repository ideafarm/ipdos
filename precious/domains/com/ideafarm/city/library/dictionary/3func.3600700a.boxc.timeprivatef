
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    }
        DEL( pInfoFile ) ;
        time2P = pInfoFile->timeWritten2 ;
        time1P = pInfoFile->timeWritten1 ;
    {
    if( pInfoFile )
    ether.diskFileQueryF( tinP , pInfoFile , handle ) ; ___( pInfoFile ) ;
    }
        ether.delF( tinP , psttMapped ) ;
        ether.fileOpenF( tinP , handle , flagsResult , psttMapped , ifcOPENaCCESS_R , ifcOPENsHARE_R , flOPENdETAILS_FAIL | flOPENdETAILS_LOCsEQ , ifcOPENhOW_nFeO , 0 , 0 , cOpenTries ) ;
        ether.diskMakeDirIfNeededF( tinP , psttMapped ) ;
        ZE( countT , flagsResult ) ;
        ether.diskMapFileNameF( tinP , psttMapped , psttAll ) ; ___( psttMapped ) ;
        ZE( strokeS* , psttMapped ) ;
    {
    if( !handle )
    ZE( infoFileS* , pInfoFile ) ;
    _IO_

    }
        if( POOP ) return ;
        __( time2P ) ;
        __( time1P ) ;
        if( POOP ) return ;
    {
    IFbEcAREFUL
    SCOOP
{
/*1*/voidT boxC::timePrivateF( tinS& tinP , countT& time1P , sCountT& time2P )/*1*/
/**/
*/
 time2P
 time1P
arguments
only used for local file boxes
obtains the time that the backing file was last written
it is illegal to refer to this symbol in the definition of an adam
\<A HREF=\"5.109000a.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$timePrivateF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//

