
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etherC::loafIF( tinP ) ;                            

while( !ether && ~hFind && !POOP ) ;
}
    DEL( pInfo ) ;
    }
        }
            }
                etThread.traceF( tinP , T(fn)+T("                         rejected") ) ;
            {
            else
            }
                etThread.traceF( tinP , T(fn)+T("                accepted") ) ;
            {
            IFpATTERN( etThread , pat , fn )

            etThread.traceF( tinP , fn ) ;
        {
        if( fn )

        fileNameC fn( tinP , etThread , pInfo->psttIfoName ) ;
    {
    else
    }
        break ;
        DEL( pInfo ) ;
    {
    if( !pInfo || !pInfo->psttIfoName )

    etThread.diskFindFileOrDirOldF( tinP , pInfo , hFind , tLike ) ;
    ZE( infoFileS* , pInfo ) ;
{
do
handleC hFind( tinP , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_FILEfIND ) ;


etThread.traceF( tinP , T("wildcard pattern: ")+tPattern ) ;

patternC pat( tinP , etThread , tPattern , ifcIDtYPEpATTERN_FOREIGNwILDCARDsTRICT ) ;
TN( tPattern , "a@z" ) ;                                                            // SEE etherC::strPatternFromWildcardsMicrosoftF (ENABLE THE SWITCH CASE FOR '@')
TN( tLike , "///d/tmp/wildcard.test.2/*" ) ;

TODO

/*1*/WAKEsHOWtEXT( "example.simplest.1snip.11200549.IFpATTERN" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//
