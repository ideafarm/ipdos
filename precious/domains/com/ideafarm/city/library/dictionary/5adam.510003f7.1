
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST
etThread.osProcessIdPhaseAdamF( tinP , ifcIDpHASEhANDOFFoLD_SHUTTINGdOWN ) ;

}
    }
        if( bNone ) ether.osSleepF( tinP , TOCK * 0x10 ) ;

        etThread.delF( tinP , pstt1m ) ;
        }
            etThread.delF( tinP , pbf ) ;
            }
                composeAndSendF( tinP , etThread , info ) ;
                etThread.memCopyF( tinP , (byteT*)&info , pbf , sizeof info ) ;
            {
            else
            if( sizeof info != cbf ) etThread.strokeF( tinP , T("an impotence file was ignored because it is not the expected length\r\n") ) ;
            impotenceS info( tinP ) ;
            etThread.boxGetF( tinP , pbf , cbf , psttc1 ) ; ___( pbf ) ;
            ZE( countT , cbf ) ;
            ZE( byteT* , pbf ) ;
        {
        FORsTRINGSiN1( pstt1m )

        boolT bNone = !etThread.boxMenuF( tinP , soul1m , T("///ideafarm/ephemeral/domains/com/ideafarm/3f30104/impotences/" "*") ) ; ___( pstt1m ) ;
        ZE( strokeS* , pstt1m ) ;
    {
    while( !ether && !etThread )

    etThread.strokeF( tinP , T("IdeaFarm " "(tm) City Impotence Reporter\r\ni report impotence events\r\n") ) ;
{
else
}
    etThread.strokeF( tinP , T("Another ")+textIdFileC( tinP , DDNAME )+T(" appears to be alive on this computer.  Only one is allowed.") ) ;
    etThread = 0  ;
{
if( etThread )
U:: USE napkinC OBJECT TO TEST FOR ALONENESS
batonC baton( tinP , TAG( TAGiDnULL ) , T("9f30104") ) ;

TODO

}
    etThread.delF( tinP , pstteHumanOwner ) ;
    etThread.delF( tinP , pstteHirer ) ;

    }
        sOut.writeMsgF( tinP , tBody ) ;
        sOut.writeMsgF( tinP , T("ideafarm.com//smtp/" ifcEMAIL_OLDfROM "/")+tTo ) ;
        etThread.strokeF( tinP , T("\"")+tTo+T("\"\r\n") ) ;
        textC tTo = ( pstteHumanOwner ? T(pstteHumanOwner) : T(ifcEMAIL_OLDfROM) ) + ( pstteHirer ? T("/") + T(pstteHirer) : T("") ) ;
        sOut.connectF( tinP , ifcPORToLD1oUTGOINGmAILBOX , 0x01010102 ) ;
        socketC sOut( tinP , etThread , TAG( TAGiDnULL ) ) ;
    {

    if( idHumanOwner ) { etThread.ifcExternalEmailFromIdCitizenF( tinP , pstteHumanOwner , idHumanOwner ) ; ___( pstteHumanOwner ) ; }
    ZE( strokeS* , pstteHumanOwner ) ;

    if( infoP.idHirer ) { etThread.ifcExternalEmailFromIdCitizenF( tinP , pstteHirer , infoP.idHirer ) ; ___( pstteHirer ) ; }
    ZE( strokeS* , pstteHirer ) ;

    }
        etThread.delF( tinP , psttTin ) ;
        ;
            T(psttTin)
            "idCode       = ")+TF1(infoP.idCode)+T("\r\n\r\n")+
            "idLine       = ")+TF4(infoP.idLine,0,0,0xa)+T("\r\n"
            "idFile       = ")+TF3(infoP.idFile,flFORMAT_FILLzE,7)+T("\r\n"
            "idHumanOwner = ")+TF1(idHumanOwner)+T("\r\n"
            "idOwner      = ")+TF1(infoP.idOwner)+T("\r\n"
            "idHirer      = ")+TF1(infoP.idHirer)+T("\r\n"
            "using that product when it failed.\r\n\r\n"
            "report was sent to you either because you are the supplier of the defective product or because you were\r\n"
            "This report was generated because an etherC object became impotent, indicating a product defect.  This\r\n"
            "or are not familiar with this report.\r\n\r\n"
            "IdeaFarm " "(tm) City opposes spam.  See http://www.ideafarm.com if you are not an IFC citizen\r\n"
            T("Subject: IFC Impotence Report\r\n\r\n"
        tBody = 
        infoP.tin.strFromF( tinP , psttTin ) ; ___( psttTin ) ;
        ZE( strokeS* , psttTin ) ;
    {
    TN( tBody , "" ) ;

    }
        etThread.delF( tinP , pbi ) ;
        if( pbi && cbi >= sizeof( countT ) ) idHumanOwner = *(countT*)pbi ;
        ep = 0 ;
        ep.boxGetShadowF( tinP , pbi , cbi , T("///ideafarm/precious/domains/com/ideafarm/city/library/dictionary.okw/adam.")+TF3(infoP.idOwner,flFORMAT_FILLzE,7) , 1 ) ; ___( pbi ) ;
        ZE( countT , cbi ) ;
        ZE( byteT* , pbi ) ;

        ep.flagsMode  = etThread.flagsMode | flTHIRDmODE_IMPOTENCEeXPECTED ;
        etherC ep( tinP , TAG( TAGiDnULL ) , etThread.os_cAllKidThreadsI_IF( tinP ) ) ;
    {
    ZE( countT , idHumanOwner ) ;
{
voidT composeAndSendF( tinS& tinP , etherC& etThread , const impotenceS& infoP )

/*1*/WAKEhIDE( "city.impotence.reporter" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//

