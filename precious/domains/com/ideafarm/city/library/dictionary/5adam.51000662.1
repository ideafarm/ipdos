
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etherC::loafIF( tinP ) ;

}
    }
        DELzOMBIE( pspDoomed ) ;
        blobSP* pspDoomed = (blobSP*)( pczName + offn ) ;

        etThread.strokeF( tinP , T("\"")+T((osTextT*)pczName[offn])+T("\"\r\n") ) ;
    {
    if( pczName[ offn ] )
{
for( countT offn = 0 ; offn < sizeof pczName / sizeof pczName[ 0 ] ; offn ++ )

etThread.strokeF( tinP , T("decoded [pczName]: ")+TF2(pczName,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED)+T("\r\n") ) ;
listC::dictionaryRestoreOsTextIF( tinP , pczName ) ;

etThread.strokeF( tinP , T("encoded [pczName]: ")+TF2(pczName,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED)+T("\r\n") ) ;
listC::dictionaryReplaceOsTextIF( tinP , pczName ) ;

etThread.strokeF( tinP , T("raw     [pczName]: ")+TF2(pczName,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED)+T("\r\n") ) ;
countT   pczName[] = { (countT)postFoo , (countT)postGoo , (countT)postHoo , (countT)postJoo , 0 } ;
osTextT* postJoo = "joo" ;
osTextT* postHoo = "hoo" ;
osTextT* postGoo = "goo" ;
osTextT* postFoo = "foo" ;

CONoUTrAW3( "[sizeof blobVSP]: " , sizeof( blobVSP ) , "\r\n" ) ;

TODO

/*1*/WAKEhIDE( "example.simplest.3func.34026.listC.dictionaryRestoreOsTextIF" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

