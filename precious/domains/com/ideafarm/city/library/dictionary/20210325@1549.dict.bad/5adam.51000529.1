
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

BOSpOOP
BOS( WHATgbo , BOSoK , CloseHandle( realHandle ) )

if( bOk ) ;
bOk = tinP.brcRaw ;
BOSpOOP
BOS( WHATgbo , BOSoK , GetThreadContext( realHandle , &info2 ) )
info2.ContextFlags = CONTEXT_INTEGER ;
etThread.memSetF( tinP , (byteT*)&info2 , sizeof info2 ) ;
CONTEXT info2 ;

}
    bOk = tinP.brcRaw ;
    BOSpOOP
    BOS( WHATgbo , BOSoK , SetThreadContext( realHandle , &info ) )
    info.Edi = 0x12345678 ;
{
if( bOk )
boolT bOk = tinP.brcRaw ;
BOSpOOP
BOS( WHATgbo , BOSoK , GetThreadContext( realHandle , &info ) )
info.ContextFlags = CONTEXT_INTEGER ;
etThread.memSetF( tinP , (byteT*)&info , sizeof info ) ;
CONTEXT info ;

BOSpOOP
BOS( WHATgbo , BOSoK , DuplicateHandle( oshcp , (HANDLE)tinP.brcRaw , oshcp , &realHandle , THREAD_GET_CONTEXT|THREAD_SET_CONTEXT , 0 , 0 ) )

BOSdOnOTtEST( WHATgbo , GetCurrentThread() )

HANDLE oshcp = (HANDLE)tinP.brcRaw ;
BOSdOnOTtEST( WHATgbo , GetCurrentProcess() )

POOPIES
ZE( HANDLE , realHandle ) ;

TODO

//DOES NOT WORK FOR THE DEBUG REGISTERS (I WAS HOPING THAT IT WOULD)

/*1*/WAKEhIDE( "doodle.patch.context" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

