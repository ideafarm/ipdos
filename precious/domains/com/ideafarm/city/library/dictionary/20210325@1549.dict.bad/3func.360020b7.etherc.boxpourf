
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return cFiles ;

    }
        FORsTRINGSiNsPANNEDcOMBINEDtAIL1
        }
            delF( tinP , psttTo ) ;
            diskMoveFileOrDirF( tinP , psttTo , psttc1 ) ; //U: ENHANCE: SUPPORT CASE WHERE FILES ARE ON DIFFERENT VOLUMES
            }
                delF( tinP , psttSuffix ) ;
                strFuseF( tinP , psttTo , T(psttLikeToP)+T(psttSuffix) ) ; ___( psttTo ) ;
                strSubstringF( tinP , psttSuffix , ++ idf , idl , psttc1 ) ; ___( psttSuffix ) ;
                countT idf = strIdF( tinP , countTC( 1 ) , sttq , sttCut , psttc1 , 0 , - 1 ) ;

                strokeS sttq( (countT)0 , sc_IGNOREqUOTES ) ;
                ZE( countT , idl ) ;
                ZE( strokeS* , psttSuffix ) ;
            {
            ZE( strokeS* , psttTo ) ;

            if( POOP ) break ;
        {
        FORsTRINGSiNsPANNEDcOMBINEDhEAD1( soul1m )

        if( cFiles ) diskMakeDirIfNeededF( tinP , psttLikeToP ) ;

        __( sttCut != S1C('/') ) ;
        strokeS sttCut = psttLikeFromP[ CSpREFIX - 1 + psttLikeFromP->idAdam ] ;

        cFiles = boxMenuF( tinP , soul1m , T(psttLikeFromP) + T("*") , 0 , cMaxP ) ;
        soulC soul1m( tinP , TAG( TAGiDnULL ) ) ;
    {
    ZE( countT , cFiles ) ;
    _IO_

    }
        if( POOP ) return 0 ;
        __Z( psttLikeFromP ) ;
        __Z( psttLikeToP ) ;
        if( POOP ) return 0 ;
    {
    IFbEcAREFUL
    SCOOP
{
/**//*1*/countT etherC::boxPourF( tinS& tinP , const strokeS* const psttLikeToP , const strokeS* const psttLikeFromP , const countT csttEstimateP , const countT cMaxP )/*1*/
*/
  if not 0 then this is the maximum number of files that will be poured
  can be 0
 cMaxP
  estimated strokes needed to store all file names
 csttEstimateP
 psttLikeFromP
 psttLikeToP
arguments
evaluates to the number of files moved
 all parent directories will be created as needed
the directory specified by psttLikeToP need not exist
the last stroke in each parameter must be a slash
psttLikeFromP and psttLikeToP must be on the same file system
  \<A HREF=\"5.5f20104.1.1.0.html\"\>5f20104:  WAKEsHOW( "example.simplest.func.10300d1.etherC.boxPourF" )\</A\>
  \<A HREF=\"5.3810104.1.1.0.html\"\>3810104:  WAKEsHOW( "example.simplest.func.10300d1.etherC.boxPourF" )\</A\>
 simplest
examples
\<A HREF=\"5.10300d1.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$boxPourF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

