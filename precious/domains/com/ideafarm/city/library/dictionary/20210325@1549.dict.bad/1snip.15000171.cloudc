
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


;
}
    inline flagsT   flagsCtF( voidT ) const { return flagsCt ; }
    inline operator poopC&( voidT ) { return poop ; }
    inline operator etherC&( voidT ) { return ether ; }
    inline operator cloudInfoS&( voidT ) { return *(cloudInfoS*)hCloud.osF( ifcIDtYPEhANDLE_CLOUD ) ; }

    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.36138013.cloudC.pullFileF!||
    voidT pullFileF( tinS& tinP , soulC& sRenameP , const strokeS* const psttFileP , const strokeS* const psttCloudContainerP , const strokeS* const psttShortP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.36138011.cloudC.pullFileF!||
    voidT pullFileF( tinS& tinP , byteT*& pbP , countT& cbP , const strokeS* const psttCloudContainerP , const strokeS* const psttShortP , const countT cTriesP = 0 ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.36138010.cloudC.queryRemoteFileF!||
    voidT queryRemoteFileF( tinS& tinP , countT& cbLoP , countT& cbHiP , strokeS*& psttHashP , const strokeS* const psttCloudContainerP , const strokeS* const psttShortP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3613800f.cloudC.deleteRemoteFileF!||
    voidT deleteRemoteFileF( tinS& tinP , const strokeS* const psttCloudContainerP , const strokeS* const psttShortP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.36138014.cloudc.deleteRemoteFilesf!||
    voidT deleteRemoteFilesF( tinS& tinP , const strokeS* const psttCloudContainerP , soulC& sDoomedFileNamesP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.36138012.cloudC.pushFileF!||
    voidT pushFileF( tinS& tinP , const strokeS* const psttCloudContainerP , const strokeS* const psttShortP , const byteT* const pbP , countT cbP = 0 ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3613800e.cloudC.pushFileF!||
    voidT pushFileF( tinS& tinP , batonC& batConnectP , const strokeS* const psttCloudContainerP , const strokeS* const psttShortP , const strokeS* const psttLocalContainerP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.36138006.cloudC.getCloudInfoF!||
    voidT getCloudInfoF( tinS& tinP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.36138003.cloudC.cloudC!||
    cloudC( tinS& tinP , const strokeS* const psttNameP , const countT idDoIfDifferP , const flagsT flagsP , const countT idCloudP , const strokeS* const psttBuildingP , const strokeS* const psttUserP , const strokeS* const psttPasswordP , const strokeS* const psttCloudContainerP , const strokeS* const psttLocalContainerP = 0 , const strokeS* const psttLikeP = 0 , const countT cbMinP = 0 , const countT cbMaxP = 0 , const countT cTriesWhenDeletingLocalP = 0 , cloudUpdateCBFT pCloudUpdateCBFP = 0 , countT* const pcArgUpdateP = 0 , cloudNixCBFT pCloudNixCBFP = 0 , countT* const pcArgNixP = 0 , const strokeS* const psttPourLocalAfterContainerP = 0 , const strokeS* const psttAdamHireAfterP = 0 ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.36138002.cloudC.dt_cloudC!||
    ~cloudC( voidT ) ;

    public :

    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3613800d.cloudC.listFilesF!||
    countT listFilesF( tinS& tinP , const strokeS* const psttCloudContainerP , textC& tMarkerP , const strokeS* const psttLikeP = 0 , const countT cbMinP = 0 , const countT cbMaxP = 0 ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.36138004.cloudC.openF!||
    voidT openF(  tinS& tinP , const countT idCloudP , const strokeS* const psttBuildingP , const strokeS* const psttUserP , const strokeS* const psttKeyP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3613800c.cloudC.keyF!||
    voidT keyF(   tinS& tinP , cloudOpenScratchS& scrP , stackC& stPathP , const strokeS* const psttP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3613800b.cloudC.listF!||
    voidT listF(  tinS& tinP , cloudOpenScratchS& scrP , stackC& stPathP , const strokeS* const psttP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3613800a.cloudC.itemF!||
    voidT itemF(  tinS& tinP , cloudOpenScratchS& scrP , stackC& stPathP , const strokeS* const psttP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.36138009.cloudC.valueF!||
    voidT valueF( tinS& tinP , cloudOpenScratchS& scrP , stackC& stPathP , const strokeS* const psttP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.36138008.cloudC.pairF!||
    voidT pairF(  tinS& tinP , cloudOpenScratchS& scrP , stackC& stPathP , const strokeS* const psttP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.36138007.cloudC.wordF!||
    voidT wordF(  tinS& tinP , cloudOpenScratchS& scrP , stackC& stPathP , const strokeS* const psttP ) ;

    textC          tHost ;
    textC          tUrlCloudAgent ;

    textC          tReplyCode404_NotFound ;
    textC          tReplyCode401_Unauthorized ;
    textC          tReplyCode204_NoContent ;
    textC          tReplyCode202_Accepted ;
    textC          tReplyCode201_Created ;
    textC          tReplyCode200_OK ;

    const countT   idDoIfDiffer ;
    flagsT         flagsState ;
    const flagsT   flagsCt ;

    byteT          pb_kvFileMetaByNameLocal[ sizeof( keyValuePairsC ) ] ;
    byteT          pb_kvFileMetaByNameRemote[ sizeof( keyValuePairsC ) ] ;

    batonC         bHandle ;
    handleC        hCloud ;
    textC          tPassword ;
    textC          tUser ;
    textC          tBuilding ;
    const countT   idCloud ;

    poopC&         poop ;
    etherC         ether ;

    ;
    }
        //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.36137003.cloudC.cloudOpenScratchS.cloudOpenScratchS!||
        cloudOpenScratchS( tinS& tinP , const countT idCloudP , const strokeS* const psttBuildingP ) ;

        textC        tMaybeTenantId ;
        textC        tMaybeInternalUrl2 ;
        textC        tMaybeInternalUrl1 ;
        textC        tMaybePublicUrl2 ;
        textC        tMaybePublicUrl1 ;
        flagsT       flags ;
        textC        tBuilding ;
        const countT idCloud ;
    {
    struct _export cloudOpenScratchS
{
/*1*/class _export cloudC/*1*/

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

