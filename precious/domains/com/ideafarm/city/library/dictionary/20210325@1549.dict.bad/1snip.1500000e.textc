
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


;
/**/}

 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34003.textC.dt_textC!||
 ~textC( voidT ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3600401e.textc.textc!||
 textC( tinS& tinP , const countT idLineCtP , const countT idiFileCtP , const byteT* const pbBitsCtP , const flagsT flagsP , const timeS& valueP , const flagsT flagsFormatP = flFORMAT_null , const countT csP = 0 , const countT radixP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34018.textC.textC!||
 textC( tinS& tinP , const countT idLineCtP , const countT idiFileCtP , const byteT* const pbBitsCtP , const flagsT flagsP , const portTimeC& valueP , const flagsT flagsFormatP = flFORMAT_null , const countT csP = 0 , const countT radixP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34017.textC.textC!||
 textC( const countT idP , tinS& tinP , const countT idLineCtP , const countT idiFileCtP , const byteT* const pbBitsCtP , const flagsT flagsP = flTEXTc_null ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34016.textC.textC!||
 textC( tinS& tinP , const countT idLineCtP , const countT idiFileCtP , const byteT* const pbBitsCtP , const flagsT flagsP , const countT cbBlobP , const byteT* const pbBlobP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34015.textC.textC!||
 textC( tinS& tinP , const countT idLineCtP , const countT idiFileCtP , const byteT* const pbBitsCtP , const flagsT flagsP , const nicNameC& valueP , const flagsT flagsFormatP = flFORMAT_null , const countT csP = 0 , const countT radixP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34006.textC.textC!||
 textC( TPpARAM , const countT idLineCtP = 0 , const countT idiFileCtP = 0 , const byteT* const pbBitsCtP = 0 , const flagsT flagsP = flTEXTc_null , const countT csP = 0 , const strokeS sttPadP = S1C(' ') , const boolT fLeadingP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3400f.textC.textC!||
 textC( tinS& tinP , const countT idLineCtP , const countT idiFileCtP , const byteT* const pbBitsCtP , const flagsT flagsP , const countT* const pcValueP , const flagsT flagsFormatP = flFORMAT_null , const countT csP = 0 , const countT radixP = 0 , const strokeS* const psttSeparatorP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3400a.textC.textC!||
 textC( countT time1P , sCountT time2P , tinS& tinP , const countT idLineCtP , const countT idiFileCtP , const byteT* const pbBitsCtP , const flagsT flagsP = flTEXTc_null , const countT idFirstP = 0 , const countT idLastP = 0 , const strokeS sttRadixP = S1C('.') , const strokeS* const psttDelimiterP = 0 , const countT idFormatP = ifcIDfORMATtIME_NUMERIC , const flagsT flagsFormatP = flFORMAT_null ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3400c.textC.textC!||
 textC( tinS& tinP , const countT idLineCtP , const countT idiFileCtP , const byteT* const pbBitsCtP , const flagsT flagsP , const sCountC& valueP , const flagsT flagsFormatP = flFORMAT_null , const countT csP = 0 , const countT radixP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3400e.textC.textC!||
 textC( tinS& tinP , const countT idLineCtP , const countT idiFileCtP , const byteT* const pbBitsCtP , const flagsT flagsP , const measureT valueP , const flagsT flagsFormatP = flFORMAT_null , const countT csP = 0 , const countT radixP = 16 , const countT idcPointP = 0 , const countT cPrecisionP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3400d.textC.textC!||
 textC( tinS& tinP , const countT idLineCtP , const countT idiFileCtP , const byteT* const pbBitsCtP , const flagsT flagsP , const countT valueP , const flagsT flagsFormatP = flFORMAT_null , const countT csP = 0 , const countT radixP = 16 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34009.textC.textC!||
 textC( tinS& tinP , const countT idLineCtP , const countT idiFileCtP , const byteT* const pbBitsCtP , const flagsT flagsP , const sCountT valueP , const flagsT flagsFormatP = flFORMAT_null , const countT csP = 0 , const countT radixP = 16 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34008.textC.textC!||
 textC( tinS& tinP , const countT idLineCtP , const countT idiFileCtP , const byteT* const pbBitsCtP , const flagsT flagsP , const strokeS sttP , const countT csP = 0 , const strokeS sttPadP = S1C(' ') , const boolT fLeadingP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34002.textC.textC!||
 textC( tinS& tinP , const countT idLineCtP , const countT idiFileCtP , const byteT* const pbBitsCtP , const flagsT flagsP , const strokeS* const psttP , const countT csP = 0 , const strokeS sttPadP = S1C(' ') , const boolT fLeadingP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34001.textC.textC!||
 textC( tinS& tinP , const countT idLineCtP , const countT idiFileCtP , const byteT* const pbBitsCtP , const flagsT flagsP = flTEXTc_null , const osTextT* const postP = "" , const countT csP = 0 , const strokeS sttPadP = S1C(' ') , const boolT fLeadingP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34014.textC.NEWdELcLASS!||
 NEWdELcLASSpROTOS
/* birth , death */

 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34013.textC.operator_incrementBy!||
 textC& operator +=( TPpARAM ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3401d.textC.operator_assign!||
 textC& operator =( const strokeS* const psttP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34012.textC.operator_assign!||
 textC& operator =( TPpARAM ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3400b.textC.operator_plus!||
 textC operator +( const strokeS& sP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34005.textC.operator_plus!||
 //textC operator +( TPpARAM ) ;
 textC operator +( TPpARAM ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3401a.textC.operator_notEquals!||
 boolT operator !=( TPpARAM ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34019.textC.operator_equals!||
 boolT operator ==( TPpARAM ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34011.textC.operator_unTextT_ptr!||
 operator unTextT*( voidT ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34010.textC.operator_osTextT_ptr!||
 operator osTextT*( voidT ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34004.textC.operator_strokeS_ptr!||
 operator strokeS*( voidT ) ;
/* expressions */
//CODEsYNC: 003000e 003009a

 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3401c.textC.psttLowerF!||
 strokeS* psttLowerF( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34007.textC.csF!||
 countT csF( tinS& tinP ) ;
/* commands */

/**/    
    public :

    const flagsT flags ;
    const byteT  pbBitsCt[ CBbITScT ] ;
    const countT idiFileCt ;
    const countT idLineCt ;
    boolT        bConvertible ;
    strokeS*     psttLower ;
    unTextT*     puntMe ;
    osTextT*     postMe ;        
    strokeS*     psttMe ;
    etherC&      ether ;

    protected :

    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3401b.textC.loadVTextValueIfF!||
    voidT loadVTextValueIfF( tinS& tinP ) ;
{
/*1*/class _export textC/*1*/

/**/
*/
 see the T and TT macros
 use expressions of textC objects to concatenate strings of strokes
each textC object contains an unmodifiable string of strokes
  \<A HREF=\"5.5100104.1.1.0.html\"\>5100104:  WAKEsHOW( "example.simplest.snip.1500000e.textC" )\</A\>
 simplest
examples
\<A HREF=\"5.1500000e.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

