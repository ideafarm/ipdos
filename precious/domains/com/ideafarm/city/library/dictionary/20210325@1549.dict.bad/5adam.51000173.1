
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


//VISIBLE

REST
etThread.osProcessIdPhaseAdamF( tinP , ifcIDpHASEhANDOFFoLD_SHUTTINGdOWN ) ;

HEAReNTER( ether )
etThread.strokeF( tinP , T("press the enter key") ) ;

etThread.socksShutdownF( tinP ) ;

sDone.waitF( tinP ) ;
etThread.sockWriteF( tinP , hs , "abcdefgh" ) ;

) ;
    T("server: idPortYou =     ")+TF3(idPortYou,flFORMAT_UNSIGNED|flFORMAT_FILLzE,4)+T("\r\n")
    T("server: nicNameYou = "    )+TF3(nicNameYou,flFORMAT_UNSIGNED|flFORMAT_FILLzE,8)+T("\r\n")+
    T("server: idPortMe  =     ")+TF3(idPortMe ,flFORMAT_UNSIGNED|flFORMAT_FILLzE,4)+T("\r\n")+
    T("server: nicNameMe  = "    )+TF3(nicNameMe ,flFORMAT_UNSIGNED|flFORMAT_FILLzE,8)+T("\r\n")+
    tinP ,
(
etThread.strokeF
etThread.sockPeerNameF( tinP , idPortYou , nicNameYou , hs ) ;
etThread.sockMyNameF( tinP ,   idPortMe  , nicNameMe  , hs ) ;
ZE( countT , idPortYou ) ;
nicNameC nicNameYou ;
ZE( countT , idPortMe ) ;
nicNameC nicNameMe ;

etThread.sockOptionLingerF( tinP , hs ) ;
etThread.sockAcceptF( tinP , hs , idPortPeer , nnPeer , hl , countTC() ) ;
ZE( countT , idPortPeer ) ;
nicNameC nnPeer ;
handleC hs( tinP , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_SOCKET ) ;
{ ZE( countT , tnu ) ; etThread.osThreadF( tinP , tnu , tmF , &sDone , flTHREADlAUNCH_null , 0 , idpa ) ; }
signC sDone(  tinP , ether ) ;

etThread.sockListenF( tinP , hl ) ;
countT idpa = etThread.sockBindF( tinP , hl ) ;
etThread.sockOptionLingerF( tinP , hl ) ;
etThread.sockF( tinP , hl ) ;
handleC hl( tinP , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_SOCKET ) ;

etThread.socksSetupF( tinP ) ;

TODO

DONE( tmF )
etThread.strokeF( tinP , T("tmF received \"")+T(post80)+T("\"\r\n") ) ;

) ;
    T("client: idPortYou =     ")+TF3(idPortYou,flFORMAT_UNSIGNED|flFORMAT_FILLzE,4)+T("\r\n")
    T("client: nicNameYou = "    )+TF3(nicNameYou,flFORMAT_UNSIGNED|flFORMAT_FILLzE,8)+T("\r\n")+
    T("client: idPortMe  =     ")+TF3(idPortMe ,flFORMAT_UNSIGNED|flFORMAT_FILLzE,4)+T("\r\n")+
    T("client: nicNameMe  = "    )+TF3(nicNameMe ,flFORMAT_UNSIGNED|flFORMAT_FILLzE,8)+T("\r\n")+
    tinP ,
(
etThread.strokeF
etThread.sockPeerNameF( tinP , idPortYou , nicNameYou , hc ) ;
etThread.sockMyNameF( tinP ,   idPortMe  , nicNameMe  , hc ) ;
ZE( countT , idPortYou ) ;
nicNameC nicNameYou ;
ZE( countT , idPortMe ) ;
nicNameC nicNameMe ;

etThread.sockReadF( tinP , hc , post80 , 8 ) ;
etThread.memSetF( tinP , post80 , sizeof post80 ) ;
osTextT post80[ 0x80 ] ;
etThread.sockConnectF( tinP , hc , idpa ) ;
etThread.sockOptionLingerF( tinP , hc ) ;
etThread.sockF( tinP , hc ) ;
handleC hc( tinP , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_SOCKET ) ;
countT idpa = pTaskP ? pTaskP->c1 : 0 ;
TASK( tmF )

/*1*/WAKEhIDE( "example.simplest.func.1030097.etherC.sockMyNameF" )/*1*/
/**/
*/
\<A HREF=\"5.3710104.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

