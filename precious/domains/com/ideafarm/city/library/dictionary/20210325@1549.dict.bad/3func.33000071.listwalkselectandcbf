
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return flLISTwALKcALLbACKrETURNcODE_DOnOTwALKmE ;

    UNGRABtINaRGS( ifcIDtYPEtINaRGiNuSE_LIST )
    }
        }
            }
                DELlIST( fieldEditParamOutC , pOut ) ;
                listC::fieldIF( tinP , pOut , hTo , pczField , _1_pushC( record ) + _1_modePushSinkC() + _1_modeUniqueC() , LF ) ;
                countT pczField[] = { LISTnAME_RECORD , 0 } ;                                                                                                                                                 \
                ZE( fieldEditParamOutC* , pOut ) ;
    
                listC::openIF( tinP , hTo , pczTo ) ;
                handleC hTo( tinP , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_LISTING ) ;
                countT pczTo[] = { LISTnAME_ROOT , LISTnAME_ROOTsYSTEM4 , LISTnAME_TEMPORARY , LISTnAME_SELECTED , idNameToP , 0 } ;
    
                puseC puseat( tinP , ifcIDpOOL_ADAMtEMP ) ;
            {
            //SINK UNIQUE A listingVSP for record INTO A TEMPORARY LIST
        {
        if( isListed )

        }
            tinP.ta.retained.u.listWalk.walk.pPoolRecord = &PUSE ;
            isListed = selectHeP.isListedF( tinP , record ) ;
            tinP.ta.retained.u.listWalk.walk.pPoolRecord = 0 ;
            puseC puseRecord( tinP , *tinP.ta.retained.u.listWalk.walk.pPoolRecord ) ;
        {
        ZE( boolT , isListed ) ;

        __( !listingC::bIsListingIF( tinP , &record ) ) ;
        const listingC& record = *(const listingC*)spRecord ;

        listingVSP spRecord = entry ;
        listing_listingVSP_C& entry = *(listing_listingVSP_C*)pListingP ;
    {
    if( pListingP && !( pListingP->flagsF() & fliLISTINGc_MIXINlIST ) && pListingP->idTypeDatumF() == ifcIDtYPEmIXINdATUM_listingVSP )

    selectC&  selectHeP = *(selectC*)tinP.ta.pushed.u.listWalk.util.pcP[ 1 ] ;
    countT    idNameToP =            tinP.ta.pushed.u.listWalk.util.pcP[ 0 ] ;
    listingC* pListingP =            tinP.ta.pushed.u.listWalk.cbf.pListingP ;
    GRABtINaRGS( ifcIDtYPEtINaRGiNuSE_LIST )
{
/*1*/flagsT _export listWalkSelectAndCBF( tinS& tinP )/*1*/

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

