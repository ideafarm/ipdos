
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return fCreator ;
    _OUT_

    #endif

        }
            fCreator = ERROR_ALREADY_EXISTS != tinP.brcRaw ;
            BOSdOnOTtEST( WHATgbo , GetLastError() )
        {
        if( !POOP )
        __Z( handleP ) ;
        handleP.osF( ifcIDtYPEhANDLE_EVENTsEMAPHORE , tinP.brcRaw ) ;
        BOSpOOP
        BOS( WHATgbo , BOSoK , CreateEvent( &sa , 1 , fGivenP , postP ) )
        SECURITYaTTRIBUTE_saUNRESTRICTED ;
        BOSnOvALUE( WHATgbo , SetLastError( 0 ) )

    #elif defined( __NT__ )

        delF( tinP , post ) ;
        }
            __Z( handleP ) ;

            }
                }
                    __( tinP.brcRaw ) ;
                {
                else
                }
                    if( bOk ) break ;
                    handleP.osF( ifcIDtYPEhANDLE_EVENTsEMAPHORE , (countT)osh ) ;
                    bOk = !tinP.brcRaw ;
                    BOSdOnOTtEST( WHATgbo , DosOpenEventSem( post , &osh ) )
                    ZE( HEV , osh ) ;
                    ZE( boolT , bOk ) ;
                    fCreator = 0 ;
                {
                if( tinP.brcRaw == ERROR_DUPLICATE_NAME )

                handleP.osF( ifcIDtYPEhANDLE_EVENTsEMAPHORE , (countT)osh ) ;
                BOSdOnOTtEST( WHATgbo , DosCreateEventSem( post , &osh , 0 , fGivenP ) )
                ZE( HEV , osh ) ;
                fCreator = 1 ;
            {
            while( cntTries -- )
            countT cntTries = 10 ;
        {
        }
            OStEXTA( post  , postP ) ;
            OStEXTA( post  , postPrefix ) ;
            newF( tinP , LF , post , c1 + tinP.brcRaw + 1 ) ; ___( post ) ;
            BOSdOnOTtEST( WHATgbo , strlen( postP ) )
            countT c1 = tinP.brcRaw ;
            BOSdOnOTtEST( WHATgbo , strlen( postPrefix ) )
            OStEXTC( postPrefix , "\\sem32\\" )
        {
        if( postP )
        ZE( osTextT* , post ) ;

    #ifdef __OS2__

    ZE( boolT , fCreator ) ;

    _INoLD_

    }
        if( POOP ) return 0 ;
        #endif
            __( sizeof( countT ) != sizeof( HANDLE ) || fnu ) ;
        #elif defined( __NT__ )
            __( sizeof( countT ) != sizeof( HEV ) || fnu ) ;
        #ifdef __OS2__
        ZE( boolT , fnu ) ;
        if( POOP ) return 0 ;
    {
    IFbEcAREFUL

    ZE( countT* , pcb ) ; *pcb = 0 ;
{
/**//*1*/boolT thirdC::dosOpenEventSem2IF( tinS& tinP , handleC& handleP , const osTextT* const postP , const boolT fGivenP )/*1*/
*/
 fGivenP
 postP
 handleP
arguments
it is illegal to refer to this symbol in the definition of an adam
it is illegal to refer to this symbol anywhere
\<A HREF=\"5.102004e.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$dosOpenEventSem2IF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

