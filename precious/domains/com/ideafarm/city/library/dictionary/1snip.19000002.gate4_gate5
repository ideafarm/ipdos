
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    #endif
        return rc ;
    #elif defined( __NT__ )
    #if defined( __OS2__ )

    }
        processGlobal1S::_processGlobal1I_IF().phExceptionHandler = 0 ;

        #endif

            rc = c_threadTry1OuterF( 1 , processGlobal1S::_processGlobal1I_IF().phExceptionHandler->osF( ifcIDtYPEhANDLE_EXCEPTIONhANDLER ) , cHowP , (countT)ppostHowP , 0 ) ;

        #else

            rc = threadLocalStorageNoTlsF( ifcIDtYPEtLS_WINDOW , 0 , 0 , 0 , 0 , (countT)hWindowingClientIP , (countT)hPreviousWindowingClientP , (osTextT*)postP , (countT)idCmdShowP ) ;

        #if defined( LOCALgRAPHIC )

        processGlobal1S::_processGlobal1I_IF().phExceptionHandler = &hExceptionHandler ;
        handleC hExceptionHandler( tinP , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_EXCEPTIONhANDLER ) ; //WOULD LIKE THIS TO BE THE WOTH STATIC, BUT IT DOESN'T WORK THAT EARLY ; 20210715@1125: MOVED TO HERE FROM mainThreadWorkF

        TINSL
    {
    ZE( sCountT , rc ) ;

    //U:: DO THIS ALSO FOR GRAPHICS PROCESSES BY DEFINING A c_main1OuterWinF THAT PASSES IN THE PARAMETERS PROVIDED TO WinMain
    //20210714@1441:  MIGRATED CODE IN main INTO threadTry2InnerF (CALLED WITHIN A _try BLOCK BY c_threadTry1OuterF) TO PROTECT IT WITHIN _try _except, AND THIS WAS DONE ONLY FOR WINDOWS 10 CONSOLE PROCESSES ;

    VirtualQuery( &foo , &info , sizeof info ) ;
    static MEMORY_BASIC_INFORMATION info ;
    static countT addr2 = (countT)&goo ;
    static countT addr1 = (countT)&foo ;
    ZE( countT , goo ) ;
    ZE( countT , foo ) ;
    //20210321@2028: ADDED TO INSPECT STACK SIZE
{
#endif
    #endif
        int main( countT cHowP , osTextT** ppostHowP )
    #elif defined( __NT__ )
        sCountT  main( countT cHowP , osTextT** ppostHowP )
    #if defined( __OS2__ )
#else
    #endif
        int CALLBACK WinMain( HINSTANCE hWindowingClientIP , HINSTANCE hPreviousWindowingClientP , LPSTR postP , int idCmdShowP )
    #elif defined( __NT__ )
        //U: OS/2
    #if defined( __OS2__ )
#if defined( LOCALgRAPHIC )

//U::O: THE DUPLICATE IMAGE IN 0100002 CAN BE ELIMINATED BY HAVING 0100002 RESOLVE REFERENCES USING 0100003W.EXE AS IF IT IS A DLL

/*1*//*main*//*1*/

/**/
*/
 functions that do not, such as operators, call pTinF() to obtain the address (by walking up the stack) of the thread's tinS, object
 most functions receive a reference to tinP as a parameter
 each thread's local storage consists of its tinS, object and a countT object on the thread stack that contains the address of that object
thread local storage is supported by storing a fingerprint value and a tinS* value (initially 0) on each thread's stack
i look complicated because base operating systems vary slightly in how they pass me command line info, and whether they expect me to return a value
the only thing that i do is call threadLocalStorageNoTlsF
after i terminate, the static image objects are destructed and then the process ends
i am called after the static image objects have been constructed
i am the executive function of the executable image
\<A HREF=\"5.0050002.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//

