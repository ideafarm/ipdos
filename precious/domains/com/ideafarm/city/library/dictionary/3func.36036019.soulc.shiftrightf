
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return *this ;
    _OUT_
    ccP = cb / sizeof( countT ) ;
    shiftRightF( tinP , *(byteT**)&pcP , cb , ifcIDtYPEsOULiTEM_countTptr ) ; ___( pcP ) ;
    ZE( countT , cb ) ;
    _INoLD_

    }
        if( !!pcP || ccP || !(byteT*)ed ) return *this ;
    {
    IFbEcAREFUL    
    SCOOP
{
/*1*/soulC& soulC::shiftRightF( tinS& tinP , countT*& pcP , countT& ccP )/*1*/
/**/
*/
   this courtesy allocation does not affect ccP; ccP will not include it
  if no terminating null was stored, i will allocate and set a terminator at the end of the ccP countT's
   whether this includes a terminating null depends upon how the item was stored
  will be set to the number of countT objects retrieved
 ccP
  guaranteed to be null terminated, even if a null terminator was not stored in the item
 pcP
 tinP
arguments
\<A HREF=\"5.14e001a.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$shiftRightF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

