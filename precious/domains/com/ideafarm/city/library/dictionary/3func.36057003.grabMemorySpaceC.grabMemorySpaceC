
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    //BLAMMO ; //U::
    //thirdC::c_strncpyIF( tinP , tinP.postTell , "grabMemorySpaceC::grabMemorySpaceC/-( about to BLAMMO )" , sizeof tinP.postTell ) ;

    inc02AM( pBack->cRef ) ;

    }
        }
            ++ s ; thirdC::osThreadYieldIF( tinP , TAG( TAGiDnULL ) ) ;
        {
        while( getNegAM( pBack->finger2 ) != FINGERnEG_BACKgRABmEMORYsPACEc2 )
        sleepC s( tinP , TAG( TAGiDnULL ) ) ;
    {
    else
    }
        new( 0 , tinP , (byteT*)pBack , sizeof( backGrabMemorySpaceC ) ) backGrabMemorySpaceC( tinP , idGroupP ) ;
    {
    if( !( F(flagsSharedMemory) & flOPENsHAREDmEMORYrESULT_ALREADYeXISTED ) )
    
    if( !pBack ) { BLAMMO ; }
    backGrabMemorySpaceC* pBack = (backGrabMemorySpaceC*)handle.cNoteF() ;
    thirdC::dosOpenSharedMemIF( tinP , handle , flagsSharedMemory , "//napkinC/grabMemorySpaceC" , 0 , sizeof( backGrabMemorySpaceC ) , ifcOPENsHAREDmEMORYhOW_nCeO , idMemorySpaceP ) ;
    ZE( flagsT , flagsSharedMemory ) ;
{
handle( tinP , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_SHAREDmEMORY )
grabitx( tinP , TAG( TAGiDnULL ) ) ,
/*1*/grabMemorySpaceC::grabMemorySpaceC( tinS& tinP , const countT idGroupP , const countT idMemorySpaceP ) :/*1*/

/**/
*/
\<A HREF=\"5.1790003.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//

