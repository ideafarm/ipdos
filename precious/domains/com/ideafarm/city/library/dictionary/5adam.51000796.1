
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etherC::loafIF( tinP ) ;
etThread.traceF( tinP , T("ok") ) ;

}
    }
        etThread.osThreadF( TaRG1( tmWorkerF ) , (countT)pPointer ) ;                         // THE THREAD MUST DELETE pPointer
        POINTERc* pPointer = new( 0 , tinP , LF ) POINTERc( pointer1 ) ; ___( pPointer ) ;    // USE COPY CT'OR TO CONSTRUCT A COPY FOR EACH THREAD
    {
    while( cDo -- )
    countT cDo = 8 ;

    POINTERc_END( 1 , pointer1 )
    tinP , TAG( TAGiDnULL ) , flTEXTc_null , "This is the day that the Lord has made!  Let us rejoice and be glad in Him!"
    POINTERc_BEGIN( 1 , textC )

    // THAT'S THE WHOLE POINT; THIS CODE ALLOWS FOR "AUTOMATIC GARBAGE COLLECTION" IN C++
    // NOTE THAT pointer1 IS DESTROYED IMMEDIATELY AFTER LAUNCHING THE THREADS ; THIS IS A FEATURE ; THE textC INSTANCE WON'T BE DESTROYED UNTIL THERE ARE NO MORE REFERENCES
    // "POINTERc" IS JUST AN ALIAS FOR CLASS NAME blobVSP
    // IF MULTIPLE POINTERc INSTANCES ARE NEEDED, INCREMENT "1" (THE WOTH ARGUMENT) FOR EACH INSTANCE
    // TO DO THAT, APPLICATION CODE MUST DEFINE A CLASS, SO THAT THIS CODE CAN BE USED
    // THIS CODE CANNOT BE USED FOR CREATING A POINTER TO A "RAW" BLOB SUCH AS A STRING OF byteT
    // THIS CODE CAN BE USED FOR ANY CLASS THAT CONTAINS NEWdELcLASSpROTOS IN ITS DEFINITION
    // THE MIDDLE LINE CONTAINS THE textC CONSTRUCTOR ARGUMENTS
    // THESE 3 LINES CT A POINTERc INSTANCE NAMED pointer1 THAT POINTS TO A NEWLY ALLOCATED textC INSTANCE
{

TODO

DONE( tmWorkerF )
}
    }
        DEL( pPointerP ) ;                       // THIS LINE DESTROYS THE textC INSTANCE ONLY WHEN THERE ARE NO MORE REFERENCES
        etThread.traceF( tinP , tSay ) ;
        PrEF( textC , tSay , *pPointerP ) ;
    {
    if( pPointerP )
    POINTERc* pPointerP = (POINTERc*)pTaskP->c1 ;
{
if( pTaskP && pTaskP->c1 )
TASK( tmWorkerF )

GARBAGEcOLLECTORdEF( 1 , textC )

/*1*/WAKEsHOWtEXT( "example.simplest.1snip.1120056e.POINTERc.automatic.garbage.collection" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//

