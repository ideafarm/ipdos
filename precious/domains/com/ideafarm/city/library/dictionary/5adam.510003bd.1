
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

}
    etThread.strokeF( tinP , T("\r\nok\r\n") ) ;
    etThread.delF( tinP , postOldCode ) ;
    etThread.boxPutF( tinP , T("///ideafarm/precious/domains/com/ideafarm/city/library/snip/1snip.19000005.genFileIds.h") , postOldCode ) ;
    etThread.delF( tinP , psttOldCode ) ;
    etThread.strMakeF( tinP , postOldCode , psttOldCode ) ; ___( postOldCode ) ;
    ZE( osTextT* , postOldCode ) ;

    FORsTRINGSiNsPANNEDcOMBINEDtAIL1
    }
        etThread.delF( tinP , psttw2 ) ;
        etThread.delF( tinP , psttw ) ;
        etThread.strFuseF( tinP , psttOldCode , T("0x")+T(psttw)+T(" , 0x")+T(psttw2) ) ; ___( psttOldCode ) ;
        else            etThread.strFuseF( tinP , psttOldCode , T(" ,\r\n") ) ;
        if( !psttOldCode ) etThread.strMakeF( tinP , psttOldCode , T("") , 0x1b * cFiles - 4 ) ;
    
        etThread.strokeF( tinP , T(psttw)+T("\r") ) ;
        if( !( idCompressed % 0x10 ) ) etThread.strokeF( tinP , T("")+S2(saOLD_EDITeRASEbACKtOmARK,scOld_EDIT)+S2(0,scOld_SYSmARK) ) ;
    
        etThread.strFromF( tinP , psttw2 , idCompressed , flFORMAT_UNSIGNED | flFORMAT_NObIGITvALUES | flFORMAT_FILLzE | flFORMAT_FOREIGN , 8 ) ; ___( psttw2 ) ;
        etThread.strFromF( tinP , psttw  , idImmutable  , flFORMAT_UNSIGNED | flFORMAT_NObIGITvALUES | flFORMAT_FILLzE | flFORMAT_FOREIGN , 7 ) ; ___( psttw ) ;
        countT idImmutable = etThread.strDigitsToSCountF( tinP , textIdFileC( tinP , psttc1 ) , 0 , 1 ) ;
    
        idCompressed ++ ;
    
        if( ether ) break ;
    {
    FORsTRINGSiNsPANNEDcOMBINEDhEAD1( soul1m )
    
    writeMiscFileF( tinP , etThread , cFiles ) ;
    cFiles += etThread.boxMenuF( tinP , soul1m , T("///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/4boot.*") ) ;
    cFiles += etThread.boxMenuF( tinP , soul1m , T("///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.*") ) ;
    cFiles += etThread.boxMenuF( tinP , soul1m , T("///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/1snip.*") ) ;
    cFiles += etThread.boxMenuF( tinP , soul1m , T("///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/0*"     ) ) ;
    ZE( countT , cFiles ) ;
    //U: SUPPORT IMPLICIT IDS AND TITLES FOR ????104 FILES (TO MAKE DISTRIBUTION FILES SMALLER)
    soulC soul1m( tinP , TAG( TAGiDnULL ) ) ;
    
    etThread.strokeF( tinP , T("")+S2(0,scOld_SYSmARK) ) ;
    
    ZE( strokeS* , psttOldCode ) ;
    ZE( countT   , idCompressed ) ;
    ZE( strokeS* , psttw2 ) ;
    ZE( strokeS* , psttw ) ;
    SCOOPS
{
IFsCRATCH

CONoUTrAW( "FILE TABLE IDIMMUTABLE IDRANK\r\n" ) ;

TODO

}
    etThread.boxPutF( tinP , T("///ideafarm/precious/domains/com/ideafarm/city/library/snip/1snip.0050010.gen_CsOURCEfILES.h") , (osTextT*)tt , tt.csF( tinP ) ) ;
    TN( tt , "" ) ; tt = T("#define CsOURCEfILES 0x")+TF3(cSourceFilesP,flFORMAT_UNSIGNED|flFORMAT_FOREIGN|flFORMAT_FILLzE,8)+T("\r\n") ;
{
voidT writeMiscFileF( tinS& tinP , etherC& etThread , const countT cSourceFilesP )

/*1*/WAKEsHOWtEXT( "ifcIDaDAM_DEFiDiMMUTABLE.fileIdsTable" )/*1*/
/**/
*/
also defines CsOURCEfILES
writes the immutable + compressed file id table
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

