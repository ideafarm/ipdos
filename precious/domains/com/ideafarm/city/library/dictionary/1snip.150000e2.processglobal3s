
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


;
}
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.350cc004.processglobal3s._processglobal3i_if!||
    static processGlobal3S& _processGlobal3I_IF( voidT ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360cc003.processglobal3s.processglobal3s!||
    processGlobal3S( voidT ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360cc002.processglobal3s.dt_processglobal3s!||
    ~processGlobal3S( voidT ) ;

    cryC                                     cry325 ;
    mapCTC                                   mapIdPhaseProcess  ;
    mapCTC                                   mapSSSIdAdam       ;
    mapCTC                                   mapGroup           ;
    mapCTC                                   mapAlphabet1       ;
    mapCTC                                   mapTinName         ;
    mapCTC                                   mapListName        ;
    mapCTC                  /*P3*/ /*CT:41*/ mapSay             ;
    mapCTC                  /*P3*/ /*CT:41*/ mapTool            ;
    mapCTC                  /*P3*/ /*CT:41*/ mapWindowMessage   ;
    mapCTC                  /*P3*/ /*CT:41*/ mapSadamCall       ;
    mapCTC                  /*P3*/ /*CT:41*/ mapFileTitle   ;
    mapCTC                  /*P3*/ /*CT:31*/ mapCaste       ;
    mapCTC                  /*P3*/ /*CT:21*/ mapThreadPhase ;
    mapCTC                  /*P3*/ /*CT:11*/ mapDefinition  ;
    mapCTC                  /*P3*/ /*CT:01*/ mapdropNoteType ;
    mapCTC                  /*P3*/ /*CT:f0*/ mapExceptionType ;
    mapCTC                  /*P3*/ /*CT:e0*/ mapWhat        ;
    mapCTC                  /*P3*/ /*CT:d0*/ mapSoulItem    ;
    mapCTC                  /*P3*/ /*CT:c0*/ mapAdam        ;
    mapCTC                  /*P3*/ /*CT:b0*/ mapAdamClass   ;
    mapCTC                  /*P3*/ /*CT:a0*/ mapProcessPhase ;
    mapCTC                  /*P3*/ /*CT:90*/ mapPopClientWork ;
    cryC                                     cry324 ;
    handleC                 /*P3*/ /*CT:91*/ _thirdC_hWindowingClient ; // SOME OPERATING SYSTEMS PASS A HANDLE INTO A WINDOW PROCESS AS A COMMAND LINE PARAMETER; THIS IS WHERE IT IS PUT
    cryC                                     cry323 ;
    grabC                   /*P3*/ /*CT:d1*/ _thirdC_grab_flagsProcessState_ ;
    cryC                                     cry322 ;
    cryC                                     cry321 ;
    booksC                                   bksWords ;
    booksC                                   bksWord ;
    bookC                                    bkTraceLoop ;

    cryC                                     cry320 ;
    booksC                                   bksTraceDivert10 ;
    cryC                                     cry31f ;
    booksC                                   bksTraceDivert0f ;
    cryC                                     cry31e ;
    booksC                                   bksTraceDivert0e ;
    cryC                                     cry31d ;
    booksC                                   bksTraceDivert0d ;
    cryC                                     cry31c ;
    booksC                                   bksTraceDivert0c ;
    cryC                                     cry31b ;
    booksC                                   bksTraceDivert0b ;
    cryC                                     cry31a ;
    booksC                                   bksTraceDivert0a ;
    cryC                                     cry319 ;
    booksC                                   bksTraceDivert09 ;
    cryC                                     cry318 ;
    booksC                                   bksTraceDivert08 ;
    cryC                                     cry317 ;
    booksC                                   bksTraceDivert07 ;
    cryC                                     cry316 ;
    booksC                                   bksTraceDivert06 ;
    cryC                                     cry315 ;
    booksC                                   bksTraceDivert05 ;
    cryC                                     cry314 ;
    booksC                                   bksTraceDivert04 ;
    cryC                                     cry313 ;
    booksC                                   bksTraceDivert03 ;
    cryC                                     cry312 ;
    booksC                                   bksTraceDivert02 ;
    cryC                                     cry311 ;
    booksC                                   bksTraceDivert01 ;
    cryC                                     cry310 ;

    booksC                                   bksTrace ;
    booksC                                   bksTraceHomeEcho ;
    booksC                                   bksTelemetryApp ;
    booksC                                   bksTelemetrySys ;
    doC                                      do3 ;
    napkinC                 /*P3*/ /*CT:a1*/ _grabC_napGrabWant ; //CODEsYNC: 0a00001 0a00001 0a00001 0a00001
    doC                                      do2 ;
    cryC                                     cry30f ;
    napkinC                 /*P3*/ /*CT:71*/ napHome ;
    cryC                                     cry30e ;
    cryC                                     cry30d ;
    napkinC                                  napSlab ;
    cryC                                     cry30c ;
    grabUniverseC                            grabUniverse ;
    cryC                                     cry30b ;
    linkedC                                  _handleC_linked_sm ;
    cryC                                     cry30a ;
    doC                                      do1 ;
    bookC                                    bkTelemetryAppEarlyLate ;
    bookC                                    bkTelemetrySysEarlyLate ;
    heapC                                    heap ;                     // SIMPLE HEAP USED WHEN poolC CANNOT BE USED (E.G. TO AVOID NONMONOTONIC GRABBING)
    tinS                    /*P3*/ /*CT:80*/ tinVeryVeryEarlyLateMain ; // MUST BE CT AFTER tinP.pAdamGlobal1->pPoolHomeTemp AND BEFORE ANY GLOBALS THAT USE IT SUCH AS A grabC OBJECT
    cryC                                     cry309 ;
    gloSecurityGC           /*P3*/ /*CT:70*/ gloSecurity ;
    cryC                                     cry308 ;
    testWaterC              /*P3*/ /*CT:60*/ testWater ;
    cryC                                     cry307 ;
    sCountFromPostC         /*P3*/ /*CT:50*/ scfp_idAdam ;
    cryC                                     cry306 ;
    sCountFromPostC         /*P3*/ /*CT:50*/ scfp_idAdamRoot ;
    sCountFromPostC         /*P3*/ /*CT:50*/ scfp_idAdamRootOld ;
    cryC                                     cry305 ;
    parameterC              /*P3*/ /*CT:40*/ pPostIdAdamRoot ; //MUST BE AFTER !idHome IS COMPLETELY OBEYED SO THAT THE FLAG BIT fliIDhOME_HOMELESS THAT I SET IS NOT OVERRIDDEN
    cryC                                     cry304 ;
    sCountFromPostC         /*P3*/ /*CT:30*/ scfp_idHome ;
    cryC                                     cry303 ;
    parameterC              /*P3*/ /*CT:20*/ pPostIdHome ;
    cryC                                     cry302 ;
    sCountFromPostC                          scfp_idNumaNode ;
    parameterC                               pPostIdNumaNode ;
    parameterC                               pQuietInOut ;
    const timeS                              timeBaseBuilt ;
    cryC                                     cry301 ;

    public :

    byteT pbBooksNoPuseFootWords[         CBbOOKScnOpUSEbACK ] ;
    byteT pbBooksNoPuseFootWord[          CBbOOKScnOpUSEbACK ] ;
    byteT pbBooksNoPuseFootTraceDivert10[ CBbOOKScnOpUSEbACK ] ;
    byteT pbBooksNoPuseFootTraceDivert0f[ CBbOOKScnOpUSEbACK ] ;
    byteT pbBooksNoPuseFootTraceDivert0e[ CBbOOKScnOpUSEbACK ] ;
    byteT pbBooksNoPuseFootTraceDivert0d[ CBbOOKScnOpUSEbACK ] ;
    byteT pbBooksNoPuseFootTraceDivert0c[ CBbOOKScnOpUSEbACK ] ;
    byteT pbBooksNoPuseFootTraceDivert0b[ CBbOOKScnOpUSEbACK ] ;
    byteT pbBooksNoPuseFootTraceDivert0a[ CBbOOKScnOpUSEbACK ] ;
    byteT pbBooksNoPuseFootTraceDivert09[ CBbOOKScnOpUSEbACK ] ;
    byteT pbBooksNoPuseFootTraceDivert08[ CBbOOKScnOpUSEbACK ] ;
    byteT pbBooksNoPuseFootTraceDivert07[ CBbOOKScnOpUSEbACK ] ;
    byteT pbBooksNoPuseFootTraceDivert06[ CBbOOKScnOpUSEbACK ] ;
    byteT pbBooksNoPuseFootTraceDivert05[ CBbOOKScnOpUSEbACK ] ;
    byteT pbBooksNoPuseFootTraceDivert04[ CBbOOKScnOpUSEbACK ] ;
    byteT pbBooksNoPuseFootTraceDivert03[ CBbOOKScnOpUSEbACK ] ;
    byteT pbBooksNoPuseFootTraceDivert02[ CBbOOKScnOpUSEbACK ] ;
    byteT pbBooksNoPuseFootTraceDivert01[ CBbOOKScnOpUSEbACK ] ;
    byteT pbBooksNoPuseFootTrace[         CBbOOKScnOpUSEbACK ] ;
    byteT pbBooksNoPuseFootTraceHomeEcho[ CBbOOKScnOpUSEbACK ] ;
    byteT pbBooksNoPuseFootTelemetryApp[  CBbOOKScnOpUSEbACK ] ;
    byteT pbBooksNoPuseFootTelemetrySys[  CBbOOKScnOpUSEbACK ] ;

    private :

    static const mapCTS pMap61[] ;
    static const mapCTS pMap51[] ;
    static const mapCTS pMap41[] ;
    static const mapCTS pMap31[] ;
    static const mapCTS pMap21[] ;
    static const mapCTS pMap11[] ;
    static const mapCTS pMap01[] ;
    static const mapCTS pMapF[] ;
    static const mapCTS pMapE[] ;
    static const mapCTS pMapD[] ;
    static const mapCTS pMapC[] ;
    static const mapCTS pMapB[] ;
    static const mapCTS pMapA[] ;
    static const mapCTS pMap9[] ;
    static const mapCTS pMap8[] ;
    static const mapCTS pMap7[] ;
    static const mapCTS pMap6[] ;
    static const mapCTS pMap5[] ;
    static const mapCTS pMap4[] ;
    static const mapCTS pMap3[] ;
    static const mapCTS pMap2[] ;
    static const mapCTS pMap1[] ;
{
/*1*/struct _export processGlobal3S/*1*/

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

