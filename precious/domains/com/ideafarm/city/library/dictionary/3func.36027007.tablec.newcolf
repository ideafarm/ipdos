
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    baton.ungrabF( tinP ) ;

    stNames << psttn ;
    else                                 { ether.strMakeF( tinP , LF , psttn , T("c")+TF1(1+stNames) ) ; ___( psttn ) ; }
    if( psttNameP && psttNameP->idAdam ) { ether.strMakeF( tinP , LF , psttn , psttNameP                   ) ; ___( psttn ) ; }
    ZE( strokeS* , psttn ) ;

    _IO_
    baton.grabF( tinP , TAG( TAGiDnULL ) ) ;

    }
        if( POOP ) return  ;
        __( idPhase > idTABLEpHASE_DEFINEcOLS ) ;
        if( POOP ) return  ;
    {
    IFbEcAREFUL
    SCOOP
{
/*1*/voidT tableC::newColF( tinS& tinP , const strokeS* const psttNameP )/*1*/

/**/
*/
this cannot be called after newEventF has been called
new columns cannot be added to a table that already contains references to data
call this once for each of the columns that a table is to have
use this command to enumerate the number and type of the objects in each coinstantiation event (each row of the table)
  \<A HREF=\"5.9520104.1.1.0.html\"\>9520104:  WAKEsHOW( "example.simplest.func.1320007.tableC.newColF" )\</A\>
 simplest
examples
\<A HREF=\"5.1320007.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$newColF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

