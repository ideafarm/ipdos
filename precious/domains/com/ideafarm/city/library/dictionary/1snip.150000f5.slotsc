
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


;
}
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360e1013.slotsc.testDropHeadersF!||
    voidT testDropHeadersF( tinS& tinP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360e1012.slotsc.makeSexF!||
    voidT makeSexF( tinS& tinP , const countT expSlotsP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360e1011.slotsC.deleteTopSexF!||
    countT deleteTopSexF( tinS& tinP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360e100f.slotsC.deleteEmptiesIfF!||
    voidT deleteEmptiesIfF( tinS& tinP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360e100e.slotsC.glassF!||
    voidT glassF( tinS& tinP , strokeS*& psttP ) const ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3400d.slotsC.flushF!||
    voidT flushF( tinS& tinP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3400c.slotsC.ctFileNameLikeF!||
    static voidT ctFileNameLikeIF( tinS& tinP , textC& tLikeP , const osTextT* const postNameP , const countT idStateSpaceP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3400b.slotsC.bStateExistsIF!||
    static boolT bStateExistsIF( tinS& tinP , const osTextT* const postNameP , const countT expCbSlotP , const countT idStateSpaceP = 0 ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3400a.slotsC.walkF!||
    voidT walkF( tinS& tinP , slotsWalkCBFT pSlotsWalkCBFP , countT& cArgP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34009.slotsC.operator_element!||
    byteT* operator []( const countT offP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34008.slotsC.operator_element!||
    countT operator []( const byteT* pbP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34007.slotsC.pDropNoteF!||
    dropNoteS* pDropNoteF( tinS& tinP , const byteT* const pbP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34006.slotsC.operator_not!||
    boolT operator !( voidT ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34005.slotsC.operator_call!||
    voidT operator ()( tinS& tinP , byteT*& pbP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360e1010.slotsC.newF!||
    byteT* newF( tinS& tinP , const countT idLineP , const countT idiFileP , const flagsT flagsP = flSLOTScnEW_null ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34004.slotsC.operator_byteT_ptr!||
    operator byteT*( voidT ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34003.slotsC.slotsC!||
    slotsC( tinS& tinP , const countT idLineCtP , const countT idiFileCtP , const byteT* const pbBitsCtP , const countT idLineNewP , const countT idiFileNewP , const osTextT* const postNameP , const countT poolC_cBitsExpCbSlotP , const countT expCbSlotP , const flagsT flagsP = flSLOTSc_null , const countT idStateSpaceP = 0 , countT idMemorySpaceP = 0 , poolC* const pPoolContainsMeP = 0 ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34002.slotsC.dt_slotsC!||
    ~slotsC( voidT ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34001.slotsC.NEWdELcLASSb!||
    NEWdELcLASSpROTOS

    public :

    poolC* const        pPoolContainsMe ;
    grabC* const        pGrabNewElt ;
    countT              pcTallyOut[ CsLOTeXTENTS ] ;
    countT              pcTallyIn[ CsLOTeXTENTS ] ;
    byteT               pbzaGrab[ CsLOTeXTENTS * sizeof( grabC ) ] ;
    sexC*               ppSex[ CsLOTeXTENTS ] ;
    byteT               pbza2[  CsLOTeXTENTS * SIZEOF_sexC ] ; // USED IF     NESTED
    byteT               pbza1[  CsLOTeXTENTS * SIZEOF_sexC ] ; // USED IF NOT NESTED
    const countT        cBitsExpSlots ;
    const countT        expSlotsMin ;
    const countT        expCbSlot ;
    const countT        poolC_cBitsExpCbSlot ;
    osTextT             postName[ COSTpOOLnAMEmAX ] ;         // THIS VALUE MUST BE SHORTER THAN COSTpOOLnAMEmAX TO ALLOW FOR slotsC AND sexC APPENDAGES
    const countT        idMemorySpace ;
    const countT        idStateSpace ;    
    const flagsT        flagsCt ;
{
/*1*/class _export slotsC/*1*/

/**/

*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

