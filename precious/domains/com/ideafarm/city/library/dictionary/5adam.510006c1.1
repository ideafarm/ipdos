
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etherC::loafIF( tinP ) ;
etThread.traceF( tinP , T("ok") ) ;

etThread.openSsl_shutdownF( tinP ) ;
}
    }
        }
            }
                shutdown( oshSock , 2 ) ;

                etThread.boxPutF( tinP , T("///d/tmp/foo.ttt") , postHear , rc ) ;
                etThread.traceF( tinP , T(postHear) ) ;

                etThread.openSsl_readF( tinP , postHear , sizeof postHear , hSslWrapper ) ;
                memset( postHear , 0 , sizeof postHear ) ;
                char postHear[ 0x10000 ] ; 

                etThread.openSsl_writeF( tinP , hSslWrapper , (osTextT*)tSay , (countT)tSay.csF( tinP ) ) ;

                tSay += TF4(tSayBody.csF(tinP),flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED|flFORMAT_FOREIGN|flFORMAT_NObASE,0,0xa)+T("\r\n\r\n")+tSayBody ;
                ) ;

                    "Content-Length: "
                    "Content-Type: application/json\r\n"
                    "Accept: application/json\r\n"
                    "Host: identity.api.rackspacecloud.com\r\n"
                    "User-Agent: IPDOS (tm)\r\n"
                    "POST /v2.0/tokens HTTP/1.1\r\n"

                TN( tSay , 

                ) ;

                    "}\r\n"
                    "   }\r\n"
                    "      }\r\n"
                    "         \"apiKey\": \"100a4e75636b4b3f8adbd861548fe868\"\r\n"
                    "         \"username\": \"ideafarm\",\r\n"
                    "      {\r\n"
                    "      \"RAX-KSKEY:apiKeyCredentials\":\r\n"
                    "   {\r\n"
                    "   \"auth\":\r\n"
                    "{\r\n"

                TN( tSayBody ,
                etThread.openSsl_shakeHandsF( tinP , hSslWrapper ) ;

                }
                    hSock.resetF() ;
                    etThread.openSsl_wrap SocketF( tinP , hSslWrapper , hSock ) ;
                    hSock.osF( ifcIDtYPEhANDLE_SOCKET , oshSock ) ;
                    handleC hSock( tinP , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_SOCKET ) ;
                {

                int rc = connect( oshSock , (sockaddr*)&info , sizeof info ) ;
                info.sin_addr.s_addr = *(int*)pInfo->h_addr_list[ 0 ] ;
                info.sin_port = htons( 443 ) ;
                info.sin_family = AF_INET ;
                memset( &info , 0 , sizeof info ) ;
                sockaddr_in info ;
            {
            if( pInfo )
            hostent* pInfo = gethostbyname( "identity.api.rackspacecloud.com" ) ;
        {
        if( oshSock )
        int oshSock = socket( PF_INET , SOCK_STREAM , 0 ) ;
    {
    if( ~hSslWrapper )

    etThread.openSsl_wrapHandleF( tinP , hSslWrapper , hSslContext ) ;
    handleC hSslWrapper( tinP , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_openSslWrapper ) ;
{
if( ~hSslContext )

etThread.openSsl_getContextF( tinP , hSslContext ) ;
handleC hSslContext( tinP , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_openSslContext ) ;

etThread.openSsl_setupF( tinP ) ;

TODO

/*1*/WAKEsHOWtEXT( "example.other.3func.360021d1.etherC.openSsl_setupF" )/*1*/
/**/
*/
i use bare metal sockets code to test the basic etherC::openSsl_* member functions
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

