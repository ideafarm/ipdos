
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return ce ? ce - 1 : 0 ;
    ZE( countT , ce ) ;

    _IO_

    }
        if( POOP ) return 0 ;
        __NZ( pcP ) ;
        if( POOP ) return 0 ;
    {
    IFbEcAREFUL
    SCOOP
{
/*1*/countT etherC::etherEmployersF( tinS& tinP , countT*& pcP )/*1*/
/**/
*/
 pcP
arguments
evaluates to the number of id's retrieved, which is one plus the number of employers
the fourth item is that employer's employer, etc.
the third item is the immediate employer's employer
the second item is the immediate employer of the requesting standard task
the first item (at offset 0) is the standard task that hires etherEmployersF
the information returned is only for the calling thread
each identifies an immutable standard task
allocates a null terminated string of employer identifiers
it is illegal to refer to this symbol in the definition of an adam
\<A HREF=\"5.10300c5.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$etherEmployersF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//

