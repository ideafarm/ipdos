
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etherC::loafIF( tinP ) ;
etThread.traceF( tinP , T("ok") ) ;

etThread.delF( tinP , pcWord ) ;

}
    }
        etThread.traceF( tinP , T("[offw,idCell,idThread,idFile,idLine]:    ")+TF2(offw,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED)+T("    ")+TF2(idCell,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED)+T("    ")+TF2(idThread,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED)+T("    ")+TF4(idLine,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED|flFORMAT_FOREIGN,0,0xa)+T("    ")+T(postTitle) ) ;
        //etThread.traceF( tinP , T("[offw,word]:    ")+TF2(offw,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED)+T("    ")+TF2(pcWord[offw],flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ;

        const osTextT* const postTitle = !idFile ? 0 : mapFileTitle( idFile ) + sizeof( countT ) ;

        countT idCell   = pcWord[ offw ] & 0x7    ;
        countT idThread = pcWord[ offw ] & 0x7    ;  pcWord[ offw ] >>= 3 ;
        countT idFile   = pcWord[ offw ] & 0x1fff ;  pcWord[ offw ] >>= 0xd ;
        countT idLine   = pcWord[ offw ] & 0x1fff ;  pcWord[ offw ] >>= 0xd ;
    {
    if( pcWord[ offw ] )
{
for( countT offw = 0 ; offw < cWords ; offw ++ )

mapCTC& mapFileTitle = processGlobal3S::_processGlobal3I_IF().mapFileTitle ;

countT cWords = etThread.snapWordF( tinP , pcWord ) ; ___( pcWord ) ;
ZE( countT* , pcWord ) ;

_
_
_
_
_
_
_
_
debugF() ;
_
_
_
_
_
_
_
_

TODO

/*1*/WAKEsHOWtEXT( "example.other.3func.360021e0.etherc.snapwordf" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

