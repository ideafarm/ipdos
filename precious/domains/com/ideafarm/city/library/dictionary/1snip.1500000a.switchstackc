
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


;
}
/**/

 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34097.switchStackC.recycleLever6F!||
 countT recycleLever6F( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34095.switchStackC.recycleLever5F!||
 countT recycleLever5F( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34094.switchStackC.recycleLever4F!||
 countT recycleLever4F( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34093.switchStackC.recycleLever3F!||
 countT recycleLever3F( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34092.switchStackC.recycleLever2F!||
 countT recycleLever2F( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34091.switchStackC.recycleLever1F!||
 countT recycleLever1F( tinS& tinP ) ;
 inline voidT recycleCleanF( tinS& tinP ) { freeAllF( tinP ) ; }
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34096.switchStackC.newRecyclableIF!||
 static switchStackC* newRecyclableIF( tinS& tinP , const countT idTypeLeverP , const flagsT flagsSwitchP , const countT c_pLeverP , const flagsT flagsStackP , const countT idTypeP = 0 , const countT idGrabLayerP = ifcIDgRABlAYER_7BASEmISC1 , const countT c_pcpLeverLathRefP = 0 ) ;
/* recycle */

 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34090.switchStackC.pLeverLathRefF!||
 countT* pLeverLathRefF( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34087.switchStackC.idSlotOfLeverF!||
 countT idSlotOfLeverF( tinS& tinP , const countT leverP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34086.switchStackC.grabListF!||
 voidT grabListF( tinS& tinP , countT**& ppcDownP , countT**& ppcUpP , countT& cDownP , countT& cUpP , const boolT bSwitchP = 0 , const boolT bTinHasLeverP = 0 , const boolT bNoGrabP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34085.switchStackC.outF!||
 boolT outF( tinS& tinP , const boolT bQueryP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34084.switchStackC.inF!||
 boolT inF( tinS& tinP , const boolT bQueryP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34083.switchStackC.upF!||
 boolT upF( tinS& tinP , const boolT bQueryP = 0 , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34082.switchStackC.downF!||
 boolT downF( tinS& tinP , const boolT bQueryP = 0 , const boolT bTinHasLeverP = 0 ) ;
/* commands to navigate the switchstack (move ppLastRef) */

 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3408f.switchStackC.waitGrabF!||
 boolT waitGrabF( tinS& tinP , const countT cPlatesLimitP , const boolT& bQuitP , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3408e.switchStackC.waitF!||
 voidT waitF( tinS& tinP , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3405a.switchStackC.stackF!||
 voidT stackF( tinS& tinP , stackC& stackP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3404f.switchStackC.stackF!||
 stackC& stackF( tinS& tinP , const countT idP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34032.switchStackC.topF!||
 countT& topF( tinS& tinP , const boolT bTinHasLeverP = 0 ) ;
 //||!k t|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/U:!||
 countT& upUndoF( tinS& tinP , handleC& handleP , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34025.switchStackC.upF!||
 countT& upF( tinS& tinP , handleC& handleP , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34089.switchStackC.randomF!||
 voidT randomF( tinS& tinP , byteT*& pbP , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34070.switchStackC.randomF!||
 voidT randomF( tinS& tinP , timeS& timeP , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3406d.switchStackC.randomF!||
 voidT randomF( tinS& tinP , nicNameC& nicNameP , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34065.switchStackC.randomF!||
 countT& randomF( tinS& tinP , const boolT bTinHasLeverP = 0 ) ;
 //||!k t|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/U:!||
 countT& downUndoF( tinS& tinP , handleC& handleP , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34024.switchStackC.downF!||
 countT& downF( tinS& tinP , handleC& handleP , const boolT bTinHasLeverP = 0 ) ;
/* commands to inspect the items on the stack without removing them */

 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3409f.switchStackC.sortFlavorsF!||
 voidT sortFlavorsF( tinS& tinP , const flagsT flagsP = flSTACKsORT_null , ifc4FT pSubtractFP = 0 , const countT subtractionParmP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3409e.switchStackC.sortF!||
 voidT sortF( tinS& tinP , const flagsT flagsP = flSTACKsORT_null , const boolT bTinHasLeverP = 0 , ifc4FT pSubtractFP = 0 , const countT subtractionParmP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3408a.switchStackC.purgeF!||
 voidT purgeF( tinS& tinP , countT cPlatesRetainP = 0 , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34067.switchStackC.idTypeF!||
 countT idTypeF( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34066.switchStackC.flagsStackF!||
 flagsT flagsStackF( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3404e.switchStackC.idLeverTypeF!||
 countT idLeverTypeF( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34031.switchStackC.replaceLeverF!||
 voidT replaceLeverF( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34030.switchStackC.replaceLeverF!||
 voidT replaceLeverF( tinS& tinP , countT& leverP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34034.switchStackC.plateF!||
 countT& plateF( tinS& tinP , const countT idP , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34026.switchStackC.leverF!||
 countT leverF( tinS& tinP , const countT idP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3408b.switchStackC.freeAllF!||
 voidT freeAllF( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34081.switchStackC.freeNullFlavorsF!||
 voidT freeNullFlavorsF( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34059.switchStackC.freeF!||
 voidT freeF( tinS& tinP , const boolT bRetainFlavorP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3404d.switchStackC.cPlatesAllF!||
 countT cPlatesAllF( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34033.switchStackC.cPlatesF!||
 countT cPlatesF( tinS& tinP , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3400f.switchStackC.cFlavorsF!||
 countT cFlavorsF( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34023.switchStackC.ungrabF!||
 voidT ungrabF( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34022.switchStackC.grabF!||
 voidT grabF( tinS& tinP , const countT idLineP , const countT idiFileP , const byteT* const pbBitsP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34076.switchStackC.operator_call!||
 countT operator () ( timeS& timeP , ifc4FT pSubtractFP = 0 , const countT subtractionParmP = 0 , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34058.switchStackC.operator_call!||
 countT operator () ( soulC& soulP , ifc4FT pSubtractFP = 0 , const countT subtractionParmP = 0 , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3404c.switchStackC.operator_call!||
 countT operator () ( nicNameC& nicNameP , ifc4FT pSubtractFP = 0 , const countT subtractionParmP = 0 , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3402f.switchStackC.operator_call!||
 countT operator () ( count8S& c8P , ifc4FT pSubtractFP = 0 , const countT subtractionParmP = 0 , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3402e.switchStackC.operator_call!||
 countT operator () ( count7S& c7P , ifc4FT pSubtractFP = 0 , const countT subtractionParmP = 0 , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3402d.switchStackC.operator_call!||
 countT operator () ( count6S& c6P , ifc4FT pSubtractFP = 0 , const countT subtractionParmP = 0 , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3402c.switchStackC.operator_call!||
 countT operator () ( count5S& c5P , ifc4FT pSubtractFP = 0 , const countT subtractionParmP = 0 , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3402b.switchStackC.operator_call!||
 countT operator () ( count4S& c4P , ifc4FT pSubtractFP = 0 , const countT subtractionParmP = 0 , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3402a.switchStackC.operator_call!||
 countT operator () ( count3S& c3P , ifc4FT pSubtractFP = 0 , const countT subtractionParmP = 0 , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34029.switchStackC.operator_call!||
 countT operator () ( count2S& c2P , ifc4FT pSubtractFP = 0 , const countT subtractionParmP = 0 , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34028.switchStackC.operator_call!||
 countT operator () ( const strokeS* const psttP , ifc4FT pSubtractFP = 0 , const countT subtractionParmP = 0 , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3408c.switchStackC.operator_call!||
 countT operator () ( const countT* const pcP , ifc4FT pSubtractFP = 0 , const countT subtractionParmP = 0 , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34062.switchStackC.operator_call!||
 countT operator () ( const byteT* const pbP , ifc4FT pSubtractFP = 0 , const countT subtractionParmP = 0 , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3407c.switchStackC.operator_call!||
 countT operator () ( const measureT mP , ifc4FT pSubtractFP = 0 , const countT subtractionParmP = 0 , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34027.switchStackC.operator_call!||
 countT operator () ( const countT cP , ifc4FT pSubtractFP = 0 , const countT subtractionParmP = 0 , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3400a.switchStackC.operator_element!||
 countT& operator []( const countT idP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34078.switchStackC.operator_stackC_ref!||
 operator stackC& ( voidT ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34003.switchStackC.operator_countT!||
 operator countT ( voidT ) ;
/* commands and expressions to obtain information from the stack for the current thread */

 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34071.switchStackC.pullF!||
 switchStackC& pullF( tinS& tinP , timeS& timeP , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34057.switchStackC.pullF!||
 switchStackC& pullF( tinS& tinP , soulC*& pSoulP , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3406c.switchStackC.pullF!||
 switchStackC& pullF( tinS& tinP , nicNameC& nicNameP , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3409c.switchStackC.pullF!||
 switchStackC& pullF( tinS& tinP , plateC*& pPlateP , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3404b.switchStackC.pullF!||
 switchStackC& pullF( tinS& tinP , nicNameC*& pNicNameP , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34046.switchStackC.pullF!||
 switchStackC& pullF( tinS& tinP , count8S*& pc8P , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34045.switchStackC.pullF!||
 switchStackC& pullF( tinS& tinP , count7S*& pc7P , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34044.switchStackC.pullF!||
 switchStackC& pullF( tinS& tinP , count6S*& pc6P , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34043.switchStackC.pullF!||
 switchStackC& pullF( tinS& tinP , count5S*& pc5P , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34042.switchStackC.pullF!||
 switchStackC& pullF( tinS& tinP , count4S*& pc4P , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34041.switchStackC.pullF!||
 switchStackC& pullF( tinS& tinP , count3S*& pc3P , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34040.switchStackC.pullF!||
 switchStackC& pullF( tinS& tinP , count2S*& pc2P , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3403f.switchStackC.pullF!||
 switchStackC& pullF( tinS& tinP , strokeS*& psttP , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34061.switchStackC.pullF!||
 switchStackC& pullF( tinS& tinP , byteT*& pbP , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3407e.switchStackC.pullF!||
 switchStackC& pullF( tinS& tinP , measureT& mP , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34036.switchStackC.pullF!||
 switchStackC& pullF( tinS& tinP , countT& valueP , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34080.switchStackC.extractF!||
 voidT extractF( byteT* const pbP , tinS& tinP , const countT idP = 0 , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3406f.switchStackC.extractF!||
 voidT extractF( tinS& tinP , timeS& timeP , const countT idP , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3406e.switchStackC.extractF!||
 voidT extractF( tinS& tinP , nicNameC& nicNameP , const countT idP = 0 , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3407f.switchStackC.extractF!||
 voidT extractF( tinS& tinP , byteT*& pbP , countT& cbP , const countT idP = 0 , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3400e.switchStackC.extractF!||
 countT extractF( tinS& tinP , const countT idP = 0 , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34072.switchStackC.operator_shiftRight!||
 switchStackC& operator >> ( timeS& timeP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34056.switchStackC.operator_shiftRight!||
 switchStackC& operator >> ( soulC*& pSoulP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3406b.switchStackC.operator_shiftRight!||
 switchStackC& operator >> ( nicNameC& nicNameP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34099.switchStackC.operator_shiftRight!||
 switchStackC& operator >> ( plateC*& pPlateP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3404a.switchStackC.operator_shiftRight!||
 switchStackC& operator >> ( nicNameC*& pNicNameP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3401b.switchStackC.operator_shiftRight!||
 switchStackC& operator >> ( count8S*& pc8P ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3401a.switchStackC.operator_shiftRight!||
 switchStackC& operator >> ( count7S*& pc7P ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34019.switchStackC.operator_shiftRight!||
 switchStackC& operator >> ( count6S*& pc6P ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34018.switchStackC.operator_shiftRight!||
 switchStackC& operator >> ( count5S*& pc5P ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34017.switchStackC.operator_shiftRight!||
 switchStackC& operator >> ( count4S*& pc4P ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34016.switchStackC.operator_shiftRight!||
 switchStackC& operator >> ( count3S*& pc3P ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34009.switchStackC.operator_shiftRight!||
 switchStackC& operator >> ( count2S*& pc2P ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34008.switchStackC.operator_shiftRight!||
 switchStackC& operator >> ( strokeS*& psttP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34060.switchStackC.operator_shiftRight!||
 switchStackC& operator >> ( byteT*& pbP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3407b.switchStackC.operator_shiftRight!||
 switchStackC& operator >> ( measureT& mP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34007.switchStackC.operator_shiftRight!||
 switchStackC& operator >> ( countT& valueP ) ;
/* commands and expressions to remove an object from the stack for the current thread */

 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3405b.switchStackC.insertF!||
 voidT insertF( tinS& tinP , const countT valueP , const countT idTypeP = ifcSTACKtYPE_countT , const countT idP = 0 , const boolT bOtherWayP = 0 , const boolT bTinHasLeverP = 0 ) ;
/* commands and expressions to insert an object into the stack at a specific slot */

 voidT sinkF( tinS& tinP , countT& idSlotP , const timeS& timeP , const flagsT flagsP = flSTACKsINK_null , ifc4FT pSubtractFP = 0 , const countT subtractionParmP = 0 , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34055.switchStackC.sinkF!||
 voidT sinkF( tinS& tinP , countT& idSlotP , const soulC* const pSoulP , const flagsT flagsP = flSTACKsINK_null , ifc4FT pSubtractFP = 0 , const countT subtractionParmP = 0 , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3406a.switchStackC.sinkF!||
 voidT sinkF( tinS& tinP , countT& idSlotP , const nicNameC& nicNameP , const flagsT flagsP = flSTACKsINK_null , ifc4FT pSubtractFP = 0 , const countT subtractionParmP = 0 , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3409b.switchStackC.sinkF!||
 voidT sinkF( tinS& tinP , countT& idSlotP , const plateC* const pPlateP , const flagsT flagsP = flSTACKsINK_null , ifc4FT pSubtractFP = 0 , const countT subtractionParmP = 0 , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34049.switchStackC.sinkF!||
 voidT sinkF( tinS& tinP , countT& idSlotP , const nicNameC* const pNicNameP , const flagsT flagsP = flSTACKsINK_null , ifc4FT pSubtractFP = 0 , const countT subtractionParmP = 0 , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34021.switchStackC.sinkF!||
 voidT sinkF( tinS& tinP , countT& idSlotP , const count8S* const pc8P , const flagsT flagsP = flSTACKsINK_null , ifc4FT pSubtractFP = 0 , const countT subtractionParmP = 0 , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34020.switchStackC.sinkF!||
 voidT sinkF( tinS& tinP , countT& idSlotP , const count7S* const pc7P , const flagsT flagsP = flSTACKsINK_null , ifc4FT pSubtractFP = 0 , const countT subtractionParmP = 0 , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3401f.switchStackC.sinkF!||
 voidT sinkF( tinS& tinP , countT& idSlotP , const count6S* const pc6P , const flagsT flagsP = flSTACKsINK_null , ifc4FT pSubtractFP = 0 , const countT subtractionParmP = 0 , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3401e.switchStackC.sinkF!||
 voidT sinkF( tinS& tinP , countT& idSlotP , const count5S* const pc5P , const flagsT flagsP = flSTACKsINK_null , ifc4FT pSubtractFP = 0 , const countT subtractionParmP = 0 , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3401d.switchStackC.sinkF!||
 voidT sinkF( tinS& tinP , countT& idSlotP , const count4S* const pc4P , const flagsT flagsP = flSTACKsINK_null , ifc4FT pSubtractFP = 0 , const countT subtractionParmP = 0 , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3401c.switchStackC.sinkF!||
 voidT sinkF( tinS& tinP , countT& idSlotP , const count3S* const pc3P , const flagsT flagsP = flSTACKsINK_null , ifc4FT pSubtractFP = 0 , const countT subtractionParmP = 0 , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3400d.switchStackC.sinkF!||
 voidT sinkF( tinS& tinP , countT& idSlotP , const count2S* const pc2P , const flagsT flagsP = flSTACKsINK_null , ifc4FT pSubtractFP = 0 , const countT subtractionParmP = 0 , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3400c.switchStackC.sinkF!||
 voidT sinkF( tinS& tinP , countT& idSlotP , const strokeS* const psttP , const flagsT flagsP = flSTACKsINK_null , ifc4FT pSubtractFP = 0 , const countT subtractionParmP = 0 , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3407a.switchStackC.sinkF!||
 voidT sinkF( tinS& tinP , countT& idSlotP , const measureT mP , const flagsT flagsP = flSTACKsINK_null , ifc4FT pSubtractFP = 0 , const countT subtractionParmP = 0 , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3408d.switchStackC.sinkF!||
 voidT sinkF( tinS& tinP , countT& idSlotP , const countT* const pcP , const flagsT flagsP , ifc4FT pSubtractFP = 0 , const countT subtractionParmP = 0 , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3405f.switchStackC.sinkF!||
 voidT sinkF( tinS& tinP , countT& idSlotP , const byteT* const pbP , const flagsT flagsP = flSTACKsINK_null , ifc4FT pSubtractFP = 0 , const countT subtractionParmP = 0 , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3400b.switchStackC.sinkF!||
 voidT sinkF( tinS& tinP , countT& idSlotP , const countT valueP , const flagsT flagsP = flSTACKsINK_null , ifc4FT pSubtractFP = 0 , const countT subtractionParmP = 0 , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34074.switchStackC.pushF!||
 switchStackC& pushF( tinS& tinP , const timeS& timeP , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34054.switchStackC.pushF!||
 switchStackC& pushF( tinS& tinP , const soulC* const pSoulP , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34069.switchStackC.pushF!||
 switchStackC& pushF( tinS& tinP , const nicNameC& nicNameP , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3409a.switchStackC.pushF!||
 switchStackC& pushF( tinS& tinP , const plateC* const pPlateP , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34048.switchStackC.pushF!||
 switchStackC& pushF( tinS& tinP , const nicNameC* const pNicNameP , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3403e.switchStackC.pushF!||
 switchStackC& pushF( tinS& tinP , const count8S* const pc8P , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3403d.switchStackC.pushF!||
 switchStackC& pushF( tinS& tinP , const count7S* const pc7P , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3403c.switchStackC.pushF!||
 switchStackC& pushF( tinS& tinP , const count6S* const pc6P , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3403b.switchStackC.pushF!||
 switchStackC& pushF( tinS& tinP , const count5S* const pc5P , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3403a.switchStackC.pushF!||
 switchStackC& pushF( tinS& tinP , const count4S* const pc4P , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34039.switchStackC.pushF!||
 switchStackC& pushF( tinS& tinP , const count3S* const pc3P , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34038.switchStackC.pushF!||
 switchStackC& pushF( tinS& tinP , const count2S* const pc2P , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34037.switchStackC.pushF!||
 switchStackC& pushF( tinS& tinP , const strokeS* const psttP , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3405e.switchStackC.pushF!||
 switchStackC& pushF( tinS& tinP , const byteT* const pbP , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3407d.switchStackC.pushF!||
 switchStackC& pushF( tinS& tinP , const measureT mP , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34035.switchStackC.pushF!||
 switchStackC& pushF( tinS& tinP , const countT valueP , const boolT bTinHasLeverP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34075.switchStackC.operator_shiftLeft!||
 switchStackC& operator << ( const timeS& timeP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34053.switchStackC.operator_shiftLeft!||
 switchStackC& operator << ( const soulC* const pSoulP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34068.switchStackC.operator_shiftLeft!||
 switchStackC& operator << ( const nicNameC& nicNameP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34098.switchStackC.operator_shiftLeft!||
 switchStackC& operator << ( const plateC* const pPlateP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34047.switchStackC.operator_shiftLeft!||
 switchStackC& operator << ( const nicNameC* const pNicNameP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34015.switchStackC.operator_shiftLeft!||
 switchStackC& operator << ( const count8S* const pc8P ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34014.switchStackC.operator_shiftLeft!||
 switchStackC& operator << ( const count7S* const pc7P ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34013.switchStackC.operator_shiftLeft!||
 switchStackC& operator << ( const count6S* const pc6P ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34012.switchStackC.operator_shiftLeft!||
 switchStackC& operator << ( const count5S* const pc5P ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34011.switchStackC.operator_shiftLeft!||
 switchStackC& operator << ( const count4S* const pc4P ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34010.switchStackC.operator_shiftLeft!||
 switchStackC& operator << ( const count3S* const pc3P ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34006.switchStackC.operator_shiftLeft!||
 switchStackC& operator << ( const count2S* const pc2P ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34005.switchStackC.operator_shiftLeft!||
 switchStackC& operator << ( const strokeS* const psttP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3405d.switchStackC.operator_shiftLeft!||
 switchStackC& operator << ( const byteT* const pbP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34079.switchStackC.operator_shiftLeft!||
 switchStackC& operator << ( const measureT mP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34004.switchStackC.operator_shiftLeft!||
 switchStackC& operator << ( const countT valueP ) ;
/* commands and expressions to put an object onto the top of the stack for the current thread */

 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34088.switchStackC.switchStackC!||
 switchStackC( tinS& tinP , thirdC& thirdP , const countT idLineCtP , const countT idiFileCtP , const byteT* const pbBitsCtP , const flagsT flagsSwitchP                , const byteT*& pbLeverP , const countT cbLeverP , const flagsT flagsStackP = flSTACKc_null , const countT idTypeP = 0 , const countT idGrabLayerP = ifcIDgRABlAYER_7BASEmISC1 , countT* pLeverLathRefP = 0 , cbFT pCbFP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34064.switchStackC.switchStackC!||
 switchStackC( tinS& tinP , thirdC& thirdP , const countT idLineCtP , const countT idiFileCtP , const byteT* const pbBitsCtP , const flagsT flagsSwitchP                , soulC& soulP                                   , const flagsT flagsStackP = flSTACKc_null , const countT idTypeP = 0 , const countT idGrabLayerP = ifcIDgRABlAYER_7BASEmISC1 , countT* pLeverLathRefP = 0 , cbFT pCbFP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3405c.switchStackC.switchStackC!||
 switchStackC( tinS& tinP , thirdC& thirdP , const countT idLineCtP , const countT idiFileCtP , const byteT* const pbBitsCtP , const flagsT flagsSwitchP                , nicNameC& nicNameP                             , const flagsT flagsStackP = flSTACKc_null , const countT idTypeP = 0 , const countT idGrabLayerP = ifcIDgRABlAYER_7BASEmISC1 , countT* pLeverLathRefP = 0 , cbFT pCbFP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3409d.switchStackC.switchStackC!||
 switchStackC( tinS& tinP , thirdC& thirdP , const countT idLineCtP , const countT idiFileCtP , const byteT* const pbBitsCtP , const flagsT flagsSwitchP                , plateC*& pPlateLeverP                          , const flagsT flagsStackP = flSTACKc_null , const countT idTypeP = 0 , const countT idGrabLayerP = ifcIDgRABlAYER_7BASEmISC1 , countT* pLeverLathRefP = 0 , cbFT pCbFP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34063.switchStackC.switchStackC!||
 switchStackC( tinS& tinP , thirdC& thirdP , const countT idLineCtP , const countT idiFileCtP , const byteT* const pbBitsCtP , const flagsT flagsSwitchP                , strokeS*& psttLeverP                           , const flagsT flagsStackP = flSTACKc_null , const countT idTypeP = 0 , const countT idGrabLayerP = ifcIDgRABlAYER_7BASEmISC1 , countT* pLeverLathRefP = 0 , cbFT pCbFP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34051.switchStackC.switchStackC!||
 switchStackC( tinS& tinP , thirdC& thirdP , const countT idLineCtP , const countT idiFileCtP , const byteT* const pbBitsCtP , const flagsT flagsSwitchP                , const countT*& pczLeverP                       , const flagsT flagsStackP = flSTACKc_null , const countT idTypeP = 0 , const countT idGrabLayerP = ifcIDgRABlAYER_7BASEmISC1 , countT* pLeverLathRefP = 0 , cbFT pCbFP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34052.switchStackC.switchStackC!||
 switchStackC( tinS& tinP , thirdC& thirdP , const countT idLineCtP , const countT idiFileCtP , const byteT* const pbBitsCtP , const flagsT flagsSwitchP                , countT& cLeverP                                , const flagsT flagsStackP = flSTACKc_null , const countT idTypeP = 0 , const countT idGrabLayerP = ifcIDgRABlAYER_7BASEmISC1 , countT* pLeverLathRefP = 0 , cbFT pCbFP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34050.switchStackC.switchStackC!||
 switchStackC( thirdC& thirdP , tinS& tinP , const countT idLineCtP , const countT idiFileCtP , const byteT* const pbBitsCtP , const flagsT flagsSwitchP = flSTACKc_null                                                 , const flagsT flagsStackP = flSTACKc_null , const countT idTypeP = 0 , const countT idGrabLayerP = ifcIDgRABlAYER_7BASEmISC1 , countT* pLeverLathRefP = 0 , cbFT pCbFP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34001.switchStackC.dt_switchStackC!||
 ~switchStackC( voidT ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34002.switchStackC.NEWdELcLASStHIRD!||
 NEWdELcLASSpROTOS
/* birth , death */

 boolT bDying ;
 const poopC& poop ;
 thirdC& third ;
/* face */

/**/

    public :

    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34077.switchStackC.ctF!||
    voidT ctF( tinS& tinP ) ;

    const countT recycleLever6 ;
    const countT recycleLever5 ;
    const countT recycleLever4 ;
    const countT recycleLever3 ;
    const countT recycleLever2 ;
    const countT recycleLever1 ;
    cbFT         pCbF ;
    const byteT  pbBitsCt[ CBbITScT ] ;
    const countT idiFileCt ;
    const countT idLineCt ;
    const countT idType ; 
    const countT idGrabLayer ;
    const flagsT flagsStack ;
    const flagsT flagsSwitch ;
    byteT*       pbnu ;
    switchC      swMe ;
    stackC       stnu ;
    countT       osTidOwner ;
    batonC*      pBaton ;
{
/*1*/class _export switchStackC/*1*/

/**/
*/
  \<A HREF=\"5.9e10104.1.1.0.html\"\>9e10104:  WAKEsHOW( "example.simplest.snip.1500000a.switchStackC" )\</A\>
 simplest
examples
\<A HREF=\"5.1500000a.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

