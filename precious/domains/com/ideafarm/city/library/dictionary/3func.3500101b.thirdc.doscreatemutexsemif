
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    }
        #endif

            if( !POOP ) bCreatorP = ERROR_ALREADY_EXISTS != tinP.brcRaw ;
            BOSdOnOTtEST( WHATgbo , GetLastError() )
            __Z( handleP ) ;
            }
                handleP.osF( ifcIDtYPEhANDLE_MUTEXsEMAPHORE , tinP.brcRaw ) ; // WINDOWS DOES NOT SUPPORT SHARING OF UNNAMED MUTEX'S, SO THE FUNCTION DEFINED IN THIS MODULE DOES NOT INCLUDE SUCH AN OPTION
                BOSpOOP
                BOS( WHATgbo , BOSoK , CreateMutex( &sa , bGrabbedP , postP ) )
                SECURITYaTTRIBUTE_saUNRESTRICTED( 0 ) ;
            {
            BOSnOvALUE( WHATgbo , SetLastError( 0 ) )

        #elif defined( __NT__ )

            __Z( handleP ) ;

            }
                else __( tinP.brcQuery ) ;
                }
                    if( !tinP.bosFail ) break ;
                    handleP.osF( ifcIDtYPEhANDLE_MUTEXsEMAPHORE , (countT)osh ) ;
                    BOSI( WHATgbo , BOSfAIL , DosOpenMutexSem( ostoName , &osh ) )
                    ZE( HMTX , osh ) ;
                    bCreatorP = 0 ;
                {
                else if( tinP.brcQuery == ERROR_DUPLICATE_NAME )
                if( !tinP.bosFail ) break ;

                handleP.osF( ifcIDtYPEhANDLE_MUTEXsEMAPHORE , (countT)osh ) ;
                BOSI( WHATgbo , BOSfAIL , DosCreateMutexSem( ostoName , &osh , 0 , 0 ) )
                ZE( HMTX , osh ) ;
                bCreatorP = 1 ;
                //U: SUPPORT bGrabbedP
                //U:EDIT TO CORRECTLY CHECK rc AND CLOSE HANDLE AND REGISTER HANDLE
            {
            while( cntTries -- )
            countT cntTries = 10 ;
            }
                OStEXTAK( ostoName  , postP ) ;
                OStEXTAK( ostoName , "\\sem32\\" )
            {
            if( postP )
            OStEXT( ostoName , 255 ) ;

        #ifdef __OS2__
    {
    if( !handleP )
    _IO_

    }
        //if( POOP ) return ;
        __( postP && c_strlenIF( tinP , postP ) > 247 ) ;
        __( bCreatorP ) ;
        __( ~handleP ) ;
        //if( POOP ) return ;
    {
    IFbEcAREFUL    

    ZE( countT* , pcb ) ; *pcb = 0 ;
{
/*1*/voidT thirdC::dosCreateMutexSemIF( tinS& tinP , handleC& handleP , boolT& bCreatorP , const osTextT* const postP , const boolT bGrabbedP )/*1*/

/**/
*/
 postP
 bCreatorP
 handleP
arguments
works even if impotent, as long as !handleP
it is illegal to refer to this symbol anywherew
it is illegal to refer to this symbol in the definition of an adam
  \<A HREF=\"5.5d00104.1.1.0.html\"\>5d00104:  WAKEsHOW( "example.simplest.func.102001c.thirdC.dosCreateMutexSemIF" )\</A\>
 simplest
examples
\<A HREF=\"5.102001c.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$dosCreateMutexSemIF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

