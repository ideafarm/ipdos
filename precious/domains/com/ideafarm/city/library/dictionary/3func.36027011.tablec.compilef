
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return rslt ;

    }
        }
            }
                ether.delF( tinP , psttw ) ;
                *pstx << idColF( tinP , psttw ) ;
                ether.strWordF( tinP , psttw , psttb , sttq , S1C(' ') , 3 ) ;

                ether.delF( tinP , psttw ) ;
                *pstx << idOperatorF( tinP , psttw ) ;
                ether.strWordF( tinP , psttw , psttb , sttq , S1C(' ') , 2 ) ;

                ether.delF( tinP , psttw ) ;
                *pstx << idColF( tinP , psttw ) ;
                ether.strWordF( tinP , psttw , psttb , sttq , S1C(' ') , 1 ) ;
                ZE( strokeS* , psttw ) ;

                strokeS sttq( (countT)0 , sc_IGNOREqUOTES ) ;
                strokeS* psttb = (strokeS*)tableP( idr , idc ).c2 ;

                stStacksToDeleteP << (countT)pstx ;    
                rslt.newObjectF( tinP , *pstx ) ;
            {
            if( pstx )
            stackC* pstx = new( 0 , tinP , LF ) stackC( tinP , ether , TAG( TAGiDnULL ) , flSTACKc_FIFO ) ; ___( pstx ) ;
        {
        for( countT idc = 1 ; idc <= cCols ; idc ++ )
        rslt.newEventF( tinP ) ;
    {
    for( countT idr = 1 ; idr <= cRows ; idr ++ )
    const countT cRows = tableP.cRowsF( tinP ) ;

    for( countT idc = 1 ; idc <= cCols ; idc ++ ) rslt.newColF( tinP , T(psttName)+T(".")+T(tableP.nameF(tinP,idc)) ) ;
    const countT cCols = tableP.cColsF( tinP ) ;

    tableC rslt( tinP , ether ) ;
    _IO_

    }
        if( POOP ) return *this ;
    {
    IFbEcAREFUL

    SCOOP
    TINSL
{
/*1*/tableC tableC::compileF( stackC& stStacksToDeleteP , tableC& tableP )/*1*/

/**/
*/
   example: "salesReps.salesYTD != salesReps.salesMTD"
   example: "salesReps.name == clients.repName"
  every cell of the table must contain an expression in source form
  this is the table that is to be compiled
 tableP
   do not d elete these stacks until you are finished using the result table
  the caller is responsible for deleting these stacks
   one stackC object is constructed in the poolOld for each expression to be compiled
  this stackC object will receive pointers to stackC objects
 stStacksToDeleteP
arguments
compiles a table of source expressions
evaluates to a table of compiled expressions
  \<A HREF=\"5.f720104.1.1.0.html\"\>f720104:  WAKEsHOW( "example.simplest.func.1320011.tableC.compileF" )\</A\>
 simplest
examples
\<A HREF=\"5.1320011.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$compileF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//

