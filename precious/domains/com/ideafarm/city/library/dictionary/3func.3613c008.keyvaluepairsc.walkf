
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    if( pcArgP ) *pcArgP = 0 ;  // THE VALUE THAT i PLACED HERE IS ONLY FOR THE BENEFIT OF THE CALLBACK FUNCTION THAT I WAS CALLING ; IT MUST BE CLEARED SO THAT pcArgP WILL BE VALID IF PASSED TO ME AGAIN

    btKeys.walkF( tinP , stThisP , stKidsDoneP , pbBufferP , cbBufferP , cNestP , pCBFP , pcArgP , pQuitP ) ;

    if( !( F(flagsCt) & flKEYvALUEpAIRSc_NOjOT ) ) *pcArgUse = (countT)pbDockJot ;

    ;
        : &myArg
        ? pcArgP
    countT* pcArgUse = pcArgP
    ZE( countT , myArg ) ;

    }
        if( POOP ) return ;
        __NZ( pcArgP && pcArgP[ 0 ] ) ; // THE ZE'TH ARGUMENT IS RESERVED FOR ME TO USE TO PASS IN THE ADDRESS OF MY jotC INSTANCE
        if( POOP ) return ;
    {
    IFbEcAREFUL
{
/*1*/voidT keyValuePairsC::walkF( tinS& tinP , stackC& stThisP , stackC& stKidsDoneP , byteT* pbBufferP , countT cbBufferP , countT& cNestP , ifc2FT pCBFP , countT* pcArgP , const boolT* const pQuitP )/*1*/

/**/
*/
 pQuitP
   the caller's callback function will be able to use this address, together with an idJotP, to retrieve the datum
   i will use it to store the address of the jotC instance that i use to store the value associated with each key
  if not 0 then pcArg[ 0 ] must be 0
  can be 0
 pcArgP
 pCBFP
 cNestP
 cbBufferP
 pbBufferP
 stKidsDoneP
 stThisP
 tinP
parameters
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

