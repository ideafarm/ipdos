
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


//VISIBLE

REST
etThread.osProcessIdPhaseAdamF( tinP , ifcIDpHASEhANDOFFoLD_SHUTTINGdOWN ) ;

etThread.delF( tinP , psttnu ) ;
etThread.faceHearF( tinP , psttnu ) ;
etThread.strokeF( tinP , T("press enter now") ) ;
ZE( strokeS* , psttnu ) ;

pf = 0 ;
for( off = HOWmANY - 1 ; off >= 0 ; off -- ) delete &pf[ off ] ;

for( sCountT off = 1 ; off < HOWmANY  ; off ++ ) new( 0 , tinP , etThread , pf[ off ] ) fooC( tinP , etThread ) ;
fooC* pf = new( 0 , tinP , etThread , HOWmANY ) fooC( tinP , etThread ) ; ___( pf ) ;

TODO

#define HOWmANY 4

NEWdELdEFS( fooC , ifciDtYPEdROPnOTE_classDefinedInAdamDefinition1 )

}
    ether.strokeF( tinP , T("goodbye\r\n") ) ;
    TINSL
{
fooC::~fooC( voidT )

}
    ether.strokeF( tinP , T("hello\r\n") ) ;
{
ether( etherP )
fooC::fooC( tinS& tinP , etherC& etherP ) :

;
}
    ~fooC( voidT ) ;
    fooC( tinS& tinP , etherC& etherP ) ;
    NEWdELcLASSpROTOS

    public :

    etherC& ether ;
{
class fooC

#define THIRDc thirdC
#define ETHERc etherC

/*1*/WAKEhIDE( "example.simplest.strings.of.objects.that.you.define" )/*1*/
/**/
*/
\<A HREF=\"5.5500104.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//

