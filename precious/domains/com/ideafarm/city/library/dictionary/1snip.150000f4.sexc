
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


;
}
    friend TASKpROTO( tmReportF ) ;                                                                                                                                                                                                                             \

    inline operator const poopC&( voidT ) const { return poop         ; }
    inline flagsT flagsStateF(    voidT ) const { return flagsState   ; }
    inline countT idLathNewDelF(  voidT ) const { return idLathNewDel ; }

    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360e0012.sexc.testDropHeadersF!||
    voidT testDropHeadersF( tinS& tinP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360e0012.sexC.glassF!||
    voidT glassF( tinS& tinP , strokeS*& psttP ) const ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34011.sexC.flushF!||
    voidT flushF( tinS& tinP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34010.sexC.ctFileNameLikeF!||
    static voidT ctFileNameLikeIF( tinS& tinP , textC& tLikeP , const osTextT* const postNameP , const countT idStateSpaceP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3400c.sexC.peekF!||
    voidT peekF( tinS& tinP , const sexHeadS*& pzMetaHeadP , const byteT*& pbzMetaBitsOwnedP , const dropNoteS*& pzMetaNotesP , const byteT*& pbDataP ) const ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3400b.sexC.operator_element!||
    countT operator []( const byteT* pbP ) const ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3400a.sexC.operator_element!||
    byteT* operator []( const countT offP ) const ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34009.sexC.pDropNoteF!||
    dropNoteS* pDropNoteF( tinS& tinP , const byteT* const pbP ) const ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34008.sexC.operator_not!||
    boolT operator !( voidT ) const ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34007.sexC.operator_call!||
    voidT operator ()( tinS& tinP , byteT*& pbP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34006.sexC.newF!||
    byteT* newF( tinS& tinP , const countT idLineP , const countT idiFileP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3400e.sexC.bStateExistsIF!||
    static boolT bStateExistsIF( tinS& tinP , const osTextT* const postNameP , const countT expCbSlotP , const countT expSlotsP , const countT idStateSpaceP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34003.sexC.sexC!||
    sexC( tinS& tinP , const countT idLineCtP , const countT idiFileCtP , const byteT* const pbBitsCtP , const countT idLineNewP , const countT idiFileNewP , const osTextT* const postNameP , const countT expCbSlotP , const countT expSlotsP = 0 , const flagsT flagsP = fliSEXc_null , const countT idStateSpaceP = 0 , countT idMemorySpaceP = 0 , poolC* const pPoolContainsMeP = 0 ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34002.sexC.dt_sexC!||
    ~sexC( voidT ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34001.sexC.NEWdELcLASSb!||
    NEWdELcLASSpROTOS

    public :

    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360e0013.sexc.formatDataBlobF!||
    voidT formatDataBlobF( tinS& tinP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3400d.sexC.ctFilesF!||
    voidT ctFilesF( tinS& tinP , const osTextT* const postNameP , const countT expCbSlotP , const countT expSlotsP , const countT idStateSpaceP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3400f.sexC.ctFileNamesIF!||
    static voidT ctFileNamesIF( tinS& tinP , textC& tMetaP , textC& tDataP , const osTextT* const postNameP , const countT expCbSlotP , const countT expSlotsP , const countT idStateSpaceP ) ;

    private :

    sexC*               pSexLifoConstructed ;                                   // USED BY slotsC TO DESTROY sexC IN REVERSE ORDER OF CONSTRUCTION ; NOT USED BY ME

    public :

    countT              offFoundLath ;                                          // USED BY newF TO EXPLOIT HEURISTICS TO SPEED UP SEARCH FOR AN AVAILABLE DROP
    sexC*               pSexLifoConstructing ;                                  // USED BY sexC TO DETECT RECURSIVE CYCLING DURING CT
    byteT*              pbDataEnd ;
    byteT*              pbData ;
    byteT*              pbMetaEnd ;
    dropNoteS*          pzMetaNote ;        // IN pbMeta
    byteT*              pbzMetaBitsOwned ;  // IN pbMeta
    sexHeadS*           pzMetaHead ;        // IN pbMeta
    byteT*              pbMeta ;
    countT              idLathNewDel ;
    const countT        idStateSpace ;
    flagsT              flagsState ;
    const flagsT        flagsCt ;
    poolC* const        pPoolContainsMe ;
    poopC               poop ;
    byteT               pb_napData[ sizeof( napkinC ) ] ;
    byteT               pb_napMeta[ sizeof( napkinC ) ] ;
    byteT               pbFileData[ SIZEOF_fileC ] ;
    byteT               pbFileMeta[ SIZEOF_fileC ] ;
{
/*1*/class _export sexC/*1*/ //"SLOTS EXTENT"

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

