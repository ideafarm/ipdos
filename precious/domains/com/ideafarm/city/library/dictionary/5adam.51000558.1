
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etThread.strokeF( tinP , T("\f") ) ;

}
    napF( tinP , ether ) ;
    bClear = !bClear ;
    etThread.strokeF( tinP , bClear ? tSayClear : tSay ) ;
    etThread.beeClickF( tinP , TUCK ) ;
{
while( !ether && cTries -- )
ZE( boolT , bClear ) ; //PERIODIC CLEARING MUST BE DONE TO AVOID UNBOUNDED MEMORY AND CPU LEAKAGE
countT cTries = TOCK ;
//while( !ether )

;
    T("\f")
    tSay+
tSayClear =
TN( tSayClear , "" ) ;

;
    S2(0,scOld_POPfRAME)
        S2(0,scOld_POPfRAME)+
            S2(0,scOld_POPfRAME)+
                S2(0,scOld_POPrIPPLES)+
                S2(0,scOld_POPoFFfRAMEwRAP)+
                S2(0,scOld_WRAPoFF)+
                T(" /")+
                button+
                T("/ ")+
                S2(0,scOld_WRAPoN)+
                S2(1,scOld_cPUSHoFFfRAMEwRAP)+
                S2(2,scOld_cPUSHrIPPLES)+
            S3(13.0,scOld_mmFRAMEcELLS,3.0)+          //SPECIFY _c CELL COLUMNS TO SEE WRAP
        S3(1,scOld_ccFRAMEfORsADAMfRAMES,1)+         //SHRINKING FRAME
    S3(1.0,scOld_mmFRAMEtO,1.0)+                     //WRAPPING REFERENCE FRAME
    //S2(0,scOld_POPfRAMEdETACH)+
    //S3(0.2,scOld_mmMOVEtO,0.2)+
    //S2(0,scOld_FRAMEdETACH)+
    T("")+
tSay = 
TN( tSay , "" ) ;

paperOldC::setBeforeAnimatingIF( tinP , animateCBF , (countT)&button ) ;

tcButtonC button( tinP , 0 , tcStateCBF , 0 , flFeature , 0 , tBody , 8 ) ;
flagsT flFeature = ( flTCfEATURE_defaultButton | flTCfEATURE_DRAGGABLE ) /*& ~( F(flTCfEATURE_FRAME|flTCfEATURE_FLYOVERhIGHLIGHT) )*/ ;
//flagsT flFeature = flTCfEATURE_defaultButton & ~( F(flTCfEATURE_FRAME) ) ;
TN( tBody , "\\" ) ;

TODO

}
    if( etherP ) ;
    button.setF( tinP , T("")+S3(9.0,scOld_mmFRAMEcELLS,1.0)+T(" ")+TF1(idCycleP)+S2(0,scOld_POPfRAME) ) ;
    tcButtonC& button = *(tcButtonC*)cArgP ;
{
voidT animateCBF( tinS& tinP , etherC& etherP /*, paperBackC& backP*/ , const countT idCycleP , const countT cArgP )

}
    ++ s ; etherP.osSleepF( tinP , idIn % 2 ? TOCK * 0x3 * SLOW : TOCK * SLOW ) ;
    sleepC s( tinP , TAG( TAGiDnULL ) ) ;

    countT idIn = 1 + incv02AM( idInLath ) ;
    static countT idInLath ;
{
voidT napF( tinS& tinP , etherC& etherP )

#define SLOW 0x1

}
    }
        }
            etherP.etherFireImpersonateMonitorIF( tinP ) ;
            //LOGrAW( T("fired by ")+T(processGlobal4I.mapSadamCall(idTypeCallP))+T("\r\n") ) ;
            etherP.beeClickF( tinP ) ;
        {
        case ifcIDtYPEsTROKEcALLbACK_HOTkEY :
        }
            if( idTool != ifcIDtYPEtOOL_MOUSEbUTTONlEFT || idAction != ifcIDtYPEaCTION_DOWN ) break ;

            const countT& idAction = pcNotesP[ 3 ] ;
            const countT& idTool   = pcNotesP[ 2 ] ;
        {
        case ifcIDtYPEsTROKEcALLbACK_MOUSE :
    {
    switch( idTypeCallP )
{
voidT tcStateCBF( tinS& tinP , etherC& etherP , const countT cArgP , const countT idTypeCallP , const countT idEventP , const countT* const pcNotesP , const flagsT flTcStateNewP , const flagsT flTcStateOldP , const sadamStateOldS& sadamStateP )

/*1*/WAKEsHOW( "example.other.snip.00300d3.tcButtonC.persistent.dragging" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

