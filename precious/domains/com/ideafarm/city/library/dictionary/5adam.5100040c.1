
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST
TELL( "about to enter REST" )
//}
//    POPUP("the driver has become impotent") ;
//    TELL( "popup that the driver is impotent" )
//{
//if( etThread )

TELL( "osDriverF has returned" )
else                                                                       etThread.osProcessF( tinP , countTC() , countTC() , idAdam ) ;
}
    etThread.osDriverF( tinP , idAdam ) ;
{
else if( !etThread.strCompareF( tinP , etThread.osIdF( tinP ) , T("w") ) )
     if( !bLocal                                                         ) etThread.strokeF( tinP , T("please copy my file to a local storage device and try again.\r\n") ) ;
TELL( "about to call osDriverF" )

}
    etThread.delF( tinP , psttDll ) ;
    if( psttDll ) idAdam = etThread.strDigitsToSCountF( tinP , psttDll ) ; // idAdam WILL NOT BE SET IF I WAS CALLED BY THE OPERATING SYSTEM SERVICE MANAGER
    }
        break ;
        etThread.strMakeF( tinP , psttDll , psttc1 ) ; ___( psttDll ) ;
        if( cSkip && cSkip -- ) continue ;

        }
            DEL( pInfo ) ;
            bLocal = pInfo ? pInfo->bLocal : 0 ;
            etThread.delF( tinP , psttw ) ;
            etThread.diskInfoF( tinP , pInfo , T(iffn) ) ; ___( pInfo ) ;
            ifFileNameC iffn( tinP , etThread , T(psttw) ) ;
            ZE( infoDiskS* , pInfo ) ;
            etThread.strConvertToLowerCaseF( tinP , psttw , psttc1 ) ; ___( psttw ) ;
            ZE( strokeS* , psttw ) ;
        {
        if( cSkip == 2 )
    {
    FORsTRINGSiN1( etThread.ether_pstt1_processParametersI_F( tinP ) )
    countT cSkip = 2 ;
    ZE( strokeS* , psttDll ) ;
{
ZE( countT , idAdam ) ;
ZE( boolT , bLocal ) ;
TELL( "inspecting process parameters" )

//etThread.osThreadSwitchingDesireF( tinP , ifcTHREADpRIORITY_LAZIEST ) ; //U:
TELL( "shifting into idle" )
TODO

//DO NOT PUT ANY PHASE DECLARATIONS OR CONSTRUCT A stateC OBJECT HERE; THOSE THINGS MUST BE DONE BY THE LEAF ADAM CLASS (E.G. f040104)

/*1*/WAKEhIDE( "ifcIDaDAM_KERNEL1DRIVER.ifcIDaDAMoLD_DRIVER1" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

