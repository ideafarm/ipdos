
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

#endif

}
    etThread.strokeF( tinP , T("\"")+T(psttc1)+T("\" is, using radix z, the value ")+TF4(vv,flFORMAT_NObIGITvALUES|flFORMAT_NObASE,0,36)+T("\r\n") ) ;

    countT vv = etThread.strDigitsToSCountF( tinP , psttc1 ) ;

    if( ++ idp != 3 ) continue ;
{
FORsTRINGSiN1( pstt1w )
ZE( countT , idp ) ;
strokeS* pstt1w = etThread.ether_pstt1_processParametersI_F( tinP ) ;


}
    etThread.delF( tinP , pstt36 ) ;
    etThread.strokeF( tinP , TF2(vv,flFORMAT_NObIGITvALUES)+T(": ")+T(pstt36)+T("    ")+TF4(vv,flFORMAT_NObIGITvALUES|flFORMAT_NObASE,0,36)+T("\r\n") ) ;
    etThread.strFromF( tinP , pstt36 , vv , flFORMAT_NObIGITvALUES|flFORMAT_NObASE , 0 , 36 ) ; ___( pstt36 ) ;
    ZE( strokeS* , pstt36 ) ;
{
for( countT vv = 0 ; vv <= 36 ; vv ++ )

#if defined( NEVERdEFINED )

etThread.strokeF( tinP , T("value is: ")+TF2(idFormat,flFORMAT_NObIGITvALUES)+T("\r\n") ) ;
countT idFormat =  etThread.strDigitsToSCountF( tinP , T("ffffffff") , 36 ) ;

TODO

/*1*/WAKEsHOWtEXT( "doodle.bigits" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

