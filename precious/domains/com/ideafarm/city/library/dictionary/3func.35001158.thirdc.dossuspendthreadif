
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    _OUT_

    #endif

        handle.resetF() ;
        tinP.pAdamGlobal4->_thirdC_grab_lOsTid.ungrabF( tinP ) ;
        }
            if( !POOP ) cSuspendPrior = tinP.brcRaw ;
            BOSpOOP
            BOS( WHATssu , BOSmAXcOUNTT , SuspendThread( (HANDLE)osh ) )
        {
        if( ~handle )
        countT osh = handle.osF( ifcIDtYPEhANDLE_THREAD ) ;
        ZE( countT , cSuspendPrior ) ;
        handle.osF( ifcIDtYPEhANDLE_THREAD , *tinP.pAdamGlobal1->_thirdC_.pSwThreadHandle ) ; //ASSUME: 0 IS AN INVALID HANDLE, SO THAT IF THE THREAD HAS ALREADY DEREGISTERED ITSELF, I WILL DO NOTHING
        handleC handle( tinP , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_THREAD ) ;
        tinP.pAdamGlobal1->_thirdC_.lOsTid = osTidP ;
        tinP.pAdamGlobal4->_thirdC_grab_lOsTid.grabF( tinP , TAG( TAGiDnULL ) ) ;

    #if defined( __NT__ )

    _INoLD_

    //}
    //    if( POOP ) return ;
    //{
    //IFbEcAREFUL
    //WORKS UNCONDITIONALLY SO THAT GRABBING/UNGRABBING WILL WORK
{
/*1*/voidT thirdC::dosSuspendThreadIF( tinS& tinP , const countT osTidP )/*1*/

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

