
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etherC::loafIF( tinP ) ;

FORsTRINGSiNsPANNEDtAIL
}
    etThread.strokeF( tinP , T("\"\r\n") ) ;
    }
        etThread.delF( tinP , psttp ) ;
        etThread.strokeF( tinP , psttp ) ;

        soul1 >> psttp ; ___( psttp ) ;
        ZE( strokeS* , psttp ) ;          //"p":"PIECE" OR "PARTIAL"
    {
    while( soul1 )
    etThread.strokeF( tinP , T("got \"") ) ;
{
FORsTRINGSiNsPANNEDhEAD1( sow )

}
    etThread.strFuseSeparateF( tinP , sow , psttId , 0 , 0 , 0 , 2 ) ; // "2" SPECIFIES A VERY SMALL SIZE FOR EACH PIECE SO THAT YOU CAN USE A DEBUGGER TO SEE HOW THE INPUT IS BROKEN INTO PIECES; APPLICATION CODE SHOULD NOT OVERRIDE THE DEFAULT IN THIS WAY BECAUSE MEMORY PAGING IS REDUCED IF ALL CODE DEFAULTS TO THE SAME "PIECE" SIZE
    
    strokeS* psttId = tId ;
    TN( tId , "abcdefg" ) ; tId += TF2(ido,flFORMAT_NObIGITvALUES) ;
{
for( countT ido = 1 ; ido <= 2 ; ido ++ )
soulC sow( tinP , TAG( TAGiDnULL ) ) ;

TODO

/*1*/WAKEsHOWtEXT( "example.simplest.1snip.1120048a.FORsTRINGSiNsPANNEDhEAD1" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

