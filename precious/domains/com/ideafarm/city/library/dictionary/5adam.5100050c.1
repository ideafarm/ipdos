
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

}
    timeL2 = timeN2 ;
    timeL1 = timeN1 ;
    etThread.delF( tinP , pbi ) ;
    }
        etThread.winSetTitleF( tinP , TT4(sum1,sum2,4,5)+T("    ")+TT4(amb1,amb2,4,5)+T("    ")+TF1(offDay)+T("'da  ")+TF1(offStrong)+T("'str  ")+TF1(offQuarter)+T("'qu  ")+TF1(offDuck)+T("'du   ")+T("... the time is now ")+TT4(timeN1,timeN2,4,7) ) ;
        etThread.osTimeSubtractF( tinP , amb1 , amb2 , timeB1 , timeB2 ) ;
        sCountT amb2 = sum2 ;
        countT  amb1 = sum1 ;

        while( cTries -- ) etThread.osTimeAddF( tinP , timeB1 , timeB2 , 0x60 * TICK , 0 ) ; // 6 HOURS PER CORE WORK DAY (FULL TIME IS 6)
        countT cTries = offDay > 5 ? 0 : 1 + offDay ;
        ZE( sCountT , timeB2 ) ;
        ZE( countT , timeB1 ) ;

        }
            CONoUTrAW3( "\r        \r" , ++ cDone , "" ) ;
            static countT cDone ;
        {
        if( !etThread )

        etThread.boxPutF( tinP , tFileName , pbi , cbi ) ;
        etThread.osTimeAddF( tinP , sum1 , sum2 , timeNew1 , timeNew2 ) ;

        sCountT& sum2 = ((sCountT*)pbi)[ 1 ] ;
        countT&  sum1 =  ((countT*)pbi)[ 0 ] ;
    {
    if( pbi )

    }
        }
            etThread.memSetF( tinP , pbi , cbi ) ;
            etThread.newF( tinP , LF , pbi , cbi ) ; ___( pbi ) ;
            cbi = 2 * sizeof( countT ) ;
            etThread.delF( tinP , pbi ) ;
            POOPR
        {
        if( POOP )
        tinP.pEtScratch->boxGetShadowF( tinP , pbi , cbi , tFileName , 1 ) ; ___( pbi ) ;
        SCOOPS
    {
    IFsCRATCH
    ZE( countT , cbi ) ;
    ZE( byteT* , pbi ) ;

    countT offDuck     =     timeN2 / 0x100 ;
    countT offQuarter  = ( ( timeN2 / 0x40 ) % 4 ) ;
    countT offStrong   = ( ( timeN2 / 8    ) % 8 ) ;
    countT offDay      =     timeN2 % 8 ;

    }
        tFileName = T("///ideafarm/ephemeral/domains/com/ideafarm/")+TF1(DDNUMB)+T("/timeWorked.")+TF3(offDucka,flFORMAT_FILLzE|flFORMAT_UNSIGNED|flFORMAT_FOREIGN,8)+T(".")+TF1(offQuartera)+T(".")+TF1(offStronga) ;
        countT offDucka    =     timeN2a / 0x100 ;
        countT offQuartera = ( ( timeN2a / 0x40 ) % 4 ) ;
        countT offStronga  = ( ( timeN2a / 8    ) % 8 ) ;
        countT offDaya     =     timeN2a % 8 ;
    {
    TN( tFileName , "" ) ;

    etThread.osTimeSubtractF( tinP , timeNew1 , timeNew2 , timeL1 , timeL2 ) ;
    sCountT timeNew2 = timeN2 ;
    countT timeNew1  = timeN1 ;

    countT timeN2a = timeN2 + 2 ; //"a" IS FOR "ADJUSTED"; VE'DA, TA'DA ARE TREATED AS PART OF NEXT STRONG
    etThread.osTimeNowF( tinP , timeN1 , timeN2 ) ;
    ZE( sCountT , timeN2 ) ;
    ZE( countT , timeN1 ) ;

    }
        ++ s ; ether.osSleepF( tinP , TOCK * 0x4 ) ;
        sleepC s( tinP , TAG( TAGiDnULL ) ) ;
    {
{
while( !ether && !etThread )
etThread.osTimeNowF( tinP , timeL1 , timeL2 ) ;
ZE( sCountT , timeL2 ) ;
ZE( countT , timeL1 ) ;

TODO

/*1*/WAKEsHOWtEXT( "ifcIDaDAM_TIMEcARD.tool.timecard" )/*1*/
/**/
*/
when i am dead i assume that you are not working
when i am alive i assume that you are working
i accumulate a working time total for the current strong in a small file
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

