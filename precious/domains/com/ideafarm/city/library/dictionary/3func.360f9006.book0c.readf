
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    }
        offP += cbP ;
        pbP = pbBody + offP ;
    
        if( cbP > cbMax ) cbP = cbMax ;

        const countT cbMax = cbuSnap - offP ;
    {
    else
    }
        cbP = offP = 0 ;
    {
    if( cbuSnap <= offP )

    const countT cbuSnap = pHead->cbUsed - pHead->cbFill ;

    _IO_

    }
        if( POOP ) return ;
        __Z( cbP ) ;         //SPECIFY -1 TO GET ALL THAT ARE AVAILABLE
        __NZ( pbP ) ;
        if( POOP ) return ;
    {
    IFbEcAREFUL    
{
/*1*/voidT book0C::readF( tinS& tinP , const byteT*& pbP , countT& cbP , countT& offP ) const/*1*/

// FOR THIS DEFINITION, A VOLATILE offP THAT INCREASES COULD RESULT IN A READ ACCESS VIOLATION
// REFERENCE PARAMETERS ARE ASSUMED TO NOT BE VOLATILE W.R.T. THE CURRENT THREAD
// THIS DEFINITION EXEMPLIFIES AN ASSUMPTION MADE IMPLICITLY THROUGHOUT THE BASE DLL DEFINITION SET (DICTIONARY FOLDER)
// CODE CONFORMANCE STANDARD

/**/
*/
   repeatedly calling me will result in the data being cycled, delimited by a call that returns [0,0]
  if the book is exhausted by the read, the next call will reset to 0 and the call after that will read from the beginning
  is updated so that it will be ready for the next read
 offP
  use -1 to read all available bytes
  is interpreted as a maximum to be accepted and will be adjusted downward to the number of bytes actually read
  must not be 0
 cbP
  receives the address of the beginning of the requested blob
  must be 0
 pbP
 tinP
params
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//

