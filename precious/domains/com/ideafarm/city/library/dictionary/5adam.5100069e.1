
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etherC::loafIF( tinP ) ;
etThread.traceF( tinP , T("ok") ) ;

etThread.diskWalkF( tinP , cDirs , cFiles , tPath , bQuit , diskWalkRenameCBF , pcArg ) ;
ZE( countT , bQuit ) ;
ZE( countT , cFiles ) ;
ZE( countT , cDirs ) ;
TN( tPath , "///a/ideafarm.home.101/IdeaFarm (tm)/Drop Files Here To Archive/" ) ;

countT pcArg[] = { (countT)&cDone , (countT)&tIdeafarm5Dot , (countT)&tIdeafarm6Dot , (countT)&tZe } ;

TN( tZe           , "0" ) ;
TN( tIdeafarm6Dot , "!ideafarm.6." ) ;
TN( tIdeafarm5Dot , "!ideafarm.5." ) ;
ZE( countT        , cDone ) ;

TODO

}
    return 0 ;

    tinP.pEther->delF( tinP , psttShort2 ) ;
    tinP.pEther->delF( tinP , psttShort1 ) ;
    tinP.pEther->delF( tinP , psttShort ) ;
    tinP.pEther->delF( tinP , psttPath ) ;

    }
        }
            tinP.pEther->diskMoveFileOrDirF( tinP , tNameNew , tNameOld , 1 ) ;

            ;
                : T(psttPath)+T(psttShort1)+tZeP+T(psttShort2)
                ? T(psttPath)+T(psttShort1)+T(psttShort2)
            tNameNew = psttShort2[ CSpREFIX - 1 + 3 ].idAdam != '.'
            TN( tNameNew , "" ) ;

            tinP.pEther->strReplaceF( tinP , psttShort1 , 0 , tIdeafarm5DotP , tIdeafarm6DotP ) ;
        {
        if( 1 == tinP.pEther->strIdF( tinP , tIdeafarm5DotP , psttShort1 ) )

        tinP.pEther->strSubstringF( tinP , psttShort2 , idf , idl , psttShort ) ; ___( psttShort2 ) ;
        idl = 0 ;
        tinP.pEther->strSubstringF( tinP , psttShort1 , idf , idl , psttShort ) ; ___( psttShort1 ) ;
        countT idl = 0x1a ;
        countT idf = 1 ;
    {
    if( psttShort && psttShort->idAdam >= 0x1e )
    ZE( strokeS* , psttShort2 ) ;
    ZE( strokeS* , psttShort1 ) ;

    // !ideafarm.5.19991228@0000.00.!.note.ttt
    // !ideafarm.5.19991228@0000.00.000b3751.c44d5e6f.2f9afda7.scanner.!.19991228@0000.notarized.declaration.of.legal.name.change.0600x0761.jpg

    // |------------------------||----------->
    // |-----------S1-----------||---S2------>

    // 123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0
    // 0              1               2               3               4

    //tinP.pEther->traceF( tinP , psttShort ) ;
    //tinP.pEther->traceF( tinP , psttPath ) ;

    ___( psttShort ) ;
    ___( psttPath ) ;
    tinP.pEther->strBisectF( tinP , psttPath , psttShort , tNameOld , 0 , - 1 , flSTRbISECT_APPENDdELIMITER ) ;
    ZE( strokeS* , psttShort ) ;
    ZE( strokeS* , psttPath ) ;

    TN( tNameOld , ifFileNameC( tinP , *tinP.pEther , postNameP ) ) ;

    if( !( cDoneP % TUCK ) ) tinP.pEther->traceF( tinP , T("[cDoneP]: ")+TF2(cDoneP,flFORMAT_UNSIGNED|flFORMAT_NObIGITvALUES) ) ;
    cDoneP ++ ;

    textC&        tZeP           =         *(textC*)pcArgP[ 3 ] ;
    textC&        tIdeafarm6DotP =         *(textC*)pcArgP[ 2 ] ;
    textC&        tIdeafarm5DotP =         *(textC*)pcArgP[ 1 ] ;
    countT&       cDoneP         =        *(countT*)pcArgP[ 0 ] ; 
{
boolT diskWalkRenameCBF( tinS& tinP , countT& cDirsP , countT& cFilesP , boolT& bQuitP , const osTextT* const postNameP , countT* const pcArgP , const countT* const pModuloDirsP , const countT* const pModuloFilesP )

/*1*/WAKEsHOWtEXT( "tool.rename.archive.format.5.expand.sequence.to.3.bigits" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

