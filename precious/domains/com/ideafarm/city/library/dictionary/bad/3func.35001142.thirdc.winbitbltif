
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    #endif

        }
            }
                BOSpOOP
                BOS( WHATgbo , BOSoK , BitBlt( (HDC)hDrawToP.osF( ifcIDtYPEhANDLE_DRAWpRIVATE ) , osColTo , osRowTo , 1 + R( mColsP ) , R( mRowsP ) , (HDC)hDrawFromP.osF( ifcIDtYPEhANDLE_DRAWpRIVATE ) , osColFrom , osRowFrom , osTypePaint ) )
    
                sCountT osRowTo     = R( winOsRowIF( mIdRowTo   , cRowsDrawTo   ) ) ;
                sCountT osRowFrom   = R( winOsRowIF( mIdRowFrom , cRowsDrawFrom ) ) ;
                sCountT osColTo     = R( winOsColIF( mIdColToP                  ) ) ;
                sCountT osColFrom   = R( winOsColIF( mIdColFromP                ) ) ;
        
                measureT mIdRowTo   = mIdRowToP   - 1.0 + mRowsP ;
                measureT mIdRowFrom = mIdRowFromP - 1.0 + mRowsP ;
    
                }
                    default : { BLAMMO ; break ; }
                    //case ifcIDtYPEpAINT_INVERT : { osTypePaint = NOTSRCCOPY ; break ; }
                    case ifcIDtYPEpAINT_XOR    : { osTypePaint = SRCINVERT  ; break ; }
                    case ifcIDtYPEpAINT_OPAQUE : { osTypePaint = SRCCOPY    ; break ; }
                {
                switch( idTypePaintP )
                ZE( countT , osTypePaint ) ;
            {
            if( !POOP )
            __Z( cRowsDrawFrom ) ;
            //__Z( cRowsDrawTo ) ;
    
            //LOGrAW5( "winBitBltIF [cRowsDrawTo,cRowsDrawFrom]: " , cRowsDrawTo , " " , cRowsDrawFrom , "\r\n" ) ;
            //Beep ( TUCK << 3 , TUCK ) ;
        {
        if( cRowsDrawTo ) //U::BUG: WHAT  IF THE CLIENT WINDOW HAS ZE WIDTH?

        const countT cRowsDrawFrom = ((const HANDLEaPPnOTEScOUNTcLASS&)hDrawFromP).c2 ;
        const countT cRowsDrawTo   = ((const HANDLEaPPnOTEScOUNTcLASS&)hDrawToP).c2 ;

    #elif defined( __NT__ )
        //U:
    #if defined( __OS2__ )
{
/*1*/voidT thirdC::winBitBltIF( tinS& tinP , const countT idTypePaintP , const handleC& hDrawToP , const handleC& hDrawFromP , const measureT mColsP , measureT mRowsP , const measureT mIdColToP , const measureT mIdRowToP , measureT mIdColFromP , measureT mIdRowFromP )/*1*/

/**/
*/
for fast execution, there is no overhead code in the definition of this function
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

