
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST
etThread.osProcessIdPhaseAdamF( tinP , ifcIDpHASEhANDOFFoLD_SHUTTINGdOWN ) ;

etThread.strokeF( tinP , T("Ok.") ) ;

}
    etThread = 0 ;

    }
        etThread.delF( tinP , psttReply ) ;
        etThread.strokeF( tinP , T(psttReply)+T("\r\n") ) ;
        sock.readWoLineF( tinP , psttReply , 0x100 ) ;

        etThread.delF( tinP , psttReply ) ;
        etThread.strokeF( tinP , T(psttReply)+T("\r\n") ) ;
        sock.readWoLineF( tinP , psttReply , 0x100 ) ;

        ZE( strokeS* , psttReply ) ;
        { textC txt = T(psttOldCmd)+T("\r\n") ; sock.writeF( tinP , (osTextT*)txt ) ; }
        etThread.faceHearF( tinP , psttOldCmd ) ; ___( psttOldCmd ) ;
        ZE( strokeS* , psttOldCmd ) ;

        }
            etThread.strokeF( tinP , T(pb2) ) ;
            sock.readF( tinP , pb2 , 1 ) ;
            byteT pb2[] = { 0 , 0 } ;
        {
    {
    while( !etThread )

    sock.connectF( tinP , ifcPORToLD1cOMMAND , etThread.sockNicNameF( tinP , T("city.center.ideafarm.com") ) ) ;
    socketC sock( tinP , etThread , TAG( TAGiDnULL ) ) ;
{
while( !ether )

TODO

/*1*/WAKEhIDE( "city.gate.poolOld.view" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

