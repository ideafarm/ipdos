
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etThread.delF( tinP , pstt1m ) ;
}
    etThread.delF( tinP , psttw ) ;
    etThread.delF( tinP , psttw2 ) ;
    etThread.delF( tinP , psttw3 ) ;
    //etThread.strokeF( tinP , tName+T("\r\n") ) ;

    etThread.diskMoveFileOrDirF( tinP , tName , psttc1 ) ;

    TN( tName , "///" ifcSCRATCH "/scratch/good/bad/adam." ) ; tName += TF3(idAdam,flFORMAT_UNSIGNED|flFORMAT_FILLzE,7)+sttd+T(psttw3) ;

    countT idAdam = etThread.strDigitsToSCountF( tinP , psttw2 , 0 , 1 ) - 0x8000000 + 0x4010000 ;

    etThread.strWordF( tinP , psttw3 , psttw , sttq , sttd , 3 ) ; ___( psttw3 ) ;
    ZE( strokeS* , psttw3 ) ;

    etThread.strWordF( tinP , psttw2 , psttw , sttq , sttd , 2 ) ; ___( psttw2 ) ;
    ZE( strokeS* , psttw2 ) ;

    etThread.strWordF( tinP , psttw , psttc1 , sttq , stts , - 1 ) ; ___( psttw ) ;
    ZE( strokeS* , psttw ) ;

    if( ether ) break ;
{
FORsTRINGSiN1( pstt1m )
strokeS sttd( '.' ) ;
strokeS stts( '/' ) ;
strokeS sttq( (countT)0 , sc_IGNOREqUOTES ) ;
etThread.boxMenuF( tinP , soul , T("///" ifcSCRATCH "/scratch/good/bad/adam.*") ) ;
ZE( strokeS* , pstt1m ) ;

TODO

/*1*/WAKEhIDE( "tool.?" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

