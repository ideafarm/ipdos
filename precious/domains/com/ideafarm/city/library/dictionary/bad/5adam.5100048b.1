
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


//VISIBLE

REST

third.s_writeF( tinP , handleJob , (byteT*)&value , sizeof value ) ;
countT value = 0x12344321 ;

third.s_acceptF( tinP , handleJob , idPortPeer , nnPeer , handleServer , countTC() ) ;
ZE( countT , idPortPeer ) ;
nicNameC nnPeer ;
handleC handleJob( tinP , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_SOCKET ) ;

etThread.osThreadF( tinP , countTC() , tmF ) ;

third.s_listenF( tinP , handleServer ) ;
idPort = third.s_bindF( tinP , handleServer ) ;
third.s_socketIF( tinP , handleServer ) ;
handleC handleServer( tinP , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_SOCKET ) ;

thirdC& third = ether ;

TODO

DONE( tmF )
etThread.strokeF( tinP , T("value: ")+TF1(value)+T("\r\n") ) ;
thThread.s_readF( tinP , (byteT*)&value , sizeof value , handleClient ) ;
ZE( countT , value ) ;
thThread.s_connectF( tinP , handleClient , idPort ) ;
thThread.s_socketIF( tinP , handleClient ) ;
handleC handleClient( tinP , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_SOCKET ) ;

thirdC& thThread = etThread ;
TASK( tmF )

countT idPort ;

/*1*/WAKEhIDE( "example.simplest.func.102003b.thirdC.s_connectF" )/*1*/
/**/
*/
\<A HREF=\"5.f840104.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

