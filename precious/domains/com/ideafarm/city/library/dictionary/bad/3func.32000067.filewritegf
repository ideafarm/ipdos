
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    #endif

        grabMe = 0 ;
        }
            break ;
            osh = 0 ;
            BOSnOtIN( CloseHandle( osh ) )
            BOSnOtIN( WriteFile( osh , pbP , cbP ? cbP : thirdC::c_strlenIF( pbP ) , &cba , 0 ) )
            ZE( DWORD , cba ) ;
    
            }
                c2o.c1 = _brcRaw ;
                BOSnOtIN( SetFilePointer( osh , c2o.c1 , (LONG*)&c2o.c2 , FILE_END ) )
                ZE( countT , _brcRaw ) ;
                count2S c2o ;
            {
            if( bAppendP )

            }
                continue ;
                BOSnOvALUEnOtIN( OSsLEEPf( TUCK >> 2 ) )
                ZE( countT , _brcRaw ) ;
            {
            if( osh == INVALID_HANDLE_VALUE )    
            HANDLE osh = (HANDLE)_brcRaw ;
            BOSnOtIN( CreateFile( postNameP , GENERIC_WRITE , 0 , &sa , bAppendP ? OPEN_ALWAYS : CREATE_ALWAYS , FILE_ATTRIBUTE_NORMAL | FILE_FLAG_SEQUENTIAL_SCAN /*| FILE_FLAG_WRITE_THROUGH*/ , 0 ) )
            BOSnOvALUEnOtIN( SetLastError( 0 ) )
            ZE( countT , _brcRaw ) ;
            //20160608@1239: COMMENTED OUT FILE_FLAG_WRITE_THROUGH TO INCREASE SPEED FOR LOGGING
        {
        for(;;)

        while( setIfZeAM( grabMe , 1 ) ) { BOSnOvALUEnOtIN( OSsLEEPf( TUCK ) ) }

        BOSnOtIN( SetSecurityDescriptorDacl( sa.lpSecurityDescriptor , 0 , 0 , 0 ) )
        BOSnOtIN( InitializeSecurityDescriptor( sa.lpSecurityDescriptor , SECURITY_DESCRIPTOR_REVISION ) )
        ZE( countT , _brcRaw ) ;

        sa.bInheritHandle = 0 ;
        sa.lpSecurityDescriptor = (SECURITY_DESCRIPTOR*)( _pbsd + _cbAlign ) ;
        sa.nLength = sizeof sa ;
        SECURITY_ATTRIBUTES sa ;

        if( _cbAlign ) _cbAlign = sizeof( countT ) - _cbAlign ;
        countT _cbAlign = (countT)_pbsd % sizeof( countT ) ;

        byteT _pbsd[ SECURITY_DESCRIPTOR_MIN_LENGTH + sizeof( countT ) ] ;

    #elif defined( __NT__ )
        //U:
    #if defined( __OS2__ )
{
/*1*/voidT fileWriteGF( const osTextT* const postNameP , const byteT* const pbP , const countT cbP , const boolT bAppendP )/*1*/

countT grabMe ;

//U::EDIT TO CONFORM: TEST PARAMS, cba, ETC

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

