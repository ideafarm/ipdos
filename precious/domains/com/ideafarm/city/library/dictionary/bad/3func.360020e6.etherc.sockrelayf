
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    delF( tinP , pbb ) ;
    }
        __( sizeof cbi - sInP.readF( tinP , (byteT*)&cbi , sizeof cbi ) ) ;

        if( pBatonOutP ) pBatonOutP->ungrabF( tinP ) ;
        sOutP.writeF( tinP , pbb , cbi ) ;
        sOutP.writeF( tinP , (byteT*)&cbi , sizeof cbi ) ;
        if( pBatonOutP ) pBatonOutP->grabF( tinP , TAG( TAGiDnULL ) ) ;

        __( cbi - sInP.readF( tinP , pbb , cbi ) ) ;

        }
            newF( tinP , LF , pbb , cbb ) ; ___( pbb ) ;
            cbb = cbi ;
            delF( tinP , pbb ) ;
        {
        if( cbb < cbi )
    {
    while( !POOP && cbi )

    newF( tinP , LF , pbb , cbb ) ; ___( pbb ) ;
    if( !cbb ) cbb ++ ;
    if( cbb < cbEstimateP ) cbb = cbEstimateP ;
    cbb = cbi ;
    __( sizeof cbi - sInP.readF( tinP , (byteT*)&cbi , sizeof cbi ) ) ;

    ZE( countT , cbi ) ;
    ZE( byteT* , pbb ) ;
    ZE( countT , cbb ) ;

    _IO_

    }
        if( POOP ) return ;
    {
    IFbEcAREFUL
    SCOOP
{
/*1*/voidT etherC::sockRelayF( tinS& tinP , socketC& sOutP , socketC& sInP , batonC* const pBatonOutP , const countT cbEstimateP )/*1*/

/**/
*/
  the internal buffer is reallocated whenever it is too small to handle the next item
  specifies the initial size of the internal buffer
  can be 0
 cbEstimateP
  if not 0 then will be grabbed befor writing each length prefix and released after writing each data string
  can be 0
 pBatonOutP
  must be connected and ready to read
 sInP
  must be connected and ready to write
 sOutP
 tinP
arguments
this function writes to sOutP exactly what it reads from sInP, excluding the terminating length value of 0
this function will not return until the peer either writes a length prefix with value 0 or closes its socket
 each record consists of a countT value containing the number of bytes which follow, followed by that many bytes
 both input streams are assumed to consist of a stream of length prefixed byte records
the input streams must be length prefixed
 to close sOutP, you must explicitly send a length prefix with value 0 after all sockRelayF calls that feed into it return
this function will never write a length prefix with value 0 to sOutP
several threads can feed into sOutP simultaneously
reads from sInP and writes to sOutP
  \<A HREF=\"5.9430104.1.1.0.html\"\>9430104:  WAKEsHOW( "example.simplest.func.1030109.etherC.sockRelayF" )\</A\>
 simplest
examples
\<A HREF=\"5.1030109.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$sockRelayF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

