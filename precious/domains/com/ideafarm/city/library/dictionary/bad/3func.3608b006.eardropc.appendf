
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    if( pbzUsed && F(flags) & flEARdROPc_LENGTHpREFIX ) ((countT*)pbzUsed)[ - 1 ] = pbzUsedEnd - pbzUsed ;

    }
        }
            pbzUsedEnd = pbzUsed + cbBoth ;
            pbzUsed = pbzUsedNew ;
            pbHaveEnd = pbHave + cbHave ;
            pbHave = pbHaveNew ;

            PUSE( tinP , pbHave ) ;
            }
                thirdC::c_memcpyIF( tinP , pbzUsedNew + cbUsedOld , pbP     , cbP       ) ;
                thirdC::c_memcpyIF( tinP , pbzUsedNew             , pbzUsed , cbUsedOld ) ;
            {
            if( pbHaveNew )
            byteT* pbzUsedNew = pbHaveNew           + cbHeader ;

            byteT* pbHaveNewEnd = pbHaveNew + cbHave ;
            #endif
                }
                    }
                        pNote->cbRequested  = pNote->cbUsedReally = cbHave ;
                        pNote->idType       = ifciDtYPEdROPnOTE_earDropImage ;
                    {
                    if( pNote )
                    dropNoteS* pNote = PUSE.pDropNoteF( tinP , (byteT*)pbHaveNew ) ;
                {
                if( pbHaveNew )
            #if defined( ENABLEdROPnOTES )
            PUSE.newF( tinP , LF , pbHaveNew , cbHave ) ; ___( pbHaveNew ) ;
            ZE( byteT* , pbHaveNew ) ;

            while( cbHave <= cbWant ) cbHave <<= 1 ;
            countT cbHave = 1 ;
            countT cbWant = cbHeader + cbBoth ;
            countT cbBoth = cbUsedOld + cbP ;
            countT cbUsedOld = pbzUsedEnd - pbzUsed ;
        {
        else
        }
            pbzUsedEnd += cbP ;
            thirdC::c_memcpyIF( tinP , pbzUsedEnd       , pbP , cbP ) ;
        {
        else if( pbHaveEnd - pbzUsedEnd      >= cbP )
        }
            }
                pbzUsedEnd = pbzUsed + cbP ;
                thirdC::c_memcpyIF( tinP , pbzUsed , pbP , cbP ) ;
            {
            if( pbzUsed )
            pbzUsed = pbHave + cbHeader ;
            pbHaveEnd = pbHave + cbHave ;
            #endif
                }
                    }
                        pNote->cbRequested  = pNote->cbUsedReally = cbHave ;
                        pNote->idType       = ifciDtYPEdROPnOTE_earDropImage ;
                    {
                    if( pNote )
                    dropNoteS* pNote = PUSE.pDropNoteF( tinP , (byteT*)pbHave ) ;
                {
                if( pbHave )
            #if defined( ENABLEdROPnOTES )
            PUSE.newF( tinP , LF , pbHave , cbHave ) ; ___( pbHave ) ;
            while( cbHave <= cbWant ) cbHave <<= 1 ;
            countT cbHave = 1 ;
            countT cbWant = cbHeader + cbP ; // THE PUSE.newF ARGUMENT SHOULD ALWAYS BE A POWER OF 2
        {
        if( !pbHave )
    {
    if( cbP )

    if( !cbP ) cbP = thirdC::c_strlenIF( tinP , pbP ) ;

    //CONJ: THIS COMMENT IS NOT REALLY TRUE
    //THIS IS DONE IN A WAY THAT ENSURES THAT ALL ALLOCATED SIZES >= sizeof( countT ) ARE MULTIPLES OF THE WORD SIZE
    //THIS CODE ENSURES THAT THE "END" OF THE USED BYTES IS ALWAYS ALLOCATED, SO APP CAN SET IT TO 0
{
/*1*/voidT earDropC::appendF( tinS& tinP , const byteT* const pbP , countT cbP )/*1*/

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

