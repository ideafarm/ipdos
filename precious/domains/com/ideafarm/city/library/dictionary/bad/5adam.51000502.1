
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

slPgm W("addEmUp",lex) ;
c2 = 4 ;
c1 = 3 ;

slPgm W("addEmUp",lex) ;
c2 = 2 ;
c1 = 1 ;

slPgm DEF(slDef,"addEmUp",lex) ;
soulC slPgm( tinP , TAG( TAGiDnULL ) , flSOUL_LIFO|flSOUL_LIVE ) ;

slDef OR(c1) O(sayerClass) OR(c2) O(sayerClass) O(c1) O(c2) O(adder) O(sayer) ;
soulC slDef( tinP , TAG( TAGiDnULL ) ) ;

countC c2 ;
countC c1 ;
sayerClassC sayerClass ;
sayerC sayer ;
adderC adder ;

lexC lex( tinP , etThread , TAG( TAGiDnULL ) ) ;

TODO

VARIABLE( countC , countT )

)
    ,

    PUSE( tinP , psttOldClass ) ;
    POPUP( T("sayerClassC: the class is ")+T(psttOldClass) ) ;
    slP >> psttOldClass ; ___( psttOldClass ) ;
    ZE( strokeS* , psttOldClass ) ;
    slP << pBase ;
    slP << (countT)ifcIDcMDbASE_CLASSnAME ;
    slP >> pBase ;
    ZE( baseSoilXxxxC* , pBase ) ;

    sayerClassC ,
(
OPERATOR

)
    ,

    POPUPcOUNT( "sayerC: " , c1 ) ;
    slP >> c1 ;
    ZE( countT , c1 ) ;

    sayerC ,
(
OPERATOR

)
    ,

    slP << (countT)( c1 + c2 ) ;
    slP >> c1 ;
    slP >> c2 ;
    ZE( countT , c2 ) ;
    ZE( countT , c1 ) ;

    adderC ,
(
OPERATOR

/*1*/WAKEhIDE( "example.other.func.18f0003.lexC.lexC" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

