
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return osc ;
    #endif
        else if( ifcP == ifcOPENhOW_nCeR ) osc = CREATE_ALWAYS             ;
        else if( ifcP == ifcOPENhOW_nCeO ) osc = OPEN_ALWAYS               ;
        else if( ifcP == ifcOPENhOW_nCeF ) osc = CREATE_NEW                ;
        else if( ifcP == ifcOPENhOW_nFeR ) osc = TRUNCATE_EXISTING         ;
             if( ifcP == ifcOPENhOW_nFeO ) osc = OPEN_EXISTING             ;
    #elif defined( __NT__ )
        else if( ifcP == ifcOPENhOW_nCeR ) osc = OPEN_ACTION_CREATE_IF_NEW | OPEN_ACTION_REPLACE_IF_EXISTS ;
        else if( ifcP == ifcOPENhOW_nCeO ) osc = OPEN_ACTION_CREATE_IF_NEW | OPEN_ACTION_OPEN_IF_EXISTS    ;
        else if( ifcP == ifcOPENhOW_nCeF ) osc = OPEN_ACTION_CREATE_IF_NEW | OPEN_ACTION_FAIL_IF_EXISTS    ;
        else if( ifcP == ifcOPENhOW_nFeR ) osc = OPEN_ACTION_FAIL_IF_NEW   | OPEN_ACTION_REPLACE_IF_EXISTS ;
             if( ifcP == ifcOPENhOW_nFeO ) osc = OPEN_ACTION_FAIL_IF_NEW   | OPEN_ACTION_OPEN_IF_EXISTS    ;
    #if defined( __OS2__ )
    ZE( countT , osc ) ;
    _IO_

    }
        if( POOP ) return 0 ;
    {
    IFbEcAREFUL
{
/*1*/countT thirdC::openHowOsFromIfIF( tinS& tinP , countT ifcP )/*1*/

/**/
*/
 ifcP
arguments
see the ifcOPENhOW symbolic constants
it is illegal to refer to this symbol in the definition of an adam
\<A HREF=\"5.1020053.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$openHowOsFromIfIF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

