
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return *this ;

    if( pBaton ) pBaton->ungrabF( tinP ) ;
    if( !third ) *pStack >> valueP ;
    }
        __1
        __( dosGetInfoBlocksIdThreadIF() ) ;
    {
    if( !pStack )
    __Z( pStack ) ;
    stackC* pStack = (stackC*)( bTinHasLeverP ? swMe.forIfcThreadF( tinP ) : (countT)swMe ) ;
    _IO_
    else if( osTidOwner != tinP.osTid && !bDying && !( F(flagsSwitch) & flSTACKc_ALLOWmULTIPLEuNSERIALIZED ) ) BLAMMO ;
    else if( !osTidOwner ) osTidOwner = tinP.osTid ;
    if( pBaton ) pBaton->grabF( tinP , TAG( TAGiDnULL ) ) ;

    }
        if( third ) return *this ;
    {
    IFbEcAREFUL    
    SCOOP
{
/*1*/switchStackC& switchStackC::pullF( tinS& tinP , countT& valueP , const boolT bTinHasLeverP )/*1*/

/**/
*/
 bTinHasLeverP
 valueP
 tinP
arguments
like operator >> except supports bTinHasLeverP
evaluates to a reference to this stack object
removes the item that was most recently put onto the stack
  \<A HREF=\"5.3330104.1.1.0.html\"\>3330104:  WAKEsHOW( "example.simplest.func.1210038.switchStackC.pullF" )\</A\>
 simplest
examples
\<A HREF=\"5.1210038.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$pullF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

