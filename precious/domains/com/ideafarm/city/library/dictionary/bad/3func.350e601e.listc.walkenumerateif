
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return flagsRC ;

    UNGRABtINaRGS( ifcIDtYPEtINaRGiNuSE_LIST )
    }
        POPtINaRGS
        pDatumP = *(datumS**)&tinP.ta.pushed.u.listWalk.util.pcP[ 0 ] ;
        flagsRC = listC::walkIF( tinP , pczPrefix , flLISToPEN_IFeXISTS , idGrabLayerP ) ;
        tinP.ta.pushed.u.listWalk.walk.flagsWalkP    = flLISTwALK_FILTEReNDoFsTRETCHEDvALUE ;
        tinP.ta.pushed.u.listWalk.walk.pListWalkCBFP = listWalkEnumerateCBF ;
        PUSHtINaRGS

        LNV( pczPrefix )
        listC::dictionaryReplaceOsTextIF( tinP , pczPrefix ) ;
        countT pczPrefix[] = { LISTnAME_ROOT , LISTnAME_ROOTsYSTEM3 , LISTnAME_FIELDvALUEiNDEX , (countT)postMasterPool , LISTnAME_ROOTaPPLICATION , cNameP , 0 } ;

        puseC          puseIndex( tinP , 0 , idStateSpace == ifcIDsTATEsPACE_SINGLEaDAM( tinP ) || idStateSpace == ifcIDsTATEsPACE_SCRATCH ? ifcIDpOOL_ADAMtEMP : ifcIDpOOL_HOMEtEMP ) ;
        const countT idStateSpace = PUSE.idStateSpaceF() ;
        const osTextT* postMasterPool = PUSE.postNameF( tinP ) ;
    {
    GRABtINaRGS( ifcIDtYPEtINaRGiNuSE_LIST )

    _IO_

    }
        if( POOP ) return flagsRC ;
        __Z( cNameP ) ;
        __NZ( pDatumP ) ;
        if( POOP ) return flagsRC ;
    {
    IFbEcAREFUL

    flagsT flagsRC = flLISTwALKrETURNcODE_null ;
{
/*1*/flagsT listC::walkEnumerateIF( tinS& tinP , datumS*& pDatumP , const countT cNameP , const countT idGrabLayerP )/*1*/

/**/
*/
  the name of the field
  must not be 0 or null length 
 cNameP
 tinP
args
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

