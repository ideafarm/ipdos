
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    ether( tinP , psFeature ) ;

    psFeature->removeAllF( tinP ) ;
    *psFeaturesVT << *psFeature ;
    *psFeature << (countT)this ;

    }
        *psFeature << (strokeS*)T("_tcButtonCBF") ;
        *psFeature << (countT)ifcIDtYPEsADAMcALLbACK_FLYOVER ;
    {
    if( F(flFeaturesP) & flTCfEATURE_FLYOVER )
    }
        *psFeature << (strokeS*)T("_tcButtonCBF") ;
        *psFeature << (countT)ifcIDtYPEsADAMcALLbACK_TAB ;
    {
    if( F(flFeaturesP) & flTCfEATURE_TABpARTICIPANT )
    *psFeature << (strokeS*)T("_tcButtonCBF") ;
    *psFeature << (countT)ifcIDtYPEsADAMcALLbACK_ERASE ;
    *psFeature << (strokeS*)T("_tcButtonCBF") ;
    *psFeature << (countT)ifcIDtYPEsADAMcALLbACK_DRAG ;
    *psFeature << (strokeS*)T("_tcButtonCBF") ;
    *psFeature << (countT)ifcIDtYPEsADAMcALLbACK_INoUTqUERY ;
    *psFeature << (strokeS*)T("_tcButtonCBF") ;
    *psFeature << (countT)ifcIDtYPEsADAMcALLbACK_HOTkEY ;
    *psFeature << (strokeS*)T("_tcButtonCBF") ;
    *psFeature << (countT)ifcIDtYPEsADAMcALLbACK_IFhIT ;
    *psFeature << (strokeS*)T("_tcButtonCBF") ;
    *psFeature << (countT)ifcIDtYPEsADAMcALLbACK_ANIMATE ;
    *psFeature << (strokeS*)T("_tcButtonCBF") ;
    *psFeature << (countT)ifcIDtYPEsADAMcALLbACK_BEFOREdESTROY ;
    *psFeature << (countT)ifcIDtYPEfEATUREsADAM_CALLbACK ;

    }
        psFeature->removeAllF( tinP ) ;
        *psFeaturesVT << *psFeature ;
        *psFeature << (countT)( flFEATUREsADAMkEYBOARD_ACTIONdOWN ) ;
        *psFeature << (countT)ifcIDtYPEfEATUREsADAM_KEYBOARD ;
    {
    if( F(flFeaturesP) & flTCfEATURE_KEYaCTION )

    }
        psFeature->removeAllF( tinP ) ;
        *psFeaturesVT << *psFeature ;
        *psFeature << flags ;
        *psFeature << (countT)ifcIDtYPEfEATUREsADAM_ADAM ;
        if( F(flFeaturesP) & flTCfEATURE_TABhEREsUPPRESSEShOTkEYS ) flags |= flFEATUREsADAMaDAM_TABhEREsUPPRESSEShOTkEYS ;
        flagsT flags = flFEATUREsADAMaDAM_null ;
        //U::ELIMINATE THIS SNIP OBSOLETED BY MIGRATING TO ifcIDtYPEfEATUREsADAM_TABpARTICIPANT

        psFeature->removeAllF( tinP ) ;
        *psFeaturesVT << *psFeature ;
        if( idTabP      ) *psFeature << idTabP      ;
        if( idTabClassP ) *psFeature << idTabClassP ;
        *psFeature << (countT)ifcIDtYPEfEATUREsADAM_TABpARTICIPANT ;
    {
    if( F(flFeaturesP) & flTCfEATURE_TABpARTICIPANT )

    }
        psFeature->removeAllF( tinP ) ;
        *psFeaturesVT << *psFeature ;
        *psFeature << (countT)flFEATUREsADAMdRAGGABLE_null ; // THIS IS WHERE A "PERSISTENCE" FLAG WOULD OPTIONALLY BE SET ; THIS LINE IS REQUIRED SO AS TO DOCUMENT HOW THE CODE IS TO BE ENHANCED TO SUPPORT PERISISTENCE
        *psFeature << (countT)ifcIDtYPEfEATUREsADAM_DRAGGABLE ;
    {
    if( F(flFeaturesP) & flTCfEATURE_DRAGGABLE )

    }
        psFeature->removeAllF( tinP ) ;
        *psFeaturesVT << *psFeature ;
        *psFeature << (countT)ifcIDtYPEfEATUREsADAM_FLYOVERhIGHLIGHT ;
    {
    if( F(flFeaturesP) & flTCfEATURE_FLYOVERhIGHLIGHT )

    }
        psFeature->removeAllF( tinP ) ;
        *psFeaturesVT << *psFeature ;

        }
            *psFeature << (countT)flFEATUREsADAMhOTkEY_BIGIT ;
            *psFeature << (countT)0 ;
        {
        if( F(flFeaturesP) & flTCfEATURE_HOTkEYbIGIT )

        *psFeature << (countT)ifcIDtYPEfEATUREsADAM_HOTkEY ;
    {
    if( F(flFeaturesP) & flTCfEATURE_HOTkEY )

    }
        psFeature->removeAllF( tinP ) ;
        *psFeaturesVT << *psFeature ;
        *psFeature << (countT)( flFEATUREsADAMmOUSE_TOOLpOSITION | flFEATUREsADAMmOUSE_OUTSIDE | flFEATUREsADAMmOUSE_ACTIONmOVE | flFEATUREsADAMmOUSE_ACTIONdOWN | flFEATUREsADAMmOUSE_ACTIONuP | flFEATUREsADAMmOUSE_TOOLbUTTONlEFT | flFEATUREsADAMmOUSE_TOOLbUTTONrIGHT ) ;
        *psFeature << (countT)ifcIDtYPEfEATUREsADAM_MOUSE ;
    {
    if( F(flFeaturesP) & flTCfEATURE_MOUSE )

    }
        psFeature->removeAllF( tinP ) ;
        *psFeaturesVT << *psFeature ;

        }
            *psFeature << cFrameNestRightP ;
            *psFeature << cFrameNestUpP    ;
            *psFeature << cFrameNestLeftP  ;
            *psFeature << cFrameNestDownP  ;

            if( !( F(flFeaturesP) & flTCfEATURE_FRAMEpEE ) ) *psFeature << (countT)flFEATUREsADAMfRAME_null ;
        {
        if( cFrameNestDownP || cFrameNestLeftP || cFrameNestUpP || cFrameNestRightP )

        if( F(flFeaturesP) & flTCfEATURE_FRAMEpEE ) *psFeature << (countT)flFEATUREsADAMfRAME_PEEoN ;

        *psFeature << rgbFrameP ;
        *psFeature << (countT)ifcIDtYPEfEATUREsADAM_FRAME ;
    {
    if( F(flFeaturesP) & flTCfEATURE_FRAME )

    ether( tinP , psFeature , TAG( TAGiDnULL ) ) ;
    ZE( soulC* , psFeature ) ;
{
pFlagsTcFeatureDisable( pFlagsTcFeatureDisableP )
cArg( cArgP ) ,
pTcStateCBF( pTcStateCBFP ) ,
flagsTcState( flTCsTATE_null ) ,
flFeatures( flFeaturesP ) ,
vTextC( tinP , postOldCommentP , psttP , csttReserveP , psFeaturesP , 0 , 0 , idToolFilterListP ) ,
/*1*/tcButtonC::tcButtonC( tinS& tinP , const osTextT* const postOldCommentP , tcStateCBFT pTcStateCBFP , const countT cArgP , const flagsT flFeaturesP , flagsT* const pFlagsTcFeatureDisableP , const strokeS* const psttP , countT csttReserveP , const countT rgbFrameP , const countT cFrameNestDownP , const countT cFrameNestLeftP , const countT cFrameNestUpP , const countT cFrameNestRightP , const countT idTabClassP , const countT idTabP , soulC* const psFeaturesP , const countT idToolFilterListP ) :/*1*/

/**/

*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

