
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

}
    }
        etThread.osSleepF( tinP , TOCK ) ;
        etThread.delF( tinP , psttr ) ;
        etThread.strokeF( tinP , psttr , flPAPERtALK_MOVEhERE ) ;
    
        WINDOWrEFERENCEeND( thirdC::pWinRootIF() ) ;
        }
            ungrabF( tinP , pw->grab_pczKtHere ) ;
            if( pw->pczKtHere ) etThread.strKtHereAddressF( tinP , psttr , pw->pczKtHere ) ;
            grabF( tinP , pw->grab_pczKtHere ) ;
        {
        if( pw )
        windowOldC* pw = thirdC::pWinRootIF() ;
        WINDOWrEFERENCEbEGIN( tinP , thirdC::pWinRootIF() ) ;
        
        , 0x100 ) ; ___( psttr ) ;
        
            S2(saOLD_KTaTTACHdOWN,scOld_KTaTTACH)+S2(1,scOld_KTfORMAT)+S2(flKTsCRATCH_null,scOld_KTfLAGSsCRATCH)+T("ac")
            S2(saOLD_KTaTTACHnEXT,scOld_KTaTTACH)+S2(1,scOld_KTfORMAT)+S2(flKTsCRATCH_null,scOld_KTfLAGSsCRATCH)+T("abc")+
            S2(saOLD_KTaTTACHnEXT,scOld_KTaTTACH)+S2(1,scOld_KTfORMAT)+S2(flKTsCRATCH_null,scOld_KTfLAGSsCRATCH)+T("abb")+
            S2(saOLD_KTaTTACHuP,scOld_KTaTTACH)+S2(1,scOld_KTfORMAT)+S2(flKTsCRATCH_null,scOld_KTfLAGSsCRATCH)+T("aba")+
            T("")+S2(0,scOld_cPUSHoRIGIN)+S2(2,scOld_cDUPhIGHwATER)+S2(CfROM2(1,0),scOld_mmMOVEpEL)+T("MINE1\r\nMINE2")+S2(0,scOld_POPhIGHwATER)+S2(0,scOld_POPoRIGIN)+
        
        etThread.strFuseF( tinP , psttr , 

        etThread.strGraphF( tinP , psttr , lever , bLever , swsX , swsY , swColor , swMarker , 600 , 400 , ifcIDsTYLEsTRgRAPH_STYLE1 , flSTRgRAPH_null , T("Mthis is a note\r\nMnote line 2") ) ;

        }
            }
                swsY << yy ;
                swsX << xx ;
                measureT yy = xx * xx - lever * 0x10 * xx ;
            {
            for( measureT xx = 0 ; xx <= 8 ; xx ++ )

            }
                case 3 : { swColor = 0xff00ff ; break ; }
                case 2 : { swColor = 0x0000ff ; break ; }
                case 1 : { swColor = 0x00ff00 ; break ; }
                case 0 : { swColor = 0xff0000 ; break ; }
            {
            switch( lever % 4 )
        {
        for( lever = 1 ; lever <= 8 ; lever ++ )

        switchC swMarker( tinP , etThread , TAG( TAGiDnULL ) , flSTACKc_FIFO , lever ) ;
        switchC swColor( tinP , etThread , TAG( TAGiDnULL ) , flSTACKc_FIFO , lever ) ;
        switchStackC swsY( tinP , etThread , TAG( TAGiDnULL ) , flSTACKc_FIFO , lever , flSTACKc_FIFO , ifcSTACKtYPE_measureT ) ;
        switchStackC swsX( tinP , etThread , TAG( TAGiDnULL ) , flSTACKc_FIFO , lever , flSTACKc_FIFO , ifcSTACKtYPE_measureT ) ;
        batonC bLever( tinP , TAG( TAGiDnULL ) ) ;
        ZE( countT , lever ) ;
        
        , 0x10000 ) ; ___( psttr ) ;
        
            S2(saOLD_KTaTTACHnEXT,scOld_KTaTTACH)+S2(1,scOld_KTfORMAT)+S2(flKTsCRATCH_null,scOld_KTfLAGSsCRATCH)+S2(0,scOld_PUSHhIGHwATER)
            S2(saOLD_KTaTTACHuP,scOld_KTaTTACH)+S2(1,scOld_KTfORMAT)+S2(flKTsCRATCH_WMHhERE,scOld_KTfLAGSsCRATCH)+T("aa")+
            S2(1,scOld_KTfORMAT)+S2(flKTsCRATCH_null,scOld_KTfLAGSsCRATCH)+T("a ")+TF1(++idTalk)+
            T("\f")+
        
        etThread.strFuseF( tinP , psttr , 
        ZE( strokeS* , psttr ) ;
    {
    while( !etThread && !ether )
    ZE( countT , idTalk ) ;

    stateC state( tinP , etThread ) ;
{

TODO

/*1*/WAKEhIDE( "example.simplest.kt.sticky.here.drawing" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

