
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etherC::loafIF( tinP ) ;                            
etThread.traceF( tinP , T("ok") ) ;

}
    }
        continue ;
        patch_cNote  =   1 ;
        patch_idAdam = - 1 ;
    {
    if( !patch_cNote )

    patch_cNote  -- ;
    patch_idAdam -- ;   // MAXIMAL CLOSURE FOR THIS REPEAT SUBEXPRESSION

    else if( patch_idAdam == - 1 ) break ;
    }
        break ;

        etThread.traceF( tinP , T("                ")+T("0              1               2               3") ) ;
        etThread.traceF( tinP , T("                ")+T("123456789abcdef0123456789abcdef0123456789abcdef0") ) ;
        etThread.traceF( tinP , T("                ")+tBig ) ;
        }
            etThread.traceF( tinP , T("                ")+TP("",idHit-1)+tLine ) ;

            ;

                    : T("|") 
                    ? T("||")
                : csttHit == 2
                ? T("|")+TPS("-",csttHit-2,S1C('-'))+T("|")

            TN( tLine , "" ) ; tLine = csttHit > 2
            static countT csttHit = idl - idHit + 1 ;
            static countT idl = idf ? idf - 1 : psttzBig->idAdam ;
        {
        if( idHit )
        etThread.traceF( tinP , T("[idHit,idf]:    ")+TF2(idHit,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED)+tb4+TF2(idf,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ;
    {
    if( idHit )

    countT idHit = etThread.strIdF( tinP , idf , sttq , psttzSmall , psttzBig , 0 , 1 ) ;

    countT idf = 1 ;
{
for(;;)
ZE( countT , csttOptimal ) ;

patch_idAdam = patch_cNote = psttzBig->idAdam - 1 ;

___( patch_cNote   - ( - 1 ) ) ;
___( patch_idCaste - sc_ccSSSrEPEAT ) ;
___( patch_idAdam  - ( - 1 ) ) ;
countT& patch_cNote   = *(countT*)&psttzSmall[ CSpREFIX - 1 + 2 ].cNote   ;
countT& patch_idCaste = *(countT*)&psttzSmall[ CSpREFIX - 1 + 2 ].idCaste ;
countT& patch_idAdam  = *(countT*)&psttzSmall[ CSpREFIX - 1 + 2 ].idAdam  ;

const strokeS* psttzBig   = tBig ;
const strokeS* psttzSmall = tre ;

strokeS sttq( 0 , sc_IGNOREqUOTES ) ;

;

    +S2(sa_SSSaNDeND,sc_ccSSS)
        +T("fooey")
        +S2(sa_SSSoReND,sc_ccSSS)
            +S2(sa_SSSmARKaNY,sc_cSSSmARK)
        +S2(sa_SSSoR,sc_ccSSS)
        +S3(-1,sc_ccSSSrEPEAT,-1)                    // "-1" IS A SPECIAL idAdam VALUE THAT MEANS "IGNORE THE NEXT cNote SUBEXPRESSIONS", SO THE "OR" SUBEXPRESSION IS IGNORED
    +S2(sa_SSSaND,sc_ccSSS)

TN( tre , "" ) ; tre = tn

//TN( tBig , "fooeygooey" ) ;
TN( tBig , "abcdfooeygooey" ) ;
TN( tb4 , "    " ) ;
TN( tn , "" ) ;

TODO

/*1*/WAKEsHOWtEXT( "example.simplest.regular.expression.search.closure.optimization.before.implemented.as.etherC.function" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
