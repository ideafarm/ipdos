
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return c1 ;
    ether.delF( tinP , pcr ) ;
    c1 = sCountC( tinP , ether , pcr , cbit1 ) ;

    }
        if( c1 == sCountC( tinP , ether ) ) break ;

        }
            setBitF( tinP , pcr , offr , 1 ) ;
            c1 -= trial ;
        {
        if( !diff.fNegativeF( tinP ) )
        diff = c1 - trial ;
        sCountC diff( tinP , ether ) ;

        }
            trial *= factor ;
            while( -- offr2 ) factor *= 2 ;
            sCountC factor( tinP , ether, 2 ) ;
            countT offr2 = offr ;
        {
        if( offr )
        sCountC trial( c2 ) ;
    {
    for( sCountT offr = cbit1 - cbit2 ; offr >= 0 ; offr -- )

    ether.memSetF( tinP , (byteT*)pcr , 1 + cbit1/SB ) ;
    ether.newF( tinP , LF , pcr , 1 + cbit1 / SC ) ; ___( pcr ) ;
    ZE( countT* , pcr ) ;
    countT cbit2 = c2 ;
    countT cbit1 = c1 ;
    c2.setCBitF( tinP ) ;
    c1.setCBitF( tinP ) ;
    sCountC c2( cP ) ;
    sCountC c1( *this ) ;
    _IO_

    }
        if( ether ) return sCountC( tinP , ether ) ;
    {
    IFbEcAREFUL

    TINSL
{
/**//*1*/sCountC sCountC::operator /( const sCountC& cP ) const/*1*/
*/
 cP
arguments
the time required is approximately proportional to the number of true bits in the result
divides this object's value by cP
evaluates to an sCountC object
  \<A HREF=\"5.e220104.1.1.0.html\"\>e220104:  WAKEsHOW( "example.simplest.func.108002e.sCountC.operator_divide" )\</A\>
 simplest
examples
\<A HREF=\"5.108002e.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

