
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return flagsRC ;

    _OUT_

    }
        listC::indexIF( tinP , hList ) ;

        }
            ((listC*)pCursor)->aptBro = list.aptKid ;
            __( !list.aptKid ) ;

            while( ((listC*)pCursor)->aptBro ) pCursor = &APT( listingC , ((listC*)pCursor)->aptBro ) ;
            listingC* pCursor = &APT( listingC , aptWoth ) ;

            //AT THIS POINT, I RETAIN MY GRAB ON THE DESTINATION LIST AND I KNOW THAT NO OTHER THREAD POSESSES A GRAB ON ANY OF ITS listingC INCLUDING THOSE OF KID LISTS

            POPtINaRGS
            list.walkF( tinP , idGrabLayerP ) ;
            tinP.ta.pushed.listWalk.walk.flagsWalkP = flLISTwALK_CALLERgRABBEDrOOT ;
            PUSHtINaRGS
        {
        else
        if( !list.aptKid ) list.aptKid = aptWoth ;

        listC& list = *(listC*)hList.osF( ifcIDtYPEhANDLE_LISTING ) ;

        openIF( tinP , hList , pczNameToP , flLISToPEN_null , idGrabLayerP ) ;
        handleC hList( tinP , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_LISTING ) ;

        flagsRC |= flLISTpOURrETURNcODE_SOURCElISTINGSeXISTED ;
    {
    if( aptWoth )

    }
        }
                      list.aptKid.resetF() ;
            aptWoth = list.aptKid ;
            listC& list = *(listC*)hList.osF( ifcIDtYPEhANDLE_LISTING ) ;

            listC::unIndexIF( tinP , hList , flLISTwALK_RETAINrOOT ) ;
        {
        if( ~hList )

        if( F( openIF( tinP , hList , pczNameFromP , flLISToPEN_IFeXISTS , idGrabLayerP ) ) & flLISToPENrETURNcODE_LISTeXISTED ) flagsRC |= flLISTpOURrETURNcODE_SOURCElISTeXISTED ;
        handleC hList( tinP , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_LISTING ) ;
    {
    aptC aptWoth ;

    grabitC grabitx( tinP , TAG( TAGiDnULL ) ) ;

    _INoLD_

    }
        if( POOP ) return flagsRC ;
        __( *pczNameFromP - LISTnAME_ROOT ) ;
        __( *pczNameToP - LISTnAME_ROOT ) ;
        if( POOP ) return flagsRC ;
        __Z( pczNameToP ) ;
        __Z( pczNameFromP ) ;
        if( POOP ) return flagsRC ;
    {
    IFbEcAREFUL

    flagsT flagsRC = flLISTpOURrETURNcODE_null ;
{
/*1*/flagsT listC::pourIF( tinS& tinP , countT* const pczNameToP , countT* const pczNameFromP , const countT idGrabLayerP )/*1*/

/**/
*/
if the source list is empty or does not exist then i do not do anything
i evaluate to 1 iff the source list existed, even if it was empty
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

