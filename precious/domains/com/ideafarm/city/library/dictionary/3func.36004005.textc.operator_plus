
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    }
        return tr ;
        _OUT_
        TN( tr , "" ) ;
        _INoLD_
    {
    else
    }
        return tr ;
        _OUT_
        ether.delF( tinP , psttBoth ) ;
        tr.bConvertible = bConvertible && tP.bConvertible ;
        TN( tr , psttBoth ) ;
        ether.strFuseF( tinP , psttBoth , (textC&)tP ) ; ___BITScT( psttBoth , 0xd51 ) ;
        ether.strFuseF( tinP , psttBoth , psttMe , 0 , 0 , strokeS() , 0 , 0 ,/*U::SOUL?*/ ((textC&)tP).csF( tinP ) ) ; ___BITScT( psttBoth , 0xd52 ) ;
        ZE( strokeS* , psttBoth ) ;
        _INoLD_
    {
    if( !ether && !!psttMe )
    loadVTextValueIfF( tinP ) ;
    tP.loadVTextValueIfF( tinP ) ;
    puseC puse( tinP , ifcIDpOOL_ADAMtEMP ) ;

    TINSL
    TPpARAMmAP
{
/*1*/textC textC::operator +( TPpARAM )/*1*/

/**/
*/
  the modification can occur only if tP is a vTextC object
  i cast in order to avoid zillions of compiler warnings
  i might modify this even though it is declared a constant
 tP
arguments
evaluates to a textC object that contains a concatenation of my value with that of tP
  \<A HREF=\"5.1b20104.1.1.0.html\"\>1b20104:  WAKEsHOW( "example.simplest.func.1050005.textC.operator_plus" )\</A\>
 simplest
examples
\<A HREF=\"5.1050005.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

