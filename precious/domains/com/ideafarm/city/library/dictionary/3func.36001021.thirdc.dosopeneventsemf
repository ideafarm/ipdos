
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return fCreator ;
    #endif

        else __1
        }
            fCreator = ERROR_ALREADY_EXISTS != tinP.brcRaw ;
            BOSdOnOTtEST( WHATgbo , GetLastError() )
        {
        if( ~handleP )
        handleP.osF( ifcIDtYPEhANDLE_EVENTsEMAPHORE , (countT)tinP.brcRaw ) ;
        BOSpOOP
        BOS( WHATgbo , BOSoK , CreateEvent( &sa , 1 , fGivenP , postP ) )
        SECURITYaTTRIBUTE_saUNRESTRICTED( 0 ) ;
        BOSnOvALUE( WHATgbo , SetLastError( 0 ) )

    #elif defined( __NT__ )

        delF( tinP , post ) ;
        }
            __Z( handleP ) ;

            }
                }
                    __( tinP.brcRaw ) ;
                {
                else
                }
                    if( !POOP ) break ;

                    handleP.osF( ifcIDtYPEhANDLE_EVENTsEMAPHORE , (countT)osh ) ;
                    BOSpOOP
                    BOSI( WHATgbo , BOSfAIL , DosOpenEventSem( post , &osh ) )
                    ZE( HEV , osh ) ;
                    fCreator = 0 ;
                {
                if( tinP.brcRaw == ERROR_DUPLICATE_NAME )

                handleP.osF( ifcIDtYPEhANDLE_EVENTsEMAPHORE , (countT)osh ) ;
                BOSdOnOTtEST( WHATgbo , DosCreateEventSem( post , &osh , 0 , fGivenP ) )
                ZE( HEV , osh ) ;
                fCreator = 1 ;
            {
            while( cntTries -- )
            countT cntTries = 10 ;
        {
        }
            thirdC::c_strcpatF( tinP , post , postP ) ;
            thirdC::c_strcpyIF( tinP , post , ostoPrefix ) ;
            newF( tinP , LF , post , ostoPrefix.costF() + tinP.brcRaw + 1 ) ; ___( post ) ;
            BOSdOnOTtEST( WHATgbo , strlen( postP ) )
            OStEXTV( ostoPrefix , "\\sem32\\" )
        {
        if( postP )
        ZE( osTextT* , post ) ;

    #ifdef __OS2__

    ZE( boolT , fCreator ) ;

    _IO_

    }
        if( POOP ) return 0 ;
        #endif
            __( sizeof( countT ) != sizeof( HANDLE ) || fnu ) ;
        #elif defined( __NT__ )
            __( sizeof( countT ) != sizeof( HEV ) || fnu ) ;
        #ifdef __OS2__
        ZE( boolT , fnu ) ;
        }
            __( tinP.brcRaw ) ;
            BOSdOnOTtEST( WHATgbo , strchr( postP , '\\' ) )
        {
        if( postP )
        if( POOP ) return 0 ;
    {
    IFbEcAREFUL
    SCOOP

    ZE( countT* , pcb ) ; *pcb = 0 ;
{
/*1*/boolT thirdC::dosOpenEventSemF( tinS& tinP , handleC& handleP , const osTextT* const postP , const boolT fGivenP )/*1*/

/**/
*/
  1: sign is in the "given" state as soon as it is constructed
  0: sign is not "given"
 fGivenP
  can be 0
 postP
 handleP
arguments
it is illegal to refer to this symbol anywhere
  \<A HREF=\"5.1d00104.1.1.0.html\"\>1d00104:  WAKEsHOW( "example.simplest.func.1020023.thirdC.dosOpenEventSemF" )\</A\>
 simplest
examples
\<A HREF=\"5.1020023.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$dosOpenEventSemF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//

