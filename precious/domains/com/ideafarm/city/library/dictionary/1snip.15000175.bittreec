
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


;
}
    inline countT cRemainingF( voidT ) { return ( pbRawEnd - pbRawCursor ) / sizeof( bitNodeS ) ; }

    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3613b00e.bitTreeC.purgeF!||
    voidT purgeF( tinS& tinP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3613b008.bitTreeC.queryF!||
    bitNodeS* queryF( tinS& tinP , const byteT* pbBitsP , countT offBitP , countT cBitsP , countT* const pcDatumP = 0 ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3613b007.bitTreeC.walkF!||
    voidT walkF( tinS& tinP , stackC& stThisP , stackC& stKidsDoneP , byteT* pbBufferP , countT cbBufferP , countT& cNestP , ifc2FT pCBFP = 0 , countT* pcArgP = 0 , const boolT* pQuitP = 0 , bitNodeS* pRootP = 0 ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3613b006.bitTreeC.traceF!||
    voidT traceF( tinS& tinP , countT& cNestP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3613b004.bitTreeC.newF!||
    voidT newF( tinS& tinP , const countT idLineP , const countT idiFileP , const byteT* pbBitsP , countT offBitP , countT cBitsP , countT* const pcDatumP = 0 ) ;

    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3613b003.bitTreeC.bitTreeC!||
    bitTreeC( tinS& tinP , const osTextT* const postP , const flagsT flagsP = flBITtREEc_null , const countT idStateSpaceP = 0 , const countT expNodesPerNapkinP = 0x15 , const countT cNodeMaxP = 0 ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3613b002.bitTreeC.dt_bitTreeC!||
    ~bitTreeC( voidT ) ;

    public :

    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3613b00d.bitTreeC.dtF!||
    voidT dtF( tinS& tinP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3613b00c.bitTreeC.ctF!||
    voidT ctF( tinS& tinP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3613b00a.bitTreeC.newNodeF!||
    bitNodeS* newNodeF( tinS& tinP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3613b00b.bitTreeC.walkStepF!||
    boolT walkStepF( tinS& tinP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3613b009.bitTreeC.queryStepF!||
    boolT queryStepF( tinS& tinP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3613b005.bitTreeC.newStepF!||
    boolT newStepF( tinS& tinP ) ;

    const countT cNodeMaxCt ;
    const countT expNodesPerNapkinCt ;
    const countT idStateSpaceCt ;
    const flagsT flagsCt ;
    osTextT      postCt[ TUCK ] ;
    //CT SPECS

    countT       cErrorTraces ;

    countT       cElementsDispensed ;
    napkinsC*    pNapkins ;
    byteT        pbDockNapkins[ sizeof( napkinsC ) ] ;

    byteT*       pbRawEnd ;
    byteT*       pbRawCursor ;
    byteT*       pbRawBegin ;
    byteT        pbDockNapRaw[ sizeof( napkinC ) ] ;
{
/*1*/class _export bitTreeC/*1*/

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

