
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


//VISIBLE

REST
etThread.osProcessIdPhaseAdamF( tinP , ifcIDpHASEhANDOFFoLD_SHUTTINGdOWN ) ;

HEAReNTER( ether )
etThread.strokeF( tinP , T("\r\n\r\npress the enter key") ) ;

etThread.delF( tinP , pbInPool ) ;

etThread.strokeF( tinP , T("pbInPool   = ")+TF1((countT)pbInPool)+T("\r\npbPool     = ")+TF1((countT)pbPool)+T("\r\ndifference = ")+T(pbInPool-pbPool)+T("\r\nidaInPool  = ")+T(idaInPool)+T("\r\nidaInStack = ")+T(idaInStack)+T("\r\npbInPool2  = ")+TF1((countT)pbInPool2)+T("\r\n") ) ;

byteT* pbInPool2 = ap_artmentOldC( tinP , idaInPool ) ;

byteT* pbPool = poolOld ;

countT idaInStack  = ap_artmentOldC( tinP , pbInStack ) ;
countT idaInPool   = ap_artmentOldC( tinP , pbInPool ) ;

byteT pbInStack[] = { 1 } ;

etThread.newF( tinP , LF , pbInPool ) ; ___( pbInPool ) ;
ZE( byteT* , pbInPool ) ;

TODO

/*1*/WAKEhIDE( "example.simplest.func.1390004.ap_artmentOldC.ap_artmentOldC" )/*1*/
/**/
*/
\<A HREF=\"5.8a30104.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

