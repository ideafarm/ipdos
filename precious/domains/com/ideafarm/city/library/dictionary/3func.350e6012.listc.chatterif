
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return flagsRC ;

    _OUT_

    POPtINaRGS
    flagsRC |= walkIF( tinP , pczName , flLISToPEN_IFeXISTS , idGrabLayerP ) ;


    ;
        : 0
        ? cArgP
    tinP.ta.pushed.listWalk.util.pcP[ 2 ] = F(flagsP) & flLISTwALKcHATTER_MAPiDjOTvALUES
    tinP.ta.pushed.listWalk.util.pcP[ 1 ] = flagsP ;
    tinP.ta.pushed.listWalk.util.pcP[ 0 ] = pczName[ 1 ] ;
    tinP.ta.pushed.listWalk.walk.flagsWalkP = flLISTwALK_IGNOREdELETErEQUESTEDbIT ;
    tinP.ta.pushed.listWalk.walk.pListWalkCBFP = listWalkChatterCBF ;
    PUSHtINaRGS

    grabitC grabitx( tinP , TAG( TAGiDnULL ) ) ;

    _INoLD_

    }
        if( POOP ) return flagsRC ;
        }
            __NZ( cArgP ) ;
        {
        if( !( F(flagsP) & flLISTwALKcHATTER_MAPiDjOTvALUES ) )
        __( *pczName - LISTnAME_ROOT ) ;
        FV( flLISTwALKcHATTER , flagsP ) ;
        if( POOP ) return flagsRC ;
        __Z( pczName ) ;
        if( POOP ) return flagsRC ;
    {
    IFbEcAREFUL

    flagsT  flagsRC   = flLISTwALKrETURNcODE_null ;
    countT* pczName   = pczNameP ? pczNameP : pczRoot ;
    countT  pczRoot[] = { LISTnAME_ROOT , 0 } ;
{
/*1*/flagsT listC::chatterIF( tinS& tinP , countT* const pczNameP , flagsT flagsP , countT cArgP , const countT idGrabLayerP )/*1*/

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

