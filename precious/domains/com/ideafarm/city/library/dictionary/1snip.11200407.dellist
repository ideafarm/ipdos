
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


    }
        DEL( pd ) ;                                     \
                              pd->pNext = 0 ;           \
                     pWothP = pd->pNext ;               \
        classP* pd = pWothP ;                           \
    {                                                   \
    while( pWothP )                                     \
                                                        \
#define DELlIST(classP,pWothP)                          \

/*1*//*DELlIST(classP,pWothP)*//*1*/

/**/
*/
i avoid recursion by zeing out the pNextP member before deleting each instance in the list
it is bad code style to assume that application code will use me
the definition of classP should correctly delete the list using recursion if its pNextP member is not 0
use me to delete a linked list
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

