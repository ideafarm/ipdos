
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST
etThread.osProcessIdPhaseAdamF( tinP , ifcIDpHASEhANDOFFoLD_SHUTTINGdOWN ) ;

}
    }
        etThread.delF( tinP , psttExtEmail ) ;
        }
            etThread.delF( tinP , psttNickname ) ;
            }
                etThread.delF( tinP , postb ) ;
                etThread.boxPutF( tinP , T("ideafarm.com//smtp/" ifcEMAIL_OLDfROM "/")+T(psttExtEmail)+T("//")+TF2(DDNUMB,flFORMAT_CITIZENeMAIL) , postb , costb ) ;

                etThread.delF( tinP , psttb ) ;
                countT costb = etThread.strMakeF( tinP , postb , psttb ) ; ___( postb ) ;
                ZE( osTextT* , postb ) ;

                ) ) ; ___( psttb ) ;

                    ".\r\n"
                    "    http://www.ideafarm.com\r\n"
                    "\r\n"
                    "from using it.  For details, see\r\n"
                    "Please login at your earliest convenience, to prevent someone else\r\n"
                    "This \"account\" is currently unsecured; anyone could login to it.\r\n"
                    "\r\n"
                    "\r\n"
                    "    external email: \"")+T(psttExtEmail)+T("\"\r\n"
                    "    nickname:       \"")+T(psttNickname)+T("\"\r\n"
                    "    citizen id:      ")+TF1(idCitizen)+T("\r\n"
                    "\r\n"
                    "\r\n"
                    "You have paid for the following identity within the city:\r\n"
                    "\r\n"
                    "been received at city center.  Thank you.\r\n"
                    "You are receiving this email because your payment for citizenship has\r\n"
                    "\r\n"
                    "Subject: IdeaFarm " "(tm) City: Citizen Id Assignment\r\n"

                etThread.strMakeF( tinP , psttb , T(

                ZE( strokeS* , psttb ) ;
            {

            etThread.strokeF( tinP , T("idCitizen = ")+TF1(idCitizen)+T("\r\n") ) ;

            sock.readF( tinP , (byteT*)&idCitizen , sizeof idCitizen ) ;
            ZE( countT , idCitizen ) ;

            etThread.delF( tinP , pstt1o ) ;
            sock.writeF( tinP , (byteT*)pstt1o , cbo ) ;
            sock.writeF( tinP , (byteT*)&cbo , sizeof cbo ) ;
            countT cbo = ( CSpREFIX + pstt1o->idAdam ) * sizeof( strokeS ) ;
            sock.writeF( tinP , (byteT*)&idCmd , sizeof idCmd ) ;
            sock.connectF( tinP , ifcPORToLD1nICKNAME , socketC::nicNameIF( tinP , ether , T("city.center.ideafarm.com") ) ) ;
            socketC sock( tinP , ether , TAG( TAGiDnULL ) ) ;

            countT idCmd = idcNICKNAMEcMD_NEWiD ;

            etThread.strFuseSeparateF( tinP , pstt1o , psttNickname , 0 , 0 , 0 , 0 , /*U::SOUL?*/ 0x100000 ) ; ___( pstt1o ) ;
            etThread.strFuseSeparateF( tinP , pstt1o , psttExtEmail , 0 , 0 , 0 , 0 , /*U::SOUL?*/ 0x100000 ) ; ___( pstt1o ) ;
            ZE( strokeS* , pstt1o ) ;

            pstth = 0 ;
            strokeS* psttNickname = pstth ;
        {
        else
        if( !pstth || !pstth->idAdam ) etThread.etherFireImpersonateMonitorIF( tinP ) ;
        etThread.faceHearF( tinP , pstth ) ; ___( pstth ) ;
        etThread.strokeF( tinP , T("Enter the nickname by which this person is to be known in the city: ") ) ;

        pstth = 0 ;
        strokeS* psttExtEmail = pstth ;
    {
    else
    if( !pstth || !pstth->idAdam ) etThread.etherFireImpersonateMonitorIF( tinP ) ;
    etThread.faceHearF( tinP , pstth ) ; ___( pstth ) ;
    ZE( strokeS* , pstth ) ;
    etThread.strokeF( tinP , T("(optional) Enter an external email address"": ") ) ;
{
while( !ether )

etThread.strokeF( tinP , T("IdeaFarm " "(tm) City New Citizen Registrar\r\ni register new citizens and assign idCitizen values\r\n\r\n") ) ;

TODO

/*1*/WAKEhIDE( "newCitizenRegistrar" )/*1*/
/**/
*/
 strFuseSeparateF
this function can fail due to hardcoded capacity limits
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

