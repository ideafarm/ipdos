
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    if( pBaton ) pBaton->ungrabF( tinP ) ;
    freshF( tinP , psttPromptP ) ;
    if( !psttValue ) { etherP.strMakeF( tinP , LF , psttValue ) ; ___( psttValue ) ; }
    if( pBaton ) pBaton->grabF( tinP , TAG( TAGiDnULL ) ) ;
{
cFramesPadUp( cFramesPadUpP )
cFramesPadRight( cFramesPadRightP ) ,
cArg( cArgP ) ,
pTcStateCBF( pTcStateCBFP ) ,
ether( etherP ) ,
pSign( pSignP ) ,
pBaton( pBatonP ) ,
psttPrompt( 0 ) ,
psttValue( psttValueP ) ,
tcButtonC( tinP , postOldCommentP , buPromptCBF , (countT)this , flFeaturesP | flTCfEATURE_KEYaCTION | flTCfEATURE_HOTkEY | flTCfEATURE_HOTkEYgRABStAB , pFlagsTcFeatureDisableP , T("")+S2(0x000000,scOld_cPUSHcOLOR)+T(psttPromptP)+S2(0,scOld_POPcOLOR) , csttReserveP , rgbFrameP , 0 , 0 , 0 , 0 , idTabClassP , idTabP , psFeaturesP , idToolFilterListP ) ,
/*1*/tcPromptC::tcPromptC( tinS& tinP , etherC& etherP , const osTextT* const postOldCommentP , strokeS*& psttValueP , const strokeS* const psttPromptP , batonC* const pBatonP , signC* const pSignP , const flagsT flFeaturesP , countT csttReserveP , tcStateCBFT pTcStateCBFP , const countT cArgP , flagsT* const pFlagsTcFeatureDisableP , const countT cFramesPadRightP , const countT cFramesPadUpP , const countT rgbFrameP , const countT idTabClassP , const countT idTabP , soulC* const psFeaturesP , const countT idToolFilterListP ) :/*1*/

/**/

*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

