
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etThread.delF( tinP , pstt1Map ) ;

etThread.delF( tinP , pstt1m ) ;
}
    else etThread.strokeF( tinP , tcr8cr ) ;
    }
        etThread.delF( tinP , postDefNew ) ;
        etThread.boxPutF( tinP , psttc3 , postDefNew , costDefNew ) ;
        countT costDefNew = etThread.strMakeF( tinP , LF , postDefNew , tDef ) ; ___( postDefNew ) ;
        ZE( osTextT* , postDefNew ) ;
        etThread.strokeF( tinP , tChanged ) ;
    {
    if( cDoneAll && !ether )

    }
        etThread.delF( tinP , psttDefNew2 ) ;
        etThread.delF( tinP , psttDefNew1 ) ;
        }
            cDoneAll += cDone ;
            tDef = T(psttDefNew2) ;
        {
        if( cDone )
        etThread.delF( tinP , psttDefNew1 ) ;
               cDone += etThread.strReplaceF( tinP , psttDefNew2 , psttDefNew1 , tOld7 , tNew , 0 , flSTRrEPLACE_IGNOREqUOTES ) ; ___( psttDefNew2 ) ;
        countT cDone  = etThread.strReplaceF( tinP , psttDefNew1 , tDef        , tOld8 , tNew , 0 , flSTRrEPLACE_IGNOREqUOTES ) ; ___( psttDefNew1 ) ;
        ZE( strokeS* , psttDefNew2 ) ;
        ZE( strokeS* , psttDefNew1 ) ;

        }
            tNew  = tDot+tNew+tDot ;
            tOld8 = tDot+tOld8+tDot ;
    
            etThread.delF( tinP , psttw ) ;
            tOld7 = tDot+T(psttw)+tDot ;    
            etThread.strSubstringF( tinP , psttw , idf , idl , tOld8 ) ; ___( psttw ) ;
            countT idl = 7 ;
            countT idf = 1 ;
            ZE( strokeS* , psttw ) ;    
        
            }
                etThread.delF( tinP , pstt1w ) ;
                }
                    ( !tOld8.csF( tinP ) ? tOld8 : tNew ) = T(psttc2) ;
                {
                FORsTRINGSiN2( pstt1w )
                countT cWords = etThread.strWordsOldF( tinP , pstt1w , psttc1 , sttq , tComma ) ; ___( pstt1w ) ;
                ZE( strokeS* , pstt1w ) ;
            {
        {
        TN( tNew , "" ) ;
        TN( tOld8 , "" ) ;
        TN( tOld7 , "" ) ;
        if( !( -- cToDo % 0x10 ) ) etThread.strokeF( tinP , tcr8cr+TF2(cToDo,flFORMAT_UNSIGNED|flFORMAT_NObIGITvALUES) ) ;
        if( ether ) break ;
    {
    FORsTRINGSiN1( pstt1Map )
    countT cToDo = cMap ;
    ZE( countT , cDoneAll ) ;

    etThread.delF( tinP , postDef ) ;
    TN( tDef , postDef ) ;
    etThread.boxGetShadowF( tinP , postDef , costDef , psttc3 ) ; ___( postDef ) ;
    ZE( countT   , costDef ) ;
    ZE( osTextT* , postDef ) ;
     
    }   
        etThread.delF( tinP , psttp2 ) ;
        etThread.delF( tinP , psttp1 ) ;
        etThread.strokeF( tinP , TF2(cFiles--,flFORMAT_UNSIGNED|flFORMAT_NObIGITvALUES)+tb+T(psttp2)+tcr ) ;
        etThread.strBisectF( tinP , psttp1 , psttp2 , psttc3 , tSlash , - 1 ) ; ___( psttp1 ) ; ___( psttp2 ) ;
        ZE( strokeS* , psttp2 ) ;
        ZE( strokeS* , psttp1 ) ;
    {

    if( ether ) break ;
{
FORsTRINGSiN3( pstt1m )
countT cFiles = etThread.boxMenuF( tinP , soul , T("///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/1snip.15*") ) ; ___( pstt1m ) ;
ZE( strokeS* , pstt1m ) ;
etThread.strokeF( tinP , T("building menu\r\n") ) ;

TN( tSlash , "/" ) ;
TN( tb , " " ) ;
TN( tChanged , "" ) ; tChanged = tcr8cr+T("****CHANGED****\r\n") ;
TN( tcr8cr , "\r        \r" ) ;
TN( tcr , "\r\n" ) ;
TN( tDot , "." ) ;
TN( tComma , "," ) ;

}
    etThread.delF( tinP , postMap ) ;
    cMap = etThread.strWordsOldF( tinP , pstt1Map , T(postMap) , sttq , tDelimiters ) ; ___( pstt1Map ) ;
    TN( tDelimiters , "\r\n" ) ;
    
    etThread.boxGetShadowF( tinP , postMap , costMap , T("///d/tmp/tmp/list.map") ) ; ___( postMap ) ;
    ZE( countT   , costMap ) ;
    ZE( osTextT* , postMap ) ;
    
{
strokeS sttq( 0 , sc_IGNOREqUOTES ) ;
ZE( countT , cMap ) ;
ZE( strokeS* , pstt1Map ) ;
etThread.strokeF( tinP , T("building map\r\n") ) ;

TODO

/*1*/WAKEsHOWtEXT( "migrate.idifile.map.makechanges" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

