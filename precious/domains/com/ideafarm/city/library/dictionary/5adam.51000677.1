
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etherC::loafIF( tinP ) ;

etThread.delF( tinP , psttHtml ) ;

etThread.strokeF( tinP , T("[psttHtml]: \"")+T(psttHtml)+T("\"\r\n") ) ;

etThread.delF( tinP , psttBody ) ;
etThread.strReplaceF( tinP ,  psttHtml , psttBody , T("\r\n\r\n") , T("\r\n<p>\r\n") ) ; ___( psttHtml ) ;
ZE( strokeS* , psttHtml ) ;

etThread.strTrimF( tinP , psttBody ) ; ___( psttBody ) ;

etThread.strGetMimeBodyF( tinP , psttBody , tIn ) ;
ZE( strokeS* , psttBody ) ;

etThread.delF( tinP , psttv ) ;
etThread.strokeF( tinP , tKey+T(": \"")+T(psttv)+T("\"\r\n") ) ;
etThread.delF( tinP , psttHead ) ;
etThread.strSubstringMimeHeaderF( tinP , psttv , psttHead , tKey ) ; ___( psttv ) ;
tKey = T("content-type") ;

etThread.delF( tinP , psttv ) ;
etThread.strokeF( tinP , tKey+T(": \"")+T(psttv)+T("\"\r\n") ) ;
etThread.strSubstringMimeHeaderF( tinP , psttv , psttHead , tKey ) ; ___( psttv ) ;
tKey = T("subject") ;

etThread.delF( tinP , psttv ) ;
etThread.strokeF( tinP , tKey+T(": \"")+T(psttv)+T("\"\r\n") ) ;
etThread.strSubstringMimeHeaderF( tinP , psttv , psttHead , tKey ) ; ___( psttv ) ;
tKey = T("bcc") ;

etThread.delF( tinP , psttv ) ;
etThread.strokeF( tinP , tKey+T(": \"")+T(psttv)+T("\"\r\n") ) ;
etThread.strSubstringMimeHeaderF( tinP , psttv , psttHead , tKey ) ; ___( psttv ) ;
tKey = T("cc") ;

etThread.delF( tinP , psttv ) ;
etThread.strokeF( tinP , tKey+T(": \"")+T(psttv)+T("\"\r\n") ) ;
etThread.strSubstringMimeHeaderF( tinP , psttv , psttHead , tKey ) ; ___( psttv ) ;
tKey = T("to") ;

etThread.delF( tinP , psttv ) ;
etThread.strokeF( tinP , tKey+T(": \"")+T(psttv)+T("\"\r\n") ) ;
etThread.strSubstringMimeHeaderF( tinP , psttv , psttHead , tKey ) ; ___( psttv ) ;
tKey = T("from") ;

etThread.delF( tinP , psttv ) ;
etThread.strokeF( tinP , tKey+T(": \"")+T(psttv)+T("\"\r\n") ) ;
etThread.strSubstringMimeHeaderF( tinP , psttv , psttHead , tKey ) ; ___( psttv ) ;
tKey = T("date") ;

TN( tKey , "" ) ;
ZE( strokeS* , psttv ) ;

//etThread.strokeF( tinP , T("[psttHead]: \"")+T(psttHead)+T("\"\r\n") ) ;
etThread.strGetMimeHeaderF( tinP , psttHead , tIn ) ; ___( psttHead ) ;
ZE( strokeS* , psttHead ) ;

etThread.delF( tinP , posti ) ;
TN( tIn , posti ) ;
etThread.boxGetShadowF( tinP , posti , costi , T("///d/tmp/test/sample.eml") ) ; ___( posti ) ;
ZE( countT   , costi ) ;
ZE( osTextT* , posti ) ;

TODO

/*1*/WAKEsHOWtEXT( "example.other.3func.360020e3.etherC.strSubstringMimeHeaderF" )/*1*/

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

