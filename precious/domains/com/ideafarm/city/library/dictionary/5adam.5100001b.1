
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


//VISIBLE

REST
etThread.osProcessIdPhaseAdamF( tinP , ifcIDpHASEhANDOFFoLD_SHUTTINGdOWN ) ;

HEAReNTER( ether )
etThread.strokeF( tinP , T("press the enter key\r\n") ) ;

}
    etThread.delF( tinP , psttDay ) ;
    etThread.strokeF( tinP , T(psttDay)+T("\r\n") ) ;
    etThread.strFromF( tinP , psttDay , time2 , flFORMAT_UNSIGNED | flFORMAT_FILLzE , 8 ) ; ___( psttDay ) ;
    ZE( strokeS* , psttDay ) ;
    }
        sock.readF( tinP , (byteT*)&time2 , sizeof time2 , cTries ? 0 : flSOCKETcrEAD_CONVERTbYTEoRDER ) ;
        sock.readF( tinP , (byteT*)&time1 , sizeof time1 , cTries ? 0 : flSOCKETcrEAD_CONVERTbYTEoRDER ) ;
        else                                                    sock.connectF( tinP , ifcPORToLD1tIMEaUTHORITY , etThread.sockNicNameF( tinP , T("1.1.1.2"                 ) ) ) ;
        if( !( F(etThread.flagsMode) & flTHIRDmODE_TESTaUTO ) ) sock.connectF( tinP , ifcPORToLD1tIMEaUTHORITY , etThread.sockNicNameF( tinP , T("city.center.ideafarm.com") ) ) ;
        socketC sock( tinP , ether , TAG( TAGiDnULL ) ) ;
    {
    ZE( sCountT , time2 ) ;
    ZE( countT , time1 ) ;
{
while( cTries -- )
countT cTries = 2 ;

TODO

/*1*/WAKEhIDE( "example.simplest.snip.001000f.flSOCKETcrEAD_CONVERTbYTEoRDER" )/*1*/
/**/
*/
\<A HREF=\"5.a100104.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

