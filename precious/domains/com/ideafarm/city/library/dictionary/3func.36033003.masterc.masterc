
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    upDn.dnF( tinP ) ;
linkedC::checkIF( tinP ) ; //U:: TO FIND A BUG
    }
linkedC::checkIF( tinP ) ; //U:: TO FIND A BUG
        ether.delF( tinP , pbSoul ) ;
linkedC::checkIF( tinP ) ; //U:: TO FIND A BUG
        else         ctInspectF( tinP ) ;
        if( pbSoul ) ctF( tinP , pbSoul , cNameInspectP ) ;
linkedC::checkIF( tinP ) ; //U:: TO FIND A BUG

        //}
        //    if( POOP ) POOPR
        //    }
        //        THREADmODE1rESTORE
        //        tinP.pEtScratch->boxGetF( tinP , pbSoul , cbSoul , psttFileSoul , 1 ) ;
        //        THREADmODE1oN( flTHREADmODE1_ALLOWsTOPwHILEgRABBING )
        //        ZE( countT , cbSoul ) ;
        //    {
        //    if( !bIgnoreSoulFileP )
        //    SCOOPS
        //{
        //THIS WAS BROKEN WHEN MIGRATING FILE NAMES TO NEW FORMAT, AND I DECIDED TO ELIMINATE TO CONFORM WITH "NO REDUNDANT STATE"
        ZE( byteT* , pbSoul ) ;
linkedC::checkIF( tinP ) ; //U:: TO FIND A BUG

        ether.strMakeF( tinP , psttFileSoul , T(FILEnAMEsOUL_masterC) ) ; ___( psttFileSoul ) ;

        tinP.pAdamGlobal1->_masterC_.pMePrime = this ;
linkedC::checkIF( tinP ) ; //U:: TO FIND A BUG
    {
    if( !tinP.pAdamGlobal1->_masterC_.pMePrime )

    b_bHost_grabbed = 1 ;
linkedC::checkIF( tinP ) ; //U:: TO FIND A BUG
    bHost.grabF( tinP , TAGoR( TAGiDnULL , idLineCt , idiFileCt , pbBitsCtP ) ) ; // ASSUME UNGRABBED BY DT
linkedC::checkIF( tinP ) ; //U:: TO FIND A BUG

    else            thirdC::c_memsetIF( tinP , (byteT*)pbBitsCt , sizeof pbBitsCt ) ;
    if( pbBitsCtP ) thirdC::c_memcpyIF( tinP , (byteT*)pbBitsCt , (byteT*)pbBitsCtP , sizeof pbBitsCt ) ;
linkedC::checkIF( tinP ) ; //U:: TO FIND A BUG

    }
        if( POOP ) return ;
    {
    IFbEcAREFUL
    scoopC scoop( tinP , ether ) ;
linkedC::checkIF( tinP ) ; //U:: TO FIND A BUG
{
idiFileCt( idiFileCtP )
idLineCt( idLineCtP ) ,
swc3( tinP , etherP , TAGoR( TAGiDnULL , idLineCtP , idiFileCtP , pbBitsCtP ) , flSTACKc_FIFO , cLever ) ,
cLever( 0 ) ,
b_cLever( tinP , TAGoR( TAGiDnULL , idLineCtP , idiFileCtP , pbBitsCtP ) , 0 , ifcIDgRABlAYER_7BASEmISC1 , flBATONc_NOTjEALOUS | flBATONc_SHARElAYER ) ,
idCopyHW( 0 ) ,
psttFileSoul( 0 ) ,
b_bHost_grabbed( 0 ) ,
bHost( tinP , TAGoR( TAGiDnULL , idLineCtP , idiFileCtP , pbBitsCtP ) , T("masterC") , ifcIDgRABlAYER_7BASEmISC1 , flBATONc_NOTjEALOUS | flBATONc_SHARElAYER ) , // A HOST BATON WITH THE SAME NAME IS ALSO USED BY masterC
ether( etherP ) ,
upDn( tinP , TAGoR( TAGiDnULL , idLineCt , idiFileCt , pbBitsCtP ) , IDFILE , etherP ) ,
/*1*/masterC::masterC( tinS& tinP , etherC& etherP , const countT idLineCtP , const countT idiFileCtP , const byteT* const pbBitsCtP , const countT cNameInspectP , const boolT bIgnoreSoulFileP )/*1*/ :

/**/
*/
\<A HREF=\"5.1490003.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

