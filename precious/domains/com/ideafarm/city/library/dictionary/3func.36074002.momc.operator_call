
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return code ;
    _OUT_

    }
        deltaOverflowFix = 0 ;
        for( countT off = 0 ; off < offEnd ; off ++ ) pcCursor[ off ] -= deltaOverflowFix ;
        countT offEnd = sizeof pcCursor / sizeof pcCursor[ 0 ] ;
    {
    if( deltaOverflowFix )
    rememberF( tinP , bP ) ;

    if( !code ) code = (count01T)( 0xff00 + bP ) ;

    }
        }
            pbFrame = ppbFrame[ stFrame - idFrameNew + idFrame ] ;
            idFrame = 1 + off / CBfRAMEsPOUSE ;
        {
        if( !( off % CBfRAMEsPOUSE ) )

        if( off == offLooped ) break ;

        if( ++ off == offNew ) off = offMin ;

        }
            break ;
            if( ++ off > offNew ) off = offMin ;
            code = (count01T)( offNew - off ) ;
        {
        if( pbFrame[ off % CBfRAMEsPOUSE ] == bP )
    {
    while( off < offNew )

    byteT* pbFrame = ppbFrame[ stFrame - idFrameNew + idFrame ] ;
    countT idFrame = 1 + off / CBfRAMEsPOUSE ; //N1
    const countT offLooped = off ; //N1
    if( off < offMin ) off = offMin ;
    countT& off = pcCursor[ bP ] ; //N1
    const countT offMin = ( idFrameMin - 1 ) * CBfRAMEsPOUSE ; //N1
    const countT idFrameMin = idFrameNew <= CfRAMESsPOUSE ? 1 : 1 + idFrameNew - CfRAMESsPOUSE ; //N1
    const countT idFrameNew = 1 + offNew / CBfRAMEsPOUSE ; //N1
    ZE( count01T , code ) ;
    _INoLD_

    }
        if( *pEther ) return 0 ;
    {
    IFbEcAREFUL    
{
/*1*/count01T momC::operator ()( tinS& tinP , const byteT bP )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

