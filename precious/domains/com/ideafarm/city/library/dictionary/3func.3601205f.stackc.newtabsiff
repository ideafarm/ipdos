
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return bMade ;
    _OUTbATONsTACKc_

    //validateF( tinP ) ; //U::REMOVE THIS WHEN CONFIDENT; THIS IS EXPENSIVE

    }
        }
            }
                }
                    }
                        else        pcTabIdSlot[ oTab ] ++ ;
                        if( bDelP ) pcTabIdSlot[ oTab ] -- ;
                        _IO_
                    {
                    if( bFound )
    
                    if( ppTab[ oTab ] == ppc ) bFound = 1 ;
                    _IO_
                {
                for( countT oTab = 0 ; oTab < cTabs ; oTab ++ )
                ZE( boolT , bFound ) ;
                _IO_
            {
            if( ppc )
            while( ppc && !( F(ppc->flags) & flPLATE_TAB ) ) ppc = ppc->ppD ;
            plateS* ppc = ppNewDelP ;
            _IO_
        {
        else if( ppNewDelP )
        }
            }
                }
                    }
                        countT foo = 2 ;
                    {
                    if( third ) //U::TO DEBUG USING wdw
                    __( oTab - cTabs ) ; //OBSERVED 2004.05.26
                    }
                        ppc = ppc->ppD ;
                        ppcLag = ppc ;
                        else ppc->flags &= ~( F(flPLATE_TAB) ) ;
                        }
                            pcTabIdSlot[ oTab ++ ] = idSlot ;
                            ppTab[       oTab    ] = ppc ;
                            ppc->flags |= flPLATE_TAB ;
                            _IO_
                        {
                        if( !( ++ idSlot % cPlatesPerTab ) )
                        _IO_
                    {
                    while( ppc )
                    ZE( countT , idSlot ) ;
                    ZE( plateS* , ppcLag ) ; //U::FOR DEBUGGING
                    plateS* ppc = ppTop ;
                    ZE( countT , oTab ) ;
                    _IO_
                {
                if( ppTab && pcTabIdSlot )
                }
                    third.c_memsetIF( tinP , (byteT*)pcTabIdSlot , cTabs * sizeof( countT ) ) ;
                    _IO_
                {
                }
                    third.c_memsetIF( tinP , (byteT*)ppTab         , cTabs * sizeof( countT ) ) ;
                    _IO_
                {
                }
                    third.newF( tinP , LF , pcTabIdSlot     , cTabs ) ; ___CT( pcTabIdSlot ) ;
                    _IO_
                {
                }
                    third.newF( tinP , LF , *(countT**)&ppTab , cTabs ) ; ___CT( ppTab ) ;
                    _IO_
                {
                _IO_
            {
            if( cTabs )
            third.delF( tinP , pcTabIdSlot ) ;
            third.delF( tinP , *(countT**)&ppTab ) ;
            cTabs = cPlates / cPlatesPerTab ;
            countT cPlatesPerTab = 0x10 ;
            cTabAge = 0 ;
            bMade = 1 ; //EVEN IF I MAKE 0 TABS
            _IO_
        {
        if( !( ( ++ cTabAge ) % 0x10 ) || ( ppNewDelP && F(ppNewDelP->flags) & flPLATE_TAB ) ) // IF ppNewDelP IS MARKED AS A TAB THEN ppNewDelP MUST HAVE JUST BEEN REMOVED (IF ADDED, IT WOULD NOT HAVE THE FLAG YET)
        _IO_
    {
    if( !third && F(flagsState) & flSTACKsTATE_MAINTAINtABS )
    ZE( boolT , bMade ) ;

    //validateF( tinP ) ; //U::REMOVE THIS WHEN CONFIDENT; THIS IS EXPENSIVE

    _INbATONsTACKc_

    }
    {
    IFbEcAREFUL
    SCOOP
{
/*1*/boolT stackC::newTabsIfF( tinS& tinP , plateS* ppNewDelP , const boolT bDelP )/*1*/

// pcTabIdSlot[ ii ] IS THE NUMBER OF PLATES AT OR ABOVE TAB ii, I.E. THE idSlot OF THE TABBED PLATE

/**/
*/
  the plate that has just been added or removed
 ppNewDelP
 tinP
arguments
 call me after the new plate has been added to the chain
i must not be called between the time that newPlateF is called and the time that the new plate is added to the chain
\<A HREF=\"5.1150065.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$newTabsIfF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//

