
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    THREADmODE3rESTORE

    }
        }
            PUSE( tinP , *(byteT**)&pcpIdBookMax ) ;
            PUSE( tinP , *(byteT**)&pcpIdBookMin ) ;
        {
        if( !( F(flagsCt) & flBOOKSc_DOnOTuSEpUSE ) )

        }
            pcpIdBookMin[ 1 ] ++ ;
            BOOKnOW.setF( tinP , bFillP ) ;
            selectBookF( tinP , flBOOKScsELECT_null , pcpIdBookMin ) ;
        {
        if( pcpIdBookMin[ 0 ] == 1 && pcpIdBookMax[ 0 ] == 1 && pcpIdBookMin[ 1 ] <= pcpIdBookMax[ 1 ] ) while( pcpIdBookMin[ 1 ] <= pcpIdBookMax[ 1 ] )
    {
    if( pcpIdBookMin && pcpIdBookMax ) //20210705@0924: ADDED THIS TEST

    if( idStateSpace ) idBookMinMaxF( tinP , pcpIdBookMin , pcpIdBookMax , flBOOKScsELECT_null , 0 ) ;  //20210705@0924: idBookMinMaxF NOW NO LONGER SETS IMPOTENCE IF QUITTING AND NO BOOK EVER FOUND
    ZE( countT* , pcpIdBookMax ) ;
    ZE( countT* , pcpIdBookMin ) ;

    THREADmODE3oN( flTHREADmODE3_POOLaLLOCATEfROMhEAP )

    _IO_

    }
        if( POOP ) return ;
    {
    IFbEcAREFUL
    SCOOP
{
/*1*/voidT booksC::setF( tinS& tinP , const byteT bFillP )/*1*/

/**/
*/
 tinP
arguments
warning: i work iff idStateSpace (if backed by disk)
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

