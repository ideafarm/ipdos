
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etherC::loafIF( tinP ) ;

}
    etThread.delF( tinP , psttw ) ;
    etThread.traceF( tinP , psttw ) ;
    soulWords >> psttw ; ___( psttw ) ;
    ZE( strokeS* , psttw ) ;
{
while( soulWords )

countT cWords = etThread.strWordsF( tinP , soulWords , sIn , sttq , tMarks , flSTRwORDS_DELIMITERS|flSTRwORDS_SPLITaTmARK ) ;
strokeS sttq( 0 , sc_IGNOREqUOTES ) ;
TN( tMarks , "{}" ) ;
soulC soulWords( tinP , TAG( TAGiDnULL ) , flSOUL_null , "soul.words" ) ;

sIn << (strokeS*)T("}") ;

}
    etThread.traceF( tinP , T("loaded  sIn") ) ;
    }
        sIn << ppstti[ ( idDo - 1 ) % 4 ] ;
    {
    for( countT idDo = 1 ; idDo <= 0x10 ; idDo ++ )
    etThread.traceF( tinP , T("loading sIn") ) ;

    strokeS* ppstti[] = { tIn1 , tIn2 , tIn3 , tIn4 } ;

    TN( tIn4 , "" ) ; tIn4 =                                            T("[dddd]") ;
    TN( tIn3 , "" ) ; tIn3 =                                            T("[cccc]") ;
    TN( tIn2 , "" ) ; tIn2 =                                            T("[bbbb]") ;
    TN( tIn1 , "" ) ; tIn1 = T("")+S2(sa_MARKsYSTEMbREAK,sc_MARKsYSTEM)+T("[aaaa]") ;
{

sIn << (strokeS*)T("{") ;
soulC sIn( tinP , TAG( TAGiDnULL ) , flSOUL_null , "soul.scr.in" ) ;

TODO

/*1*/WAKEsHOW( "scr" )/*1*/

//20140915@1840: MOVED FROM SCRATCH 7 TO PERMANENT ADAM ID

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//

