
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


CELL( jobFillCourseF , jobHearOrderF , 0 )

//==== DAYTIME   WORK (ABOVE THIS LINE) ===================================================================================
//==== MOONLIGHT WORK (BELOW THIS LINE) ===================================================================================

}
    if( sNotesTextP && sNotesDataP && idChatSessionP && cArgP ) ;

    }
        }
            __1
            __( sOrderP.cFieldF( tinP ) ) ;
        {
        default :
        }
            break ;
    
            }
                }
                    etThread.strokeF( tinP , T("writing a tray containing the number ")+TF1(idCourseP)+T("\r\n") ) ;
                    sDataP << idCourseP ;
                {
                if( !ether && !*tinP.zEtScratch && !bClientQuit )
                if( idCourseP > 1 ) ether.osSleepF( tinP , TOCK * 0x1 ) ;
            {
            if( !bClientQuit )
        {
        case ifcIDcMDjOBoRDER_NAMED :
    {
    switch( idJobType )

    if( idCourseP == 1 ) sOrderP >> idJobType ;
    PARAMS8( c8argP )

    __( idAdamP - DDNUMB ) ;
    etherC& etText = etherC::etTextIF( tinP ) ;
{
voidT jobFillCourseF( tinS& tinP , etherC& ether , etherC& etThread , soulC& sDataP , soulC& sNotesTextP , soulC& sNotesDataP , const countT idCourseP , const countT idAdamP , const countT idChatSessionP , soulC& sOrderP , countT& cArgP , count8S& c8argP )

}
    if( ether && *tinP.zEtScratch && idChatSessionP && cArgP ) ;

    }
        if( ++ bClientQuit == 1 ) etThread.strokeF( tinP , T("client quit\r\n") ) ;
    {
    if( idJobType == ifcIDcMDjOBoRDER_NAMED )
    etThread.strokeF( tinP , T("heard an order with ")+TF1(sOrderP)+T(" elements\r\n") ) ;
    PARAMS8( c8argP )

    __( idAdamP - DDNUMB ) ;
    etherC& etText = etherC::etTextIF( tinP ) ;
{
voidT jobHearOrderF( tinS& tinP , etherC& ether , etherC& etThread , const countT idAdamP , const countT idChatSessionP , soulC& sOrderP , countT& cArgP , count8S& c8argP )

    countT& idJobType   = c8argP.c2 ;
    boolT&  bClientQuit = c8argP.c1 ;                                                                               \
                                                                                                                    \
#define PARAMS8(c8argP)                                                                                             \

/*1*/WAKEhIDE( "doodle.ongoing.job" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

