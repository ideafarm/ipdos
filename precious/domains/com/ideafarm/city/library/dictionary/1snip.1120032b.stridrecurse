
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


    else
    }                                                                                       \
        }                                                                                   \
            delF( tinP , pcNext ) ;                                                         \
            delF( tinP , pcHere ) ;                                                         \
            idFirstP = pcNext[ idP ] ;                                                      \
            id       = pcHere[ idP ] ;                                                      \
            }                                                                               \
                }                                                                           \
                    pcNext[ 1 ] = idf ;                                                     \
                    pcHere[ 1 ] = idMaybe ;                                                 \
                                                                                            \
                    }                                                                       \
                        pcNext[ idi + 1 ] = pcNext[ idi ] ;                                 \
                        pcHere[ idi + 1 ] = pcHere[ idi ] ;                                 \
                    {                                                                       \
                    for( countT idi = idP - 1 ; idi ; idi -- )                              \
                {                                                                           \
                if( idMaybe )                                                               \
                                                                                            \
                countT idMaybe = ( expP ) ;                                                 \
            {                                                                               \
            while( idf )                                                                    \
            countT idf = idFirstP ;                                                         \
                                                                                            \
            memSetF( tinP , (byteT*)pcNext , ( 1 + idP ) * sizeof( countT ) , 0 ) ;         \
            memSetF( tinP , (byteT*)pcHere , ( 1 + idP ) * sizeof( countT ) , 0 ) ;         \
            newF( tinP , LF , pcNext , 1 + idP ) ; ___( pcNext ) ;                          \
            newF( tinP , LF , pcHere , 1 + idP ) ; ___( pcHere ) ;                          \
            ZE( countT* , pcNext ) ;                                                        \
            ZE( countT* , pcHere ) ;                                                        \
                                                                                            \
            idP = - idP ; /*1:LATH OCCURANCE*/                                              \
        {                                                                                   \
        else                                                                                \
        }                                                                                   \
            else      idFirstP = idf ;                                                      \
            if( idP ) id = 0 ;                                                              \
            }                                                                               \
                id = ( expP ) ;                                                             \
            {                                                                               \
            while( idf && idP && idP -- )                                                   \
            countT idf = idFirstP ;                                                         \
        {                                                                                   \
        if( idP > 0 )                                                                       \
    {                                                                                       \
    if( idP != 1 )                                                                          \
    ZE( countT , id ) ;                                                                     \
                                                                                            \
#define STRiDrECURSE(expP)                                                                  \
/*1*//*STRiDrECURSE(expP)*//*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

