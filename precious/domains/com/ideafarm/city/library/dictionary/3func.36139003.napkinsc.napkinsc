
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    _OUT_

    for( countT offDock = 0 ; offDock < cDocks ; offDock ++ ) (*this)[ offDock * cItemsPerNapkin ] ;
    countT cItemsPerNapkin   = 1 << expItemsPerNapkin ;
    countT expItemsPerNapkin = expCbPerNapkinP - expCbPerItemP ;
    //PREALLOCATE TO FILL THE DOCKS (IF ALLOCATION IS GOING TO FAIL, LET'S FIND OUT NOW)

    }
        }
            tinP.pEther->delF( tinP , pstt1f ) ;
            }
                //tinP.pEther->traceF( tinP , T("deleted : ")+T(psttc1) ) ;
                tinP.pEther->diskFileOrDirDeleteF( tinP , psttc1 ) ;
                //tinP.pEther->traceF( tinP , T("deleting: ")+T(psttc1) ) ;
            {
            FORsTRINGSiN1( pstt1f )

            tinP.pcQuit = pcQuitSave ;

            countT cFound = tinP.pEther->diskFindFileOrDirF( tinP , pstt1f , tLike , 0 , 0 , 0 , 8 ) ; ___( pstt1f ) ;
            ZE( strokeS* , pstt1f ) ;

                                       tinP.pcQuit = 0 ;
            const countT* pcQuitSave = tinP.pcQuit ;

            //tinP.pEther->traceF( tinP , T("deleting: ")+tLike ) ;

            TN( tLike , "" ) ; tLike = T(iffn)+T(postName)+T(".*") ;

            ifFileNameC iffn( tinP , *tinP.pEther , postPath ) ;
        {
        if( !POOP )

        __Z( *postPath ) ;
        thirdC::postPathStateSpaceIF( tinP , postPath , sizeof postPath , idStateSpace ) ;
        osTextT postPath[ TUCK << 1 ] ;
    {
    if( F(flagsCt) & flNAPKINSc_PURGEoNcT )

    thirdC::c_strncpyIF( tinP , postName , postP , sizeof postName ) ;

    thirdC::c_memsetIF( tinP , (byteT*)pcDockOffNapkin , sizeof pcDockOffNapkin , - 1 ) ;

    else            thirdC::c_memsetIF( tinP , (byteT*)pbBitsCt , sizeof pbBitsCt ) ;
    if( pbBitsCtP ) thirdC::c_memcpyIF( tinP , (byteT*)pbBitsCt , (byteT*)pbBitsCtP , sizeof pbBitsCt ) ;

    _INoLD_

    SCOOP
{
flagsCt( flagsP )
expCbPerItem( expCbPerItemP ) ,
expCbPerNapkin( expCbPerNapkinP ) ,
idStateSpace( idStateSpaceP ? idStateSpaceP : ifcIDsTATEsPACE_SINGLEaDAM( tinP ) ) ,
offDockNextCt( 0 ) ,
cDocks( sizeof pbDockNapkin / SIZEOF_napkinC ) ,
idiFileCt( idiFileCtP ) ,
idLineCt( idLineCtP ) ,
/*1*/napkinsC::napkinsC( tinS& tinP , const countT idLineCtP , const countT idiFileCtP , const byteT* const pbBitsCtP , const osTextT* const postP , countT expCbPerNapkinP , countT expCbPerItemP , const countT idStateSpaceP , const flagsT flagsP ) :/*1*/

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

