
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

#endif

    }
        etThread.osSleepF( tinP , TOCK ) ;
        etThread.delF( tinP , pbr ) ;
        else                                     etThread.strokeF( tinP , T("no reply received\r\n") ) ;
        if( pbr && cbr == 2 * sizeof( countT ) ) etThread.strokeF( tinP , T("the cell monitor assigned the id value range [")+TF1(pcr[0])+T(",")+TF1(pcr[1])+T("] to me\r\nfor whatever use i have for it\r\n") ) ;
        countT* pcr = (countT*)pbr ;
        thirdC::ifcMonQueryIF( tinP , pbr , cbr , ifcIDtYPEqUERY_SNuNIQUEaLLcELLStHISmONITORmULTIPLE , (byteT*)&cWant , sizeof cWant ) ; ___( pbr ) ;
        ZE( countT , cbr ) ;
        ZE( byteT* , pbr ) ;
        countT cWant = 0x100 ;
        //countT cWant = (countT)( - 1 ) >> 4 ;
    {
    while( !ether && !etThread )

#else

    }
        etThread.delF( tinP , pbr ) ;
        if( pbr && cbr == sizeof( countT ) ) etThread.strokeF( tinP , T("the cell monitor assigned the id value ")+TF1(*(countT*)pbr)+T(" to me\r\nfor whatever use i have for it\r\n") ) ;
        thirdC::ifcMonQueryIF( tinP , pbr , cbr , ifcIDtYPEqUERY_SNuNIQUEaLLcELLStHISmONITOR ) ; ___( pbr ) ;
        ZE( countT , cbr ) ;
        ZE( byteT* , pbr ) ;
    {
    while( !ether && !etThread )

#if defined( NEVERdEFINED )

TODO

/*1*/WAKEhIDE( "example.simplest.func.102015d.thirdC.ifcMonQueryIF" )/*1*/

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

