
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


//VISIBLE

REST
etThread.osProcessIdPhaseAdamF( tinP , ifcIDpHASEhANDOFFoLD_SHUTTINGdOWN ) ;

HEAReNTER( ether )
etThread.strokeF( tinP , T("\r\n\r\npress the enter key") ) ;

}
    }
        }
            etThread.delF( tinP , psttv ) ;
            etThread.strokeF( tinP , T("lever = ")+TF1(lever)+T("  psttv = \"")+T(psttv)+T("\"\r\n") ) ;
        {
        if( psttv )

        sws >> psttv ;
        ZE( strokeS* , psttv ) ;
    {
    while( sws )
{
for( lever = 1 ; lever <= 4 ; lever ++ )

}
    psttv = 0 ; etThread.strMakeF( tinP , LF , psttv , T("four" ) ) ; sws << psttv ;
    psttv = 0 ; etThread.strMakeF( tinP , LF , psttv , T("three") ) ; sws << psttv ;
    psttv = 0 ; etThread.strMakeF( tinP , LF , psttv , T("two"  ) ) ; sws << psttv ;
    psttv = 0 ; etThread.strMakeF( tinP , LF , psttv , T("one"  ) ) ; sws << psttv ;
    ZE( strokeS* , psttv ) ;
{
for( lever = 1 ; lever <= 4 ; lever ++ )

ZE( countT , ids ) ;

switchStackC sws( tinP , ether , TAG( TAGiDnULL ) , flSTACKc_null , lever , flSTACKc_null , ifcSTACKtYPE_PTR_strokeS ) ;
ZE( countT , lever ) ;

TODO

/*1*/WAKEhIDE( "example.simplest.func.1210006.switchStackC.operator_shiftLeft" )/*1*/
/**/
*/
\<A HREF=\"5.6e20104.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

