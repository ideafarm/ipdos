
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    #endif
        BOSnOvALUE( WHATsn , OSsLEEPf( TUCK ) )
    #elif defined( __NT__ )
        BOSpOOP
        BOSS( WHATsn , BOSfAIL , DosSleep( 50 ) )
    #ifdef __OS2__
    sleepC::blammoIfIF( tinP ) ;
{
/*1*/voidT thirdC::dosSleepWinkIF( tinS& tinP )/*1*/

/**/
*/
 the actual arg is 50, since 0 does not appear to work as intended for Windows
this function just calls the operating system's sleep function, specifying a duration of 0
for max speed, this function contains no standard overhead code
arguments
warning: on some operating systems, use of this function can prevent other processes from gaining access to the cpu
this function releases the cpu for use by other threads within the current process
  \<A HREF=\"5.2730104.1.1.0.html\"\>2730104:  WAKEsHOW( "example.simplest.func.102009a.thirdC.dosSleepWinkIF" )\</A\>
 simplest
examples
\<A HREF=\"5.102009a.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$dosSleepWinkIF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

