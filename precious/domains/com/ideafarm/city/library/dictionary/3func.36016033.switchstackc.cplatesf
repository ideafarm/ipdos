
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return cPlates ;
    if( pBaton ) pBaton->ungrabF( tinP ) ;
    if( pStack ) cPlates = *pStack ;
    stackC* pStack = (stackC*)( bTinHasLeverP ? swMe.forIfcThreadF( tinP ) : (countT)swMe ) ;
    ZE( countT , cPlates ) ;
    else if( osTidOwner != tinP.osTid && !bDying && !( F(flagsSwitch) & flSTACKc_ALLOWmULTIPLEuNSERIALIZED ) ) BLAMMO ;
    else if( !osTidOwner ) osTidOwner = tinP.osTid ;
    if( pBaton ) pBaton->grabF( tinP , TAG( TAGiDnULL ) ) ;

    }
        if( third ) return 0 ;
    {
    IFbEcAREFUL
    SCOOP
{
/*1*/countT switchStackC::cPlatesF( tinS& tinP , const boolT bTinHasLeverP )/*1*/

/**/
*/
 when bTinHasLeverP is 0, this is identical to operator countT
like operator countT except this function supports bTinHasLeverP
  \<A HREF=\"5.0330104.1.1.0.html\"\>0330104:  WAKEsHOW( "example.simplest.func.1210035.switchStackC.cPlatesF" )\</A\>
 simplest
examples
\<A HREF=\"5.1210035.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$cPlatesF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//

