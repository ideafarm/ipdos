
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return idToolAssigned ;
    tinP.pAdamGlobal5->frPaper.grab.ungrabF( tinP ) ;

    }
        //ether( tinP , pStka ) ;
        }
            }
                }
                    }
                        break ;
                        idToolAssigned = *tinP.pAdamGlobal1->_paperOldC_.pSwHotKey = idt ;
                        tinP.pAdamGlobal1->_paperOldC_.psttlBody = psttlBodyP ;
                    {
                    if( pAvail[ offt ] )
                    //if( (*pStka)( idt ) )
            
                    if( idt <= ifcIDtYPEtOOL_begin || idt >= ifcIDtYPEtOOL_end ) continue ;
                    countT offt = idt - ifcIDtYPEtOOL_begin - 1 ;
                    countT idt = psttlBodyP[ CSpREFIX - 1 + ids ].idToolF( tinP ) ;
                {
                for( countT ids = 1 ; ids <= csttlBody ; ids ++ )
                countT   csttlBody = psttlBodyP->idAdam ;
            
                }
                    }
                        if( idt && pAvail[ offt ] ) pAvail[ offt ] -- ;                             //DECREMENT RATHER THAN "= 0" IS DONE BECAUSE DECREMENT IS FASTER
                        //if( idt && (*pStka)( idt ) ) pStka->extractF( 0 , tinP , 0 ) ;

                        countT offt = idt - ifcIDtYPEtOOL_begin - 1 ;
                        countT idt = *tinP.pAdamGlobal1->_paperOldC_.pSwHotKey ;
                        tinP.pAdamGlobal1->_paperOldC_.psttlBody = (strokeS*)tinP.pAdamGlobal1->_paperOldC_.pSwHotKey->leverF( tinP , idf ) ;
                    {
                    for( countT idf = 1 ; idf <= cFlavors ; idf ++ )
                    countT cFlavors = tinP.pAdamGlobal1->_paperOldC_.pSwHotKey->cFlavorsF( tinP ) ;
                {
            {
            if( tinP.pAdamGlobal1->_paperOldC_.pSwHotKey )
    
            }
                }
                    }
                        }
                            pAvail[ offt ] ++ ;
                            //pStka->sinkF( tinP , countTC() , idt ) ;
                        {
                        if( !bBigitTool )
                    {
                    else
                    }
                        }
                            pAvail[ offt ] ++ ;                             //INCREMENT RATHER THAN "= 1" IS DONE BECAUSE INCREMENT IS FASTER
                            //pStka->sinkF( tinP , countTC() , idt ) ;
                        {
                        if( bBigitTool )
                    {
                    if( bBigitP )
        
                    }
                        }
                            break ;
                            bBigitTool = 1 ;
                        {
                        case ifcIDtYPEtOOL_U : // fU
                        case ifcIDtYPEtOOL_E : // Ee
                        case ifcIDtYPEtOOL_D : // De
                        case ifcIDtYPEtOOL_C : // Ce
                        case ifcIDtYPEtOOL_B : // Be
                        case ifcIDtYPEtOOL_A : // Ay
                        case ifcIDtYPEtOOL_N : // Ni
                        case ifcIDtYPEtOOL_T : // Ta
                        case ifcIDtYPEtOOL_V : // Ve
                        case ifcIDtYPEtOOL_S : // Se
                        case ifcIDtYPEtOOL_I : // fI
                        case ifcIDtYPEtOOL_F : // Fo
                        case ifcIDtYPEtOOL_R : // Re
                        case ifcIDtYPEtOOL_O : // Oo
                        case ifcIDtYPEtOOL_W : // Wo
                        case ifcIDtYPEtOOL_Z : // Ze
                    {
                    switch( idt )
                    ZE( boolT , bBigitTool ) ;
                {
                else
                if( bBigitP == - 1 ) pAvail[ offt ] ++ ;

                countT offt = idt - ifcIDtYPEtOOL_begin - 1 ;
            {
            for( countT idt = ifcIDtYPEtOOL_end - 1 ; idt > ifcIDtYPEtOOL_begin ; idt -- )
        {
        //if( pStka )
        thirdC::c_memsetIF( tinP , (byteT*)pAvail , sizeof pAvail ) ;
        boolT pAvail[ ifcIDtYPEtOOL_end - ifcIDtYPEtOOL_begin - 1 ] ; //end AND begin ARE EXCLUDED
        //ether( tinP , pStka , TAG( TAGiDnULL ) , flSTACKc_null , ifcSTACKtYPE_countT ) ;
        //ZE( stackC* , pStka ) ; //"a":"available"
    {
    ZE( countT , idToolAssigned ) ;
    tinP.pAdamGlobal5->frPaper.grab.grabF( tinP , TAG( TAGiDnULL ) ) ;
{
/*1*/countT paperOldC::assignHotKeyF( tinS& tinP , strokeS* const psttlBodyP , const boolT bBigitP )/*1*/

//U::KLUDGE: IF bBigitP IS -1 THEN FORGET ABOUT BIGITS AND ASSIGN ANY AVAILABLE KEY

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

