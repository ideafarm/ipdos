
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etherC::loafIF( tinP ) ;
etThread.traceF( tinP , T("ok") ) ;

etThread.diskWalkF( tinP , cDirs , cFiles , T("///d/archive/") , bQuit , diskWalkFooCBF , 0 , 0 , 0 ) ;
ZE( boolT , bQuit ) ;
ZE( countT , cFiles ) ;
ZE( countT , cDirs ) ;

TODO


}
    return bDoIt ;

    }
        PUSE( tinP , *(byteT**)&psttOldLower ) ;
        }
            PUSE( tinP , *(byteT**)&psttShortNew ) ;
            PUSE( tinP , *(byteT**)&psttShortOld ) ;
            PUSE( tinP , *(byteT**)&psttPath ) ;

            }
                tinP.pEther->diskWalkCopyFileF( tinP , tNew , tOld , 0 ) ;
                etherC::etRockIF( tinP ).traceF( tinP , T("copying to: ")+tNew ) ;
            {
            if( !tinP.pEther->diskFileExistsF( tinP , tNew ) )

            TN( tNew , "" ) ; tNew = T(psttPath)+T(psttShortNew) ;

            tinP.pEther->strReplaceF( tinP , psttShortNew , psttShortOld , T(".data.") , T(".meta.raw.") , 0 , flSTRrEPLACE_null ) ;
            ZE( strokeS* , psttShortNew ) ;

            tinP.pEther->strBisectF( tinP , psttPath , psttShortOld , tOld , T("/") , -1 , flSTRbISECT_APPENDdELIMITER , 0 ) ;  ___( psttPath ) ; ___( psttShortOld ) ;
            ZE( strokeS* , psttShortOld ) ;
            ZE( strokeS* , psttPath ) ;
        {
        )
            tinP.pEther->strIdF( tinP , T(".data.ico") , psttOldLower )
            tinP.pEther->strIdF( tinP , T(".data.bmp") , psttOldLower )                     ||
            tinP.pEther->strIdF( tinP , T(".data.png") , psttOldLower )                     ||
            tinP.pEther->strIdF( tinP , T(".data.jpg") , psttOldLower )                     ||
        (
        if

        tinP.pEther->strConvertToLowerCaseF( tinP , psttOldLower , tOld ) ; ___( psttOldLower ) ;
        ZE( strokeS* , psttOldLower ) ;

        TN( tOld , ifName ) ;
        ifFileNameC ifName( tinP , *tinP.pEther , postNameP ) ;
    {
    if( postNameP[ thirdC::c_strlenIF( tinP , postNameP ) - 1 ] != '\\' && tinP.pEther ) // IF NOT A DIRECTORY
    ZE( boolT , bDoIt ) ;
    _IO_
{
/*1*/boolT diskWalkFooCBF( tinS& tinP , countT& cDirsP , countT& cFilesP , boolT& bQuitP , const osTextT* const postNameP , countT* const pcArgP , const countT* const pModuloFilesP , const countT* const pModuloDirsP )/*1*/


/*1*/WAKEsHOWtEXT( "tool.archive.create.meta.raw.files" )/*1*/
/**/
*/
run this periodically before adding watermarks so that the raw unmodified image file is preserved
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
