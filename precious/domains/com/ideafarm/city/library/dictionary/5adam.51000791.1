
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//

                            
REST

etherC::loafIF( tinP ) ;
etThread.traceF( tinP , T("ok") ) ;

}
    etThread.delF( tinP , psttFile ) ;
    }
        }
            etThread.delF( tinP , psttShort ) ;
            etThread.delF( tinP , psttnu ) ;
            etThread.strBisectF( tinP , psttnu , psttShort , psttFile , T("/") , - 1 , flSTRbISECT_APPENDdELIMITER ) ; ___( psttnu ) ; ___( psttShort ) ;
            ZE( strokeS* , psttShort ) ;
            ZE( strokeS* , psttnu ) ;
        {

        etThread.traceF( tinP , T("wrote   ")+T(psttc1) ) ;
    {
    FORsTRINGSiN1( psttFile )
    etThread.boxPutUniqueF( tinP , psttFile , tListSubscriptionFileLong , WS( rec ) ) ; ___( psttFile ) ;
    ZE( strokeS* , psttFile ) ;

    }
        TlISTlOAD( tListSubscriptionFileLong , meP.tListFactoryF() , tSuffix ) ;
        TN( tSuffix , "" ) ; tSuffix = T("d/ideafarm.home.101/ephemeral/backed.up.daily/domains/com/ideafarm/wo.o.s.table/subscriptions/subscription.table.live.@1@.")+T(nnPeer)+T(".")+tIdSubscriber+T(".")+tHost ;
    {
    TlIST( tListSubscriptionFileLong ) ;

    nicNameC nnPeer ;
    TN( tHost , "manual" ) ;
{

THREADmODE1oN( flTHREADmODE1_ALLOWsTOPwHILEgRABBING )

rec << (strokeS*)tValueAddressStatus      ; //ADDED IN FORMAT 6
rec << (strokeS*)tValueAddressZip         ; //ADDED IN FORMAT 6
rec << (strokeS*)tValueAddressCountry     ; //ADDED IN FORMAT 6
rec << (strokeS*)tValueAddressCountryCode ; //ADDED IN FORMAT 6
rec << (strokeS*)tValueAddressState       ; //ADDED IN FORMAT 6
rec << (strokeS*)tValueAddressCity        ; //ADDED IN FORMAT 6
rec << (strokeS*)tValueAddressStreet      ; //ADDED IN FORMAT 6
rec << (strokeS*)tValueAddressName        ; //ADDED IN FORMAT 6
rec << (strokeS*)tValueLastName           ; //ADDED IN FORMAT 6
rec << (strokeS*)tValueFirstName          ; //ADDED IN FORMAT 5
rec << (countT)secret                     ; //ADDED IN FORMAT 7
rec << ((countT*)&idSubscriber)[ 1 ]      ; //ADDED IN FORMAT 5
rec << ((countT*)&idSubscriber)[ 0 ]      ; //ADDED IN FORMAT 5
rec << (strokeS*)tValueTransId            ;
rec << (strokeS*)tValueTransType          ;
rec << (strokeS*)tValueRewardBox          ;
rec << (strokeS*)tValueRewardBoxHidden    ;
rec << (strokeS*)tZipUse                  ;
rec << (strokeS*)tValuePaypalPayerEmail   ;
rec << (strokeS*)T(nnPeer)                ;
rec << (strokeS*)tAction                  ;
rec << (countT)timeN2                     ; //ADDED IN FORMAT 5
rec << (countT)timeN1                     ; //ADDED IN FORMAT 5
rec << (countT)7                          ; // IDfORMAT
rec << finger                             ;
soulC rec( tinP , TAG( TAGiDnULL ) ) ;

TN( tZipUse , "" ) ; tZipUse = tValueAddressZip ;

putNegAM( *(countT*)&finger , FINGERnEG_WOtABLEcONFIRMEDeMAIL ) ;
ZE( countT , finger ) ;

nicNameC nnPeer ;
TN( tAction , "register" ) ;

TN( tValueItemNumber                    , "" ) ;
TN( tValueTransId                       , "" ) ;
TN( tValueTransType                     , "" ) ;

TN( tValueRewardBox                     , "" ) ;
TN( tValueRewardBoxHidden               , "" ) ;

TN( tValueIdTest                        , "" ) ;
TN( tValuePaypalCustom                  , "" ) ;
TN( tValuePaypalPaymentStatus           , "" ) ;
TN( tValuePaypalPaymentGross            , "" ) ;
TN( tValuePaypalPaymentFee              , "" ) ;

TN( tValueResidenceCountry              , "USA" ) ;
TN( tValuePaypalProtectionEligibility   , "" ) ;
TN( tValuePaypalPayerStatus             , "" ) ;
TN( tValuePaypalPayerId                 , "" ) ;
TN( tValuePaypalPayerEmail              , "wo@ideafarm.com" ) ;
TN( tValueLastName                      , "Ideafarm" ) ;
TN( tValueFirstName                     , "Wo" ) ;
TN( tValueCharset                       , "" ) ;
TN( tValueAddressZip                    , "94042" ) ;
TN( tValueAddressStreet                 , "211 Hope Street #276" ) ;
TN( tValueAddressStatus                 , "" ) ;
TN( tValueAddressState                  , "CA" ) ;
TN( tValueAddressName                   , "Wo Of Ideafarm" ) ;
TN( tValueAddressCountryCode            , "USA" ) ;
TN( tValueAddressCountry                , "United States of America" ) ;
TN( tValueAddressCity                   , "Mountain View" ) ;

etThread.osTimeNowF( tinP , timeN1 , timeN2 ) ;
ZE( sCountT , timeN2 ) ;
ZE( countT , timeN1 ) ;

etThread.traceF( tinP , T("secret:    ")+tSecret       ) ;
etThread.traceF( tinP , T("ID:        ")+tIdSubscriber ) ;

TN( tSecret       , "" ) ; tSecret       = TF4((countT)secret      ,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED|flFORMAT_NObASE,0,0x3e) ;
TN( tIdSubscriber , "" ) ; tIdSubscriber = TF4((countT)idSubscriber,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED|flFORMAT_NObASE,0,0x3e) ;

}
    secret = ru ;
    ranUniC ru( tinP , (measure04T)MAXcOUNTT + 1 ) ;
{
ZE( countT , secret ) ;

count04T idSubscriber = etThread.etherDispenseSerialNumberF( tinP , T("////factory3/d/ideafarm.home.102/ephemeral/backed.up.daily/domains/com/ideafarm/wo.o.s.table/idSubscriberLath") ) ;

TODO

/*1*/WAKEsHOWtEXT( "tool.register.table.subscriber.1" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//
