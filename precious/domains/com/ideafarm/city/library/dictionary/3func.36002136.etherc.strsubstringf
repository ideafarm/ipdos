
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    _OUT_
    }
        else           { strSubstringF( tinP , psttP , idfSave , ccBig  , psttBigP , csttExtraP ) ; ___( psttP ) ; }
        else if( idd ) { strSubstringF( tinP , psttP , idfSave , idLathI , psttBigP , csttExtraP ) ; ___( psttP ) ; }
             if( idd && idd == idfSave ) { strMakeF( tinP , psttP , T("") , csttExtraP ) ; ___( psttP ) ; }

        countT idLathI = idd - 1 ;_WQ
        countT idd = strIdF( tinP , idFirstP , sttQuoteP , st_psttSmallP , idSlotP , psttBigP , bAnyP ? flSTRiD_ANY : flSTRiD_null ) ;_WQ
        countT idfSave = idFirstP ;_WQ
    {
    else
    }
        idFirstP = 0 ;_WQ
        POSTPONEtEST( psttP ) ;_WQ
        strMakeF( tinP , psttP , T("") ) ; //CALLER MUST TAG
    {
    if( ccBig < idFirstP )
    countT ccBig = psttBigP->idAdam ;_WQ
    _INoLD_

    }
        if( POOP ) return ;
        __( psttBigP->idCaste   != sc_PREFIXlENGTH ) ;_WQ
        if( POOP ) return ;
        __Z( idFirstP ) ;_WQ
        __Z( st_psttSmallP ) ;_WQ
        __( st_psttSmallP.idTypeF( tinP ) - ifcSTACKtYPE_PTR_strokeS ) ;_WQ
        __Z( psttBigP ) ;_WQ
        __NZ( psttP ) ;_WQ
        if( POOP ) return ;
    {
    IFbEcAREFUL
    SCOOP
{
/*1*/voidT etherC::strSubstringF( tinS& tinP , strokeS*& psttP , countT& idFirstP , strokeS& sttQuoteP , stackC& st_psttSmallP , countT& idSlotP , const strokeS* psttBigP , const boolT bAnyP , const countT csttExtraP )/*1*/
/**/
*/
 csttExtraP
  if 1 then i look for an occurance of wo of the strokeS values in wo of the substrings in st_psttSmallP
  if 0 then i look for an occurance of wo of the substrings in st_psttSmallP
  can be 0 or nonze
 bAnyP
 psttBigP
  will be set to the id of the plate in st_psttSmallP that matched
  must be 0
 idSlotP
  for best speed, be sure that the most frequently encountered strings are at the top of this stackC object
  should normally push values into it with psttOldC temporary objects
  should normally be a fifo stack
  must contain at least wo plate
  idType must be ifcSTACKtYPE_PTR_strokeS
 st_psttSmallP
 sttQuoteP
  if there aren't enough strokes in psttBigP, psttP will receive T("") and impotence will not occur
 idFirstP
 psttP
arguments
to test whether a delimiter is found, test idSlotP nonze
if th delimiter is at the end of the string, idFirstP will be set to 0
if no delimiter is found, idFirstP will be set to 0
idFirstP will be set to point to the stroke after the delimiter string
\<A HREF=\"5.1030177.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$strSubstringF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

