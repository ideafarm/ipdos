
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    if( tinP.fingerprint ) ;

    }
        }
            break ;
            }
                }
                    break ;
                    PUSE( tinP , *(byteT**)&psttl ) ;
                    }
                        slP >> *pSoul ;
                        pSoul->removeAllF( tinP ) ;
                    {
                    if( pSoul )

                    else         { POPUP( T("WARNING: Word \"")+T(psttl)+T("\" is being redefined in lexC object \"")+T(postName)+T("\".  This might not be supported in the future.  It is bad code style.") ) ; }
                    if( !pSoul ) pSoul = new( 0 , tinP , LF ) soulC( tinP , TAG( TAGiDnULL ) ) ;
                    soulC*& pSoul = *(soulC**)&(countT&)swDef ;

                    slP >> psttl ; ___( psttl ) ;
                    psttl = 0 ;
                {
                case IDcMDwORD_DEFINE :
            {
            switch( idCmd )
            slP >> idCmd ;
            ZE( countT , idCmd ) ;
        {
        case ifcIDcMDbASE_CMDsPECIFIED :
        }
            break ;
            PUSE( tinP , *(byteT**)&psttw ) ;

            slP << bFound ;
            }
                bFound = 1 ;
                slP.playF( tinP , slDef ) ;
                psttl = 0 ;
                soulC& slDef = *(soulC*)(countT)swDef ;
                psttl = psttw ;
            {
            else if( swDef.idSlotOfLeverF( tinP , (countT)psttw ) )
            }
                POPUP( T(postName)+T(": \"?\" received.") ) ;
            {
            if( !ether.strCompareF( tinP , psttw , T("?") ) )
            ZE( boolT , bFound ) ;

            slP >> psttw ; ___( psttw ) ;
            ZE( strokeS* , psttw ) ;
        {
        case ifcIDcMDbASE_CMDdEFAULT :
        }
            break ;
            slP.flags = save ;
            slP << (baseSoilXxxxC*)this ;
            slP.flags &= ~( F(flSOUL_LIVE) ) ;
            flagsT save = slP.flags ;
        {
        case ifcIDcMDbASE_REFERENCE :
        }
            break ;
        {
        case ifcIDcMDbASE_TOCK :
        }
            break ;
        {
        case ifcIDcMDbASE_TICK :
        }
            break ;
            slP << (strokeS*)T(postName) ;
        {
        case ifcIDcMDbASE_INSTANCEnAME :
        }
            break ;
            slP << (strokeS*)T(tinP.pAdamGlobal1->_lexC_.postOldClassName) ;
        {
        case ifcIDcMDbASE_CLASSnAME :
    {
    switch( idCmdBase )
    slP >> idCmdBase ;
    ZE( countT , idCmdBase ) ;

    }
        if( pMeI != (baseSoilXxxxC*)this ) { BLAMMO ; }
        slP >> pMeI ;
        ZE( baseSoilXxxxC* , pMeI ) ;
    {
{
/*1*/voidT lexC::operator ()( tinS& tinP , soulC& slP )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//

