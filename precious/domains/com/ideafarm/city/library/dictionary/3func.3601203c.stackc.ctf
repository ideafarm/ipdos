
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    _OUTbATONsTACKc_
    __Z( idType ) ;

    }
        new( 0 , tinP , (byteT*)pXray , sizeof( xrayC ) ) xrayC( tinP , F(flags) & flSTACKc_FIFO ? flXRAY_FIFO : flXRAY_null , sizeof( plateS ) + cbData ) ;
        third.newF( tinP , LF , *(byteT**)&pXray , sizeof( xrayC ) ) ; ___CT( pXray ) ;
    {
    if( F(flags) & flSTACKc_XRAY )

    if( F(flags) & ( flSTACKc_GIVEsIGNnEWpLATE | flSTACKc_GIVEsIGNdELpLATE ) ) { pSgnEvent = new( 0 , tinP , LF ) signC( tinP , TAG( TAGiDnULL ) ) ; ___CT( pSgnEvent ) ; }

    if( pSoulP ) operator <<( *pSoulP ) ;

    }
        third.c_memsetIF( tinP , pbnu , cbData ) ;
        third.newF( tinP , LF , pbnu , cbData ) ; ___CT( pbnu ) ;
    {
    if( cbData ) //U::PROVIDE A pbnu FOR THE CASE OF VARYING LENGTH BLOBS

    }
        pSw_idLathRef = new( 0 , tinP , LF ) switchC( tinP , third , TAGoR( TAGiDnULL , idLineCt , idiFileCt , pbBitsCt ) , flagsSwitch , *pLeverLathRef ) ; ___CT( pSw_idLathRef ) ;
        pSw_ppLathRef = new( 0 , tinP , LF ) switchC( tinP , third , TAGoR( TAGiDnULL , idLineCt , idiFileCt , pbBitsCt ) , flagsSwitch , *pLeverLathRef ) ; ___CT( pSw_ppLathRef ) ;
        pSw_idCursor  = new( 0 , tinP , LF ) switchC( tinP , third , TAGoR( TAGiDnULL , idLineCt , idiFileCt , pbBitsCt ) , flagsSwitch , *pLeverLathRef ) ; ___CT( pSw_idCursor  ) ;
        pSw_ppCursor  = new( 0 , tinP , LF ) switchC( tinP , third , TAGoR( TAGiDnULL , idLineCt , idiFileCt , pbBitsCt ) , flagsSwitch , *pLeverLathRef ) ; ___CT( pSw_ppCursor  ) ;

        if( F(flags) & flSTACKc_ALLOWmULTIPLEuNSERIALIZED ) flagsSwitch |= flSTACKc_ALLOWmULTIPLEuNSERIALIZED ;
        if( F(flags) & flSTACKc_DOnOTsERIALIZE            ) flagsSwitch |= flSTACKc_DOnOTsERIALIZE ;
        flagsT flagsSwitch = flSTACKc_null ;
    {
    if( pLeverLathRef )

    __( !pBaton && !( F(flags) & flSTACKc_DOnOTsERIALIZE ) ) ;
    __( F(flags) & flSTACKc_COPY && !idType ) ;

    _INbATONsTACKc_

    { countT cbs = sizeof( count2S ) ; __( cbs != 2 * sizeof( countT ) ) ; }
    { countT cbs = sizeof( count3S ) ; __( cbs != 3 * sizeof( countT ) ) ; }
    { countT cbs = sizeof( count4S ) ; __( cbs != 4 * sizeof( countT ) ) ; }
    { countT cbs = sizeof( count5S ) ; __( cbs != 5 * sizeof( countT ) ) ; }
    { countT cbs = sizeof( count6S ) ; __( cbs != 6 * sizeof( countT ) ) ; }
    { countT cbs = sizeof( count7S ) ; __( cbs != 7 * sizeof( countT ) ) ; }
    { countT cbs = sizeof( count8S ) ; __( cbs != 8 * sizeof( countT ) ) ; }
    // ALL CONSTRUCTORS MUST DO THIS, TO ENSURE THAT THE DEFAULT subtractF FOR sinkF WORKS PROPERLY
    SCOOP
{
/*1*/voidT stackC::ctF( tinS& tinP , soulC* pSoulP )/*1*/

/**/
*/
note that pSgnEvent is not given when i load from pSoulP
\<A HREF=\"5.115003f.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$ctF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

