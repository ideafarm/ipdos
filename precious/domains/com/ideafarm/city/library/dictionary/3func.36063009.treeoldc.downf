
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return cDads ;
    grab.ungrabF( tinP ) ;
    }
        }
            cDads = 1 ;
            hugKidF( tinP , pCursor ) ;
            pCursor = pCursor->pbrDad ;
        {
        else if( pCursor->pbrDad )
        }
            }
                else cDads = 1 ;
                }
                    cDads = *pCursor->pbrDad->pbrDad->pSwsKids ;
                    SET_psttLeverKids( pCursor->pbrDad->pbrDad )
                {
                if( pCursor->pbrDad->pbrDad )
            {
            if( pCursor->pbrDad )
        {
        if( bQueryP )
    {
    if( pCursor )
    ZE( countT , cDads ) ;
    PcURSOR
    *sw_pCursor.pLeverLathRefF( tinP ) = cLeverCursor ;
    grab.grabF( tinP , TAG( TAGiDnULL ) ) ;
{
/*1*/countT treeOldC::downF( tinS& tinP , const boolT bQueryP )/*1*/

/**/
*/
  if 1 then pCursor is not updated and i evaluate to the number of uncles (including dad) that pCursor has
  if 0 then pCursor is updated if possible and i evaluate to 1 if pCursor changed or to 0 if pCursor did not change
 bQueryP
 tinP
arguments
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

