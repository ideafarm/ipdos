
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


;
}
    FRIENDS_etherC
/**/

 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360021e3.etherc.tracepooltalliesf!||
 voidT tracePoolTalliesF( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360021e1.etherc.snapwordsf!||
 countT snapWordsF( tinS& tinP , countT*& pcWordP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360021e0.etherc.snapwordf!||
 countT snapWordF( tinS& tinP , countT*& pcWordP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360021d0.etherC.traceF!||
 voidT traceF( tinS& tinP , const strokeS* const psttP = 0 , const flagsT flagsP = flTRACE_null , const countT idDivertP = 0 ) ;

 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34005.etherC.operator_assign!||
 voidT operator =( const countT rcP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34004.etherC.operator_thirdC_ref!||
 operator thirdC&( voidT ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34128.etherC.operator_tinS_ref!||
 operator tinS&( voidT ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3418a.etherC.operator_const_poopC_ref!||
 operator const poopC&( voidT ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34003.etherC.operator_countT_ref!||
 operator const countT&( voidT ) ;
/* expressions */

 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34188.etherC.cioMakeKeyF!||
 voidT cioMakeKeyF( tinS& tinP , countT*& pczNameP , const countT idTypeP , const countT idSubTypeP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34187.etherC.cioGetSecretF!||
 voidT cioGetSecretF( tinS& tinP , soulC*& psSecretP , soulC& sGiftP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34185.etherC.cioKeyF!||
 voidT cioKeyF( tinS& tinP , countT*& pczNameP , const countT idTypeP , const countT idSubTypeP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34189.etherC.cioStrokeConsoleF!||
 voidT cioStrokeConsoleF( tinS& tinP , const boolT& bQuitP , const strokeS* const psttP , const countT* pczChannelSuffixP = 0 , soulC* const psToP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34186.etherC.cioPutSecretF!||
 voidT cioPutSecretF( tinS& tinP , const boolT& bQuitP , soulC& sSecretP , soulC& sToP , const countT* pczChannelSuffixP , const countT* pczPinP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34183.etherC.cioPutF!||
 voidT cioPutF( tinS& tinP , const boolT& bQuitP , const countT* const pczChannelP , soulC& sGiftP , soulC* const psToP = 0 , soulC* const psToMediatorP = 0 , const flagsT flagsP = flCIOpUT_null ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34182.etherC.cioSetArgF!||
 voidT cioSetArgF( tinS& tinP , countT& cArgP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34181.etherC.cioSetGetF!||
 voidT cioSetGetF( tinS& tinP , cioGetFT pCioGetFP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3417f.etherC.cioSetQuitF!||
 voidT cioSetQuitF( tinS& tinP , boolT& bQuitP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34180.etherC.cioSetupF!||
 voidT cioSetupF( tinS& tinP ) ;
 /* channel input/output */

 countT tallyF( tinS& tinP , const count01T* const pcP , const countT ccP , const countT minP = 0xff00 , const countT maxP = MAXcOUNT01T ) ;
 /* marriage model security */

 public :
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34197.etherC.GETfROMrECYCLER5_switchStackC!||
 voidT operator ()( tinS& tinP , switchStackC*& pObjectP , const countT idLineP , const countT idiFileP , const byteT* const pbBitsP , const countT idTypeLeverP , const flagsT flagsSwitchP , const countT c_pLeverP , const flagsT flagsStackP , const countT idTypeP , const countT c_pcLeverLathRefP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34193.etherC.GETfROMrECYCLER5_switchC!||
 voidT operator ()( tinS& tinP , switchC*& pObjectP , const countT idLineP , const countT idiFileP , const byteT* const pbBitsP , const countT idTypeLeverP , const flagsT flagsP , const countT c_pLeverP , const countT c_pcLeverLathRefP , const countT cbDataP ) ;
 private :
/* recyclingPrivate */

 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34198.etherC.RETURNtOrECYCLER5_switchStackC!||
 voidT operator ()( tinS& tinP , switchStackC*& pObjectP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3419a.etherC.operator_call!||
 voidT operator ()( tinS& tinP , switchStackC*& pObjectP , const countT idLineP , const countT idiFileP , const byteT* const pbBitsP , const flagsT flagsSwitchP , strokeS*& psttLeverP , const flagsT flagsStackP = flSTACKc_null , const countT idTypeP = 0 , countT* const pcLeverLathRefP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34199.etherC.operator_call!||
 voidT operator ()( tinS& tinP , switchStackC*& pObjectP , const countT idLineP , const countT idiFileP , const byteT* const pbBitsP , const flagsT flagsSwitchP , countT& cLeverP , const flagsT flagsStackP = flSTACKc_null , const countT idTypeP = 0 , countT* const pcLeverLathRefP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34194.etherC.RETURNtOrECYCLER5_switchC!||
 voidT operator ()( tinS& tinP , switchC*& pObjectP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34196.etherC.operator_call!||
 voidT operator ()( tinS& tinP , switchC*& pObjectP , const countT idLineP , const countT idiFileP , const byteT* const pbBitsP , const flagsT flagsP , strokeS*& psttLeverP , countT* const pcLeverLathRefP = 0 , const countT cbDataP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34195.etherC.operator_call!||
 voidT operator ()( tinS& tinP , switchC*& pObjectP , const countT idLineP , const countT idiFileP , const byteT* const pbBitsP , const flagsT flagsP , countT& cLeverP , countT* const pcLeverLathRefP = 0 , const countT cbDataP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.1030???.etherC.operator_call!||
 voidT operator ()( tinS& tinP , stackC*& pObjectP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.1030???.etherC.operator_call!||
 voidT operator ()( tinS& tinP , stackC*& pObjectP , const countT idLineP , const countT idiFileP , const byteT* const pbBitsP , const flagsT flagsP = flSTACKc_null , const countT idTypeP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3417b.etherC.operator_call!||
 voidT operator ()( tinS& tinP , soulC*& pSoulP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3417a.etherC.operator_call!||
 voidT operator ()( tinS& tinP , soulC*& pSoulP , const countT idLineP , const countT idiFileP , const byteT* const pbBitsP ) ;
/* recycling */

 //THESE CLASSES HAVE BEEN IN SERVICE FOR 15 YEARS (SINCE APPROX 1995) AND ARE ROCK SOLID AND WERE POLISHED FOR SPEED IN THE LATE 1990'S
 //THE CONTAINER CLASSES (stackC switchC switchStackC) MIGHT CONTAIN LOTS OF ERROR CHECKING AND OTHER OVERHEAD CODE THAT CAN BE ELIMINATED
 //RECYCLING USES A switchStackC ; WHEN POLISHING FOR SPEED, IT WOULD BE BETTER TO MAKE switchStackC FASTER THAN TO USE AN AD HOC SUBSTITUTE FOR switchStackC
 //WARNING: RECYCLING OF switchC IS 4x SLOWER THAN CT/DT ; RECYCLING SHOULD NOT BE USED UNTIL IT IS POLISHED FOR SPEED AND IS PROVEN TO BE FASTER THAN CT/DT FOR ALL RECYCLABLE CLASSES

 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34178.etherC.rangerF!||
 static voidT rangerF( tinS& tinP , stackC& stP , boolT& bQuitP , countT cbGrainP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34177.etherC.rangerF!||
 static boolT rangerF( tinS& tinP , const byteT* const pbAtP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34176.etherC.rangerF!||
 static boolT rangerF( tinS& tinP , const byteT*& pbMinP , const byteT*& pbMaxP , const byteT* const pbAtP ) ;

/**/
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34102.etherC.winSetTitleF!||
 boolT winSetTitleF( tinS& tinP , const strokeS* const psttP , const handleC& hWindowP = handleC( *pTinF() , TAGnOtIN( TAGiDnULL ) , ifcIDtYPEhANDLE_WINDOW ) ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340f8.etherC.winPostMessageAfterNapF!||
 voidT winPostMessageAfterNapF( tinS& tinP , const countT time1P , const handleC& hWindowP , const countT idCmdP , const countT arg1P = 0 , const countT arg2P = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34103.etherC.winAppendTitleF!||
 voidT winAppendTitleF( tinS& tinP , const strokeS* const psttP , const handleC& hWindowP = handleC( *pTinF() , TAGnOtIN( TAGiDnULL ) , ifcIDtYPEhANDLE_WINDOW ) ) ;
/* windows */
/**/

 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360021cf.etherC.sssOrF!||
 boolT sssOrF( tinS& tinP , stackC* const pstMatchP , const flagsT flagsMatchP , const strokeS* const psttSmallP , const strokeS* const psttBigP ,  countT& idsDoP ,  countT& idbDoP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360021ce.etherC.sssAndF!||
 boolT sssAndF( tinS& tinP , stackC* const pstMatchP , const flagsT flagsMatchP , const strokeS* const psttSmallP , const strokeS* const psttBigP ,  countT& idsDoP ,  countT& idbDoP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360021cd.etherC.sssTestF!||
 boolT sssTestF( tinS& tinP , boolT& bDoNotAdvanceBigP , const strokeS* const psttSmallP , const strokeS* const psttBigP , const countT idsDoP , countT& idbDoP , const strokeS* const psttBlackP , const strokeS* const psttPunctuationP ) ;
/* stroke string specifications a.k.a. regular expressions */

 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360021df.etherc.strfilematchf!||
 boolT strFileMatchF( tinS& tinP , const strokeS* const psttLikeP , const strokeS* const psttP ) ;

 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360021ed.etherc.strExpressionLengthMinMaxF!||
 voidT strExpressionLengthMinMaxF( tinS& tinP , countT& csttMinP , countT& csttMaxP , stackC& stFixedSmallP , countT& idsP , const strokeS* const psttRegExpP , const flagsT flagsOptimizeP , const flagsT* pFlagsOverrideP , const countT* pcMinOverrideP , const countT* pcMaxOverrideP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360021f2.etherc.strPatternFromWildcardsStrictF!||
 voidT strPatternFromWildcardsStrictF( tinS& tinP , strokeS*& psttRegExpP , flagsT& flagsOptimizeP , flagsT*& pFlagsOverrideP , countT*& pcMinOverrideP , countT*& pcMaxOverrideP , const strokeS* const psttWildP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360021eb.etherc.strPatternFromWildcardsMicrosoftF!||
 voidT strPatternFromWildcardsMicrosoftF( tinS& tinP , strokeS*& psttRegExpP , flagsT& flagsOptimizeP , flagsT*& pFlagsOverrideP , countT*& pcMinOverrideP , countT*& pcMaxOverrideP , const strokeS* const psttWildP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.350021b5.etherc.strSquishIF!||
 static voidT strSquishIF( tinS& tinP , countT*& pczP , const countT* pczInP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.341b4.etherC.strSquishIF!||
 static voidT strSquishOldIF( tinS& tinP , countT*& pczOutP , const countT* pcP , const countT ccMaxP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.341b2.etherC.strSquishIF!||
 static voidT strSquishIF( tinS& tinP , countT& valueP , const countT* pczP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.341b1.etherC.strSquishIF!||
 static voidT strSquishIF( tinS& tinP , osTextT*& postP , const countT* pcP , const countT ccMaxP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.341b0.etherC.strSquishBitsIF!||
 static voidT strSquishBitsIF( tinS& tinP , byteT*& pbP , const countT* pcP , countT ccP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.341b3.etherC.strStretchIF!||
 static voidT strStretchIF( tinS& tinP , countT*& pczP , const countT* pczPrefixP , const countT* pczInP , const countT cNetP = 0 , const countT* pczSuffixP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.341af.etherC.strStretchIF!||
 static voidT strStretchIF( tinS& tinP , countT*& pczP , const countT* pczPrefixP , const countT valueP , const countT cNetP = 0 , const countT* pczSuffixP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.341ad.etherC.strStretchIF!||
 static voidT strStretchIF( tinS& tinP , countT*& pczP , const countT* pczPrefixP , const byteT* pbP , const countT cNetP = 0 , const countT* pczSuffixP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.341ac.etherC.strStretchBitsIF!||
 static voidT strStretchBitsIF( tinS& tinP , countT*& pczP , const byteT* const pbP , countT cBitsP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.341a6.etherC.strBisectF!||
 countT strBisectF( tinS& tinP , strokeS*& psttPart1P , strokeS*& psttPart2P , const strokeS* const psttBigP , const strokeS* const psttDelimiterP = 0 , const countT idP = 1 , const flagsT flagsP = flSTRbISECT_null , const countT csttExtraP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3419f.etherC.strDumpStrokesIF!||
 static voidT strDumpStrokesIF( tinS& tinP , strokeS*& psttP , const strokeS* const psttInP , const strokeS* const psttDelimiterP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34179.etherC.strDumpIF!||
 static voidT strDumpIF( tinS& tinP , strokeS*& psttP , const byteT* pbP , const countT cbP , const flagsT flagsP = flSTRdUMP_null , const countT bPerLineP = 0 , const countT bPerGroupP = 0 , const byteT bReadableP = 0 , const countT bPerGrouprP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34160.etherC.strIfcLogoF!||
 //voidT strIfcLogoF( tinS& tinP , strokeS*& psttP , const measureT mScaleP = 1 , const countT csttExtraP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34190.etherC.strDecodeF!||
 countT strDecodeF( tinS& tinP , strokeS*& psttP , const byteT* const pbP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34191.etherC.strEncodeF!||
 countT strEncodeF( tinS& tinP , byteT*& pbP , const strokeS* const psttP = 0 , const byteT* const pbeP = 0 , const countT cbHeadP = 0 , const byteT* pbHeadP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340c9.etherC.strEncode_01F!||
 countT strEncode_01F( tinS& tinP , byteT*& pboP , const byteT* const pbiP , const countT cbiP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.341c6.etherC.strWordsF!||
 countT strWordsF( tinS& tinP , soulC& soulOutP , soulC& soulInP , strokeS& sttQuoteP , const strokeS* psttDelimitersP , const flagsT flagsP = flSTRwORDS_null ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.341bd.etherC.strWordsF!||
 countT strWordsF( tinS& tinP , strokeS*& pstt1P , const strokeS* const psttP , strokeS& sttQuoteP , const strokeS* psttDelimitersP = 0 , const flagsT flagsP = flSTRwORDS_null , const countT csttExtraP = 0 , const countT csttPrefixNullsP = 0 , const countT csttSuffixNullsP = 0 , soulC* pSoulP = 0 , grabC* pGrabP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340f3.etherC.strWordsOldF!||
 countT strWordsOldF( tinS& tinP , strokeS*& pstt1P , const strokeS* const psttP , strokeS& sttQuoteP , const strokeS* psttDelimitersP = 0 , const flagsT flagsP = flSTRwORDS_null , const countT csttExtraP = 0 , const countT csttPrefixNullsP = 0 , const countT csttSuffixNullsP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340ad.etherC.strWordF!||
 voidT strWordF( tinS& tinP , strokeS*& psttP , const strokeS* const psttBigP , strokeS& sttQuoteP , const strokeS sttDelimiterP = strokeS() , const sCountT idP = 1 , const countT csttExtraP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34062.etherC.strUrlSchemeF!||
 voidT strUrlSchemeF( tinS& tinP , strokeS*& psttSchemeP , const strokeS* psttUrlP ) ; 
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34061.etherC.strUrlNameF!||
 voidT strUrlNameF( tinS& tinP , strokeS*& psttNameP , const strokeS* psttUrlP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34060.etherC.strUrlDecodeF!||
 voidT strUrlDecodeF( tinS& tinP , strokeS*& psttP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3405f.etherC.strUrlDecodeF!||
 voidT strUrlDecodeF( tinS& tinP , strokeS*& psttOutP , strokeS* psttInP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3405e.etherC.strUniqueF!||
 voidT strUniqueF( tinS& tinP , strokeS*& psttP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34095.etherC.strTrimF!||
 countT strTrimF( tinS& tinP , strokeS*& psttP , const strokeS* const psttOldP = 0 , const strokeS* const psttItemDelimiterP = 0 , const strokeS* const psttDoomedListP = 0 , const strokeS sttNewP = strokeS() ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3416c.etherC.strToFileNameF!||
 voidT strToFileNameF( tinS& tinP , strokeS*& psttP , const strokeS* const psttOldP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340d0.etherC.strToUrlF!||
 voidT strToUrlF( tinS& tinP , strokeS*& psttP , const strokeS* const psttOldP = 0 , const flagsT flagsP = flSTRtOuRL_null ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340a4.etherC.strToHtmlF!||
 voidT strToHtmlF( tinS& tinP , strokeS*& psttP , const strokeS* const psttOldP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3412b.etherC.strToF!||
 countT strToF( tinS& tinP , countT*& pcNameP , const strokeS* const psttNameP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340e3.etherC.strSubstringMimeHeaderF!||
 voidT strSubstringMimeHeaderF( tinS& tinP , strokeS*& psttP , const strokeS* const psttAllP , const strokeS* const psttKeyP , const countT csttExtraP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360021cc.etherC.strGetMimeBodyF!||
 voidT strGetMimeBodyF( tinS& tinP , strokeS*& psttToP , const strokeS* const psttFromP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360021cb.etherC.strGetMimeHeaderF!||
 voidT strGetMimeHeaderF( tinS& tinP , strokeS*& psttToP , const strokeS* const psttFromP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340c1.etherC.strSubstringLineF!||
 voidT strSubstringLineF( tinS& tinP , strokeS*& psttP , countT& idFirstP , strokeS& sttQuoteP , const strokeS* const psttAllP , const sCountT idLineP = 1 , const strokeS* const psttEndP = 0 , const boolT bAnyP = 0 , const countT csttExtraP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340b9.etherC.strSubstringExampleF!||
 voidT strSubstringExampleF( tinS& tinP , strokeS*& psttP , countT& idFirstP , strokeS& sttQuoteP , const strokeS* const psttBigP , const strokeS* const psttTokenP , const strokeS sttOpenP = strokeS() , const strokeS* const psttWhiteP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340a8.etherC.strSubstringDelimitedF!||
 voidT strSubstringDelimitedF( tinS& tinP , strokeS*& psttP , countT& idClassP , countT& idFirstP , strokeS& sttQuoteP , const strokeS* const psttBigP , const countT csttExtraP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34136.etherC.strSubstringF!||
 voidT strSubstringF( tinS& tinP , strokeS*& psttP , countT& idFirstP , strokeS& sttQuoteP , stackC& st_psttSmallP , countT& idSlotP , const strokeS* psttBigP , const boolT bAnyP = 0 , const countT csttExtraP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3405d.etherC.strSubstringF!||
 boolT strSubstringF( tinS& tinP , strokeS*& psttP , countT& idFirstP , strokeS& sttQuoteP , const strokeS* psttSmallP , const strokeS* psttBigP , const boolT bAnyP = 0 , const countT csttExtraP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3405c.etherC.strSubstringF!||
 boolT strSubstringF( tinS& tinP , strokeS*& psttP , countT& idFirstP , strokeS& sttQuoteP , const strokeS& sttSmallP , const strokeS* psttBigP , const countT csttExtraP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3405b.etherC.strSubstringF!||
 voidT strSubstringF( tinS& tinP , strokeS*& psttP , countT& idFirstP , countT& idLastP , const strokeS* psttBigP , const countT csttExtraP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340cc.etherC.strRulerF!||
 voidT strRulerF( tinS& tinP , strokeS*& psttP , const countT csP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34078.etherC.strReverseF!||
 voidT strReverseF( tinS& tinP , strokeS*& psttP , const strokeS* psttOldP = 0 , const strokeS* const psttDelimiterP = 0 , soulC* pSoulP = 0 , grabC* pGrabP = 0 , const countT csttExtraP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.341c5.etherC.strPourF!||
 voidT strPourF( tinS& tinP , soulC& soulToP , soulC& soulFromP , const flagsT flagsP = flSTRpOURf_null ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34035.etherC.strResizeF!||
 voidT strResizeF( tinS& tinP , strokeS*& psttP , const countT csP , strokeS sttP = strokeS() , const boolT fLeadingP = 0 , const countT csttExtraP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340b4.etherC.strReplaceAutomaticallyF!||
 voidT strReplaceAutomaticallyF( tinS& tinP , strokeS*& psttP , const strokeS* const psttOldP = 0 , const countT idClassP = 0 , const countT csttExtraP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34079.etherC.strReplaceAnyF!||
 countT strReplaceAnyF( tinS& tinP , strokeS*& psttNewBigP , const strokeS* psttOldBigP , const strokeS* const psttOldSmallP , const strokeS* const psttNewSmallP , const countT csttExtraP = 0 , const flagsT flagsP = flSTRrEPLACE_null ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340e7.etherC.strCleanF!||
 voidT strCleanF( tinS& tinP , strokeS* const psttP , strokeS sttP = S1C('.') , const countT idTypeKeepP = ifcIDtYPEsTROKEcLEAN_CnAMES ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34133.etherC.strReplaceF!||
 countT strReplaceF( tinS& tinP , strokeS*& psttNewBigP , const strokeS* const psttOldBigP , const countT idTypeP , const countT csttExtraP = 0 , const flagsT flagsP = flSTRrEPLACE_null ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3401c8.etherC.strReplaceF!||
 countT strReplaceF( tinS& tinP , soulC& soulP , const strokeS* const psttOldSmallP , const strokeS* const psttNewSmallP , const flagsT flagsP = flSTRrEPLACE_null ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34076.etherC.strReplaceF!||
 countT strReplaceF( tinS& tinP , strokeS*& psttNewBigP , const strokeS* psttOldBigP , const strokeS* const psttOldSmallP , const strokeS* const psttNewSmallP , const countT csttExtraP = 0 , const flagsT flagsP = flSTRrEPLACE_null ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340b3.etherC.strRemoveBlankLinesF!||
 voidT strRemoveBlankLinesF( tinS& tinP , strokeS*& psttP , const strokeS* const psttOldP = 0 , const strokeS* const psttItemDelimiterP = 0 , const strokeS* const psttDoomedListP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3418e.etherC.strMakeF!||
 voidT strMakeF( tinS& tinP , strokeS*& psttOutP , const strokeS sttInP , const countT csttExtraP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3405a.etherC.strMakeF!||
 voidT strMakeF( tinS& tinP , strokeS*& psttOutP , const strokeS* const psttInP = 0 , const countT csttExtraP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340eb.etherC.strMakeF!||
 countT strMakeF( tinS& tinP , unTextT*& puntP , const strokeS* const psttP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34059.etherC.strMakeF!||
 countT strMakeF( tinS& tinP , osTextT*& postP , const strokeS* const psttP , const countT costExtraP = 0 , const flagsT flagsP = flSTRmAKE_null , const countT cbPrefixExtraP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.341b8.etherC.strMakeF!||
 countT strMakeF( tinS& tinP , pbRefC*& prP , const strokeS* const psttP , const countT costExtraP = 0 , const flagsT flagsP = flSTRmAKE_null ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34058.etherC.strMakeFromOsTextF!||
 voidT strMakeFromOsTextF( tinS& tinP , strokeS*& psttP , const osTextT* const postP , const countT costP = 0 , const countT csttExtraP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340c0.etherC.strCLinesF!||
 countT strCLinesF( tinS& tinP , const strokeS* const psttP , const strokeS* const psttEndP = 0 , const boolT bAnyP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34080.etherC.strBodyLengthF!||
 countT strBodyLengthF( tinS& tinP , const countT* pcP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34056.etherC.strBodyLengthF!||
 countT strBodyLengthF( tinS& tinP , const osTextT* postP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34055.etherC.strIsInQuoteF!||
 boolT strIsInQuoteF( tinS& tinP , strokeS& sttQuoteP , const countT idP , const strokeS* const psttP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3410f.etherC.strIsDigitsF!||
 boolT strIsDigitsF( tinS& tinP , const strokeS* const psttP , const countT radixP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.341b7.etherC.strInsertF!||
 voidT strInsertF( tinS& tinP , strokeS*& psttP , const strokeS* const psttMarkP , const strokeS* const psttWhatP , const flagsT flagsP = flSTRiNSERT_null , const countT csttExtraP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340ce.etherC.strInsertF!||
 voidT strInsertF( tinS& tinP , strokeS*& psttP , countT& idFirstP , const strokeS* psttSmallP , const countT csttExtraP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.341c2.etherC.strIndentF!||
 voidT strIndentF( tinS& tinP , strokeS*& psttP , const strokeS* psttOldP , const countT csttP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340a0.etherC.strIndentOldF!||
 voidT strIndentOldF( tinS& tinP , strokeS*& psttP , const countT csttP , const strokeS sttP = strokeS() , const strokeS* const psttOldP = 0 , const strokeS* const psttDelimiterP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360021ec.etherc.strIdLathExpressionF!||
 countT strIdLathExpressionF( tinS& tinP , const strokeS* const psttSmallP , countT idsWothP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340b8.etherC.strIdMatchingF!||
 countT strIdMatchingF( tinS& tinP , countT& idFirstP , strokeS& sttQuoteP , const strokeS* const psttBigP , sCountT idP = 1 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340ae.etherC.strIdAnyF!||
 countT strIdAnyF( tinS& tinP , countT& idFirstP , strokeS& sttQuoteP , const strokeS sttSmallP , const strokeS* psttBigP , sCountT idP = 1 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34054.etherC.strIdAnyF!||
 countT strIdAnyF( tinS& tinP , stackC* const pstMatchP , const flagsT flagsMatchP , countT& idFirstP , strokeS& sttQuoteP , const strokeS* psttSmallP , const strokeS* psttBigP , const countT idLastP = 0 , sCountT idP = 1 , const flagsT flagsP = flSTRiDaNY_null ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3416d.etherC.strTallyF!||
 countT strTallyF( tinS& tinP , const strokeS* const psttSmallP , const strokeS* psttBigP , strokeS& sttQuoteP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360021ee.etherc.strIdOptimizedClosureF!||
 countT strIdOptimizedClosureF( tinS& tinP , stackC* const pstMatchP , const flagsT flagsMatchP , countT& idFirstP , strokeS& sttQuoteP , const patternC& patP , const strokeS* psttBigP , const countT idLastP = 0 , sCountT idP = 1 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360021ea.etherc.strIdOptimizedClosureF!||
 countT strIdOptimizedClosureF( tinS& tinP , stackC* const pstMatchP , const flagsT flagsMatchP , countT& idFirstP , strokeS& sttQuoteP , const strokeS* psttSmallP , const strokeS* psttBigP , const flagsT flagsP = flSTRiDoPTIMIZEDcLOSURE_null , const flagsT* pFlagsOverrideP = 0 , const countT* pcMinOverrideP = 0 , const countT* pcMaxOverrideP = 0 , const countT idLastP = 0 , sCountT idP = 1 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3418f.etherC.strIdF!||
 countT strIdF( tinS& tinP , countT& idFirstP , const countT cSmallP , const countT* pcBigP , const countT ccBigP = 0 , sCountT idP = 1 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34140.etherC.strIdF!||
 countT strIdF( tinS& tinP , const strokeS* const psttSmallP , const strokeS* psttBigP , sCountT idP = 1 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34135.etherC.strIdF!||
 countT strIdF( tinS& tinP , countT& idFirstP , strokeS& sttQuoteP , stackC& st_psttSmallP , countT& idSlotP , const strokeS* psttBigP , const flagsT flagsP = flSTRiD_null , sCountT idP = 1 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34053.etherC.strIdF!||
 countT strIdF( tinS& tinP , stackC* const pstMatchP , const flagsT flagsMatchP , countT& idFirstP , strokeS& sttQuoteP , const strokeS* psttSmallP , const strokeS* psttBigP , const countT idLastP = 0 , sCountT idP = 1 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34052.etherC.strIdF!||
 countT strIdF( tinS& tinP , countT& idFirstP , strokeS& sttQuoteP , const strokeS& sttSmallP , const strokeS* psttBigP , const countT idLastP = 0 , sCountT idP = 1 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34051.etherC.strIdF!||
 countT strIdF( tinS& tinP , const strokeS& sttSmallP , const strokeS* psttBigP , sCountT idP = 1 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34157.etherC.strKTTrimF!||
 countT strKTTrimF( tinS& tinP , strokeS*& psttNewBigP , const strokeS* const psttOldBigP = 0 , const countT cKeepP = 0x10 , const countT csttExtraP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3415c.etherC.strKtHereAddressF!||
 voidT strKtHereAddressF( tinS& tinP , strokeS* const psttP , const countT* const pczP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3415b.etherC.strKtHereAddressF!||
 voidT strKtHereAddressF( tinS& tinP , countT*& pczP , const strokeS* const psttP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3415d.etherC.strGraphF!||
 voidT strGraphF( tinS& tinP , strokeS*& psttP , countT& leverP , batonC& bLeverP , switchStackC& swsXP , switchStackC& swsYP , switchC& swColorP , switchC& swMarkerP , const countT cColP = 0x100 , const countT cRowP = 0x100 , const countT idStyleP = 0 , const flagsT flagsP = flSTRgRAPH_null , const strokeS* const psttNoteP = 0 , const countT* pczLeverIncludeP = 0 , const countT* pczLeverExcludeP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.341c3.etherC.strFuseSeparateF!||
 voidT strFuseSeparateF( tinS& tinP , soulC& soulP , const strokeS* const psttInP , countT csttPrefixNullsP = 0 , countT csttSuffixNullsP = 0 , grabC* pGrabP = 0 , const countT csttExtraP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340a7.etherC.strFuseSeparateF!||
 voidT strFuseSeparateF( tinS& tinP , strokeS*& psttOutP , const strokeS* const psttInP , countT csttPrefixNullsP = 0 , countT csttSuffixNullsP = 0 , soulC* pSoulP = 0 , grabC* pGrabP = 0 , const countT csttExtraP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.341c7.etherC.strFuseF!||
 voidT strFuseF( tinS& tinP , soulC& soulOutP , soulC& soulInP , grabC* pGrabP = 0 , const strokeS sttEscapeP = strokeS() , const strokeS* psttDelimiterPairsP = 0 , const countT csttMaxDelimiterP = 0x10 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.341c4.etherC.strFuseF!||
 voidT strFuseF( tinS& tinP , soulC& soulP , const strokeS* const psttInP , grabC* pGrabP = 0 , const strokeS sttEscapeP = strokeS() , const strokeS* psttDelimiterPairsP = 0 , const countT csttMaxDelimiterP = 0x10 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34050.etherC.strFuseF!||
 voidT strFuseF( tinS& tinP , strokeS*& psttOutP , const strokeS sttInP , const countT csttExtraP = 0 , const boolT fLeadingP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3404f.etherC.strFuseF!||
 voidT strFuseF( tinS& tinP , strokeS*& psttOutP , const strokeS* const psttInP , soulC* pSoulP = 0 , grabC* pGrabP = 0 , const strokeS sttEscapeP = strokeS() , const strokeS* psttDelimiterPairsP = 0 , const countT csttMaxDelimiterP = 0x10 , const countT csttExtraP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360021e4.etherc.strFromIdJotF!||
 voidT strFromIdJotF( tinS& tinP , strokeS*& psttP , const countT idJotP , const countT cbJotStringDecodePrefixP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360021da.etherC.strFromJsonF!||
 voidT strFromJsonF( tinS& tinP , strokeS*& psttP , const strokeS* const psttFromP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340bb.etherC.strFromUrlF!||
 voidT strFromUrlF( tinS& tinP , strokeS*& psttP , const strokeS* const psttOldP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34036.etherC.strFromTimeF!||
 voidT strFromTimeF( tinS& tinP , strokeS*& psttP , countT time1P , sCountT time2P , const countT idFirstP = 0 , const countT idLastP = 0 , const strokeS sttRadixP = S1C('.') , const strokeS* const psttDelimiterP = 0 , const countT idFormatP = ifcIDfORMATtIME_NUMERIC , const flagsT flagsFormatP = flFORMAT_null ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34027.etherC.strFromProcessF!||
 voidT strFromProcessF( tinS& tinP , strokeS*& psttOutP , strokeS*& psttErrorP , const strokeS* const psttExeP , const strokeS* const psttArgsP = 0 , const strokeS* const psttInP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34077.etherC.strFromIdPortNicNameF!||
 voidT strFromIdPortNicNameF( tinS& tinP , strokeS*& psttP , const countT idPortP = 0 , const nicNameC nicNameP = nicNameC() ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34184.etherC.strFromF!||
 voidT strFromF( tinS& tinP , strokeS*& psttP , const idPortTimeC& idptP , const flagsT flFormatP = flFORMAT_null , const countT csP = 0 , const countT radixP = 0 , const strokeS* const psttSeparatorP = 0 , const countT csttExtraP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3410e.etherC.strFromF!||
 voidT strFromF( tinS& tinP , strokeS*& psttP , const byteT* const pbBlobP , const countT cbBlobP , const countT csttExtraP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3410c.etherC.strFromF!||
 voidT strFromF( tinS& tinP , strokeS*& psttP , const nicNameC& nicNameP , const flagsT flagsFormatP = flFORMAT_null , const countT csP = 0 , const countT radixP = 0 , const strokeS* const psttSeparatorP = 0 , const countT csttExtraP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340e8.etherC.strFromF!||
 voidT strFromF( tinS& tinP , strokeS*& psttP , const countT* const pcValueP , const flagsT flagsFormatP = flFORMAT_null , const countT csP = 0 , const countT radixP = 0 , const strokeS* const psttSeparatorP = 0 , const countT csttExtraP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340d4.etherC.strFromF!||
 voidT strFromF( tinS& tinP , strokeS*& psttP , const sCountC& valueP , const flagsT flagsFormatP = flFORMAT_null , const countT csP = 0 , const countT radixP = 0 , const countT csttExtraP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340da.etherC.strFromF!||
 voidT strFromF( tinS& tinP , strokeS*& psttP , const measureT valueP , const flagsT flagsFormatP = flFORMAT_null , const countT csP = 0 , const countT idcPointP = 0 , const countT cPrecisionP = 0 , const countT radixP = 0x10 , const countT csttExtraP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340db.etherC.strFromF!||
 voidT strFromF( tinS& tinP , strokeS*& psttP , const countT valueP , const flagsT flagsFormatP = flFORMAT_null , const countT csP = 0 , const countT radixP = 0x10 , const countT csttExtraP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3404e.etherC.strFromF!||
 voidT strFromF( tinS& tinP , strokeS*& psttP , const sCountT valueP , const flagsT flagsFormatP = flFORMAT_null , const countT csP = 0 , const countT radixP = 0x10 , const countT csttExtraP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340a1.etherC.strEvaluateFormat01F!||
 boolT strEvaluateFormat01F( tinS& tinP , strokeS*& psttP , const countT csttExtraP = 0 , const strokeS* const psttOldP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34029.etherC.strEvaluateF!||
 boolT strEvaluateF( tinS& tinP , strokeS*& psttP , const countT csttExtraP = 0 , const strokeS* const psttOldP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.341a0.etherC.strDigitsToMeasureF!||
 measureT strDigitsToMeasureF( tinS& tinP , const strokeS* const psttP , const countT defaultRadixP = 0 , const boolT bForeignP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340d3.etherC.strDigitsToSCountF!||
 voidT strDigitsToSCountF( tinS& tinP , sCountC& valueP , const strokeS* const psttP , const countT defaultRadixP = 0 , const boolT bForeignP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3404d.etherC.strDigitsToSCountF!||
 sCountT strDigitsToSCountF( tinS& tinP , const strokeS* const psttP , const countT defaultRadixP = 0 , const boolT bForeignP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3410d.etherC.strDigitsToNicNameF!||
 nicNameC strDigitsToNicNameF( tinS& tinP , const strokeS* const psttP , const countT defaultRadixP = 0 , const boolT bForeignP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340cf.etherC.strDeleteF!||
 voidT strDeleteF( tinS& tinP , strokeS* const psttP , const countT idFirstP , const countT idLastP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340e5.etherC.strConvertToUpperCaseF!||
 voidT strConvertToUpperCaseF( tinS& tinP , strokeS*& psttP , const strokeS* const psttFromP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340e2.etherC.strConvertToUpperCaseF!||
 voidT strConvertToUpperCaseF( tinS& tinP , strokeS& sttOutP , const strokeS& sttInP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340e1.etherC.strConvertToUpperCaseF!||
 voidT strConvertToUpperCaseF( tinS& tinP , strokeS* psttP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3419d.etherC.strConvertToOtherCaseF!||
 voidT strConvertToOtherCaseF( tinS& tinP , strokeS*& psttP , const strokeS* const psttFromP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3419c.etherC.strConvertToOtherCaseF!||
 voidT strConvertToOtherCaseF( tinS& tinP , strokeS& sttOutP , const strokeS& sttInP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3419b.etherC.strConvertToOtherCaseF!||
 voidT strConvertToOtherCaseF( tinS& tinP , strokeS* psttP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340e4.etherC.strConvertToLowerCaseF!||
 voidT strConvertToLowerCaseF( tinS& tinP , strokeS*& psttP , const strokeS* const psttFromP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3404c.etherC.strConvertToLowerCaseF!||
 voidT strConvertToLowerCaseF( tinS& tinP , strokeS& sttOutP , const strokeS& sttInP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3404b.etherC.strConvertToLowerCaseF!||
 voidT strConvertToLowerCaseF( tinS& tinP , strokeS* psttP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34142.etherC.strConcatenateF!||
 boolT strConcatenateF( tinS& tinP , strokeS*& psttP , const strokeS* pstt1P = 0 , const strokeS* const psttDelimiterP = 0 , const flagsT flagsP = flSTRcONCATENATE_null , const countT* const pczIdCasteIncludeP = 0 , const countT* const pczIdCasteExcludeP = 0 , const countT csttExtraP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340f9.etherC.strConcatenateF!||
 countT strConcatenateF( tinS& tinP , strokeS*& psttP , stackC& st_psttP , const strokeS* const psttDelimiterP = 0 , const flagsT flagsP = flSTRcONCATENATE_null , const countT* const pczIdCasteIncludeP = 0 , const countT* const pczIdCasteExcludeP = 0 , const countT csttExtraP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360021db.etherC.strCompareEncodedF!||
 sCountT strCompareEncodedF( tinS& tinP , const byteT* const pb1P , const byteT* const pb2P ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3419e.etherC.strCompareF!||
 sCountT strCompareF( tinS& tinP , const strokeS** const ppstt1P , const strokeS** const ppstt2P , const countT cpsMaxP = 0 , const countT csMaxP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340cd.etherC.strCompareF!||
 sCountT strCompareF( tinS& tinP , const countT* const pc1P , const countT* const pc2P , const countT ccP = 0 , const countT ccMaxP = 0 , const countT* const pcFilterP = 0 , const countT ccFilterP = 0 , const boolT bReverseP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3404a.etherC.strCompareF!||
 sCountT strCompareF( tinS& tinP , const strokeS* const pstt1P , const strokeS* const pstt2P , const countT ccMaxP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340f1.etherC.strClockOldF!||
 voidT strClockOldF( tinS& tinP , strokeS*& psttP , const countT time1P , const countT cColP = 0x9 , const countT cRowP = 3 , const countT csttExtraP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340dc.etherC.strClockOldF!||
 voidT strClockOldF( tinS& tinP , strokeS*& psttP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34156.etherC.strClockF!||
 voidT strClockF( tinS& tinP , strokeS*& psttP , countT cP , const countT idColP , const countT idRowP , const countT cColP = 0x100 , const countT cRowP = 0x100 , const countT idStyleP = 1 , const countT idFirstP = 0 , const countT idLastP = 0 , const strokeS* const psttNoteP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340f0.etherC.strCalendarF!||
 voidT strCalendarF( tinS& tinP , strokeS*& psttP , const sCountT time2P , const countT cColP = 0xb , const countT cRowP = 3 , const countT csttIndentP = 0 , const countT csttExtraP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340f5.etherC.strByCasteF!||
 voidT strByCasteF( tinS& tinP , strokeS*& pstt1P , stackC& st_psttP , const flagsT flConcatenateP = flSTRcONCATENATE_null , const countT* const pczIdCasteIncludeP = 0 , const countT* const pczIdCasteExcludeP = 0 , const countT csttExtraP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340f4.etherC.strByCasteF!||
 voidT strByCasteF( tinS& tinP , strokeS*& pstt1P , const strokeS* const psttP , const countT* const pczIdCasteIncludeP = 0 , const countT* const pczIdCasteExcludeP = 0 , const countT csttExtraP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340c2.etherC.strBadCodeLineF!||
 voidT strBadCodeLineF( tinS& tinP , strokeS*& psttP , const strokeS* const psttIdAdamP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340d9.etherC.strAsciiCodeTableF!||
 voidT strAsciiCodeTableF( tinS& tinP , strokeS*& psttP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34034.etherC.strAbridgeF!||
 voidT strAbridgeF( tinS& tinP , strokeS*& psttP , const strokeS* const psttOldP = 0 , const strokeS* const psttDelimiterP = 0 ) ;
/* commands: strings */

 voidT statisticsF( tinS& tinP , measureT& minP , measureT& maxP , measureT& meanP , measureT& medianP , measureT& stdDeviationP , stackC& stXP ) ;
/* statistics */

  //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34174.etherC.spaceF!||
  voidT relayF( tinS& tinP , const boolT& bQuitP , stackC& stRelayOutP , countT*& pcArgP , cioGetFT& cioGetFP , batonC& b_pCioGetFP ) ;
/* space */

  //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3414f.etherC.sockStkQuittersF!||
  static stackC& sockStkQuittersF( tinS& tinP ) ;
  //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34118.etherC.sockStkCatchersF!||
  static stackC& sockStkCatchersF( tinS& tinP ) ;
  //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34101.etherC.sockStkAcceptorsF!||
  static stackC& sockStkAcceptorsF( tinS& tinP ) ;
  //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.341a4.etherC.sockStkIdleTimeoutersF!||
  static stackC& sockStkIdleTimeoutersF( tinS& tinP ) ;
  //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340d8.etherC.sockPsttHostF!||
  voidT sockPsttHostF( tinS& tinP , strokeS*& psttP , const nicNameC nicNameP = nicNameC() ) ;
  //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3411a.etherC.sockNicNameF!||
  voidT sockNicNameF( tinS& tinP , nicNameC*& pNicNameP , countT& cNicNameP , const strokeS* psttP = 0 ) ;
  //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34040.etherC.sockNicNameF!||
  nicNameC sockNicNameF( tinS& tinP , const strokeS* psttP = 0 ) ;
 /* query */

  //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340f6.etherC.sockFtpServerF!||
  voidT sockFtpServerF( tinS& tinP ) ;
 /* serving */

  //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340c8.etherC.sockWriteQuitF!||
  voidT sockWriteQuitF( tinS& tinP , const countT idPortP , const strokeS* const psttHostP ) ;
  //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340c7.etherC.sockWriteQuitF!||
  voidT sockWriteQuitF( tinS& tinP , const countT idPortP , const nicNameC nicNameP = nicNameC() ) ;
  //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34137.etherC.sockWriteF!||
  voidT sockWriteF( tinS& tinP , handleC& handleP , const countT idPortP , const nicNameC nicNameP , soulC& soulP , const countT idModeP = ifcIDmODEsOCKETS_NOTeNCRYPTED ) ;
  //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34116.etherC.sockWriteF!||
  voidT sockWriteF( tinS& tinP , handleC& handleP , const countT idPortP , const nicNameC nicNameP , const byteT* pbP , const countT cbP = 0 , const countT idModeP = ifcIDmODEsOCKETS_NOTeNCRYPTED ) ;
  //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3411e.etherC.sockWriteF!||
  voidT sockWriteF( tinS& tinP , handleC& handleP , soulC& soulP , const countT idModeP = ifcIDmODEsOCKETS_NOTeNCRYPTED ) ;
  //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34047.etherC.sockWriteF!||
  voidT sockWriteF( tinS& tinP , handleC& handleP , const byteT* pbP , const countT cbP = 0 , const countT idModeP = ifcIDmODEsOCKETS_NOTeNCRYPTED ) ;
  //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3411f.etherC.sockReadF!||
  voidT sockReadF( tinS& tinP , soulC& soulP , countT& idPortP , nicNameC& nicNameP , handleC& handleP , const countT time1P = 0 , const sCountT time2P = 0 ) ;
  //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3411d.etherC.sockReadF!||
  voidT sockReadF( tinS& tinP , soulC& soulP , handleC& handleP , const countT time1P = 0 , const sCountT time2P = 0 , const countT idModeP = ifcIDmODEsOCKETS_NOTeNCRYPTED ) ;
  //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34117.etherC.sockReadF!||
  voidT sockReadF( tinS& tinP , byteT*& pbP , countT& cbP , countT& idPortP , nicNameC& nicNameP , handleC& handleP , const countT time1P = 0 , const sCountT time2P = 0 ) ;
  //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34044.etherC.sockReadF!||
  countT sockReadF( tinS& tinP , handleC& handleP , byteT* const pbP , const countT cbP , const flagsT flagsP = flSOCKETcrEAD_null , const countT time1P = 0 , const sCountT time2P = 0 , const countT idModeP = ifcIDmODEsOCKETS_NOTeNCRYPTED ) ;
  //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34043.etherC.sockPeekF!||
  countT sockPeekF( tinS& tinP , handleC& handleP , byteT* pbP , const countT cbP , const flagsT flagsP = flSOCKETcrEAD_null , const countT time1P = 0 , const sCountT time2P = 0 , const countT idModeP = ifcIDmODEsOCKETS_NOTeNCRYPTED ) ;
 /* talking , hearing */

  //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340e6.etherC.sockRelayF!||
  voidT sockRelayF( tinS& tinP , socketC& sOutP , socketC& sInP , batonC* const pBatonOutP = 0 , const countT cbEstimateP = 0 ) ;
  //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3408a.etherC.sockPeerNameF!||
  voidT sockPeerNameF( tinS& tinP , countT& idPortP , nicNameC& nicNameP , const handleC& handleP ) ;
  //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34089.etherC.sockMyNameF!||
  voidT sockMyNameF( tinS& tinP , countT& idPortP , nicNameC& nicNameP , const handleC& handleP ) ;
  //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34041.etherC.sockListenF!||
  voidT sockListenF( tinS& tinP , const handleC& handleP ) ;
  //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3403f.etherC.sockConnectF!||
  voidT sockConnectF( tinS& tinP , handleC& handleP , const countT idPortP , const nicNameC nicNameP = nicNameC() , countT cTriesP = 0 , const countT time1P = 0 , const sCountT time2P = 0 ) ;
  //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34119.etherC.sockAcceptF!||
  voidT sockAcceptF( tinS& tinP , handleC& hClientP , countT& idPortP , nicNameC& nicNameP , const handleC& handleP , boolT& bRefuseP , const handleC* const phContextP = 0 ) ;
 /* connection */

  //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.341a8.etherC.chokeAttackerF!||
  voidT chokeAttackerF( tinS& tinP , handleC& handleP , const countT cbRequestReadP = 0 , const countT cbRequestWriteP = 0 ) ;
  //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3403c.etherC.sockF!||
  voidT sockF( tinS& tinP , handleC& handleP , const boolT idTypeP = 0 , const handleC* const phContextP = 0 ) ;
  //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34045.etherC.socksShutdownF!||
  voidT socksShutdownF( tinS& tinP ) ;
  //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34046.etherC.socksSetupF!||
  voidT socksSetupF( tinS& tinP ) ;
  //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34115.etherC.sockOptionSendNowF!||
  voidT sockOptionSendNowF( tinS& tinP , const handleC& handleP , const boolT bEnableP = 1 ) ;
  //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34114.etherC.sockOptionReuseAddressF!||
  voidT sockOptionReuseAddressF( tinS& tinP , const handleC& handleP , const boolT bAllowP = 1 ) ;
  //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34042.etherC.sockOptionLingerF!||
  voidT sockOptionLingerF( tinS& tinP , const handleC& handleP , const countT cSecondsP = TOCK * 0x10 ) ; //SHOULD BE LOW DEFAULT TIME TO PREVENT DENIAL OF SERVICE VULNERABILITY
  //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34113.etherC.sockOptionBroadcastF!||
  voidT sockOptionBroadcastF( tinS& tinP , const handleC& handleP , const boolT bAllowP = 1 ) ;
  //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3403e.etherC.sockCancelF!||
  voidT sockCancelF( tinS& tinP , const handleC& handleP ) ;
  //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3403d.etherC.sockBindF!||
  countT sockBindF( tinS& tinP , const handleC& handleP , const countT idPortP = 0 , const nicNameC nicNameP = nicNameC() , const countT cTriesP = 0 ) ;
 /* birth , death */

/* commands: sockets */

  //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360021de.etherc.openssl_shutdownf!||
  voidT openSsl_waveByeF( tinS& tinP , const handleC& hWrapperP ) ;
  //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360021f4.etherc.openssl_peekf!||
  countT openSsl_peekF( tinS& tinP , byteT* const pbP , const countT cbP , const handleC& hWrapperP ) ;
  //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360021d8.etherC.openSsl_readF!||
  countT openSsl_readF( tinS& tinP , byteT* const pbP , const countT cbP , const handleC& hWrapperP ) ;
  //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360021d7.etherC.openSsl_writeF!||
  countT openSsl_writeF( tinS& tinP , const handleC& hWrapperP , const byteT* const pbP , const countT cbP = 0 ) ;
  //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360021f3.etherc.openssl_shakehandsasserverf!||
  voidT openSsl_shakeHandsAsServerF( tinS& tinP , const handleC& hWrapperP ) ;
  //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360021d6.etherC.openSsl_shakeHandsAsClientF!||
  voidT openSsl_shakeHandsAsClientF( tinS& tinP , const handleC& hWrapperP ) ;
  //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360021d5.etherC.openSsl_wrapSocketF!||
  voidT openSsl_wrapSocketF( tinS& tinP , const handleC& hWrapperP , const handleC& hSocketP ) ;
  //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360021d4.etherC.openSsl_getWrapperF!||
  voidT openSsl_getWrapperF( tinS& tinP , handleC& handleP , const handleC& hContextP ) ;
  //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360021d3.etherC.openSsl_getContextF!||
  voidT openSsl_getContextF( tinS& tinP , handleC& handleP , const strokeS* const psttPemCertificatesP = 0 , const strokeS* const psttPemPrivateKeyP = 0 ) ;
  //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360021d2.etherC.openSsl_shutdownF!||
  voidT openSsl_shutdownF( tinS& tinP ) ;
  //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360021d1.etherC.openSsl_setupF!||
  voidT openSsl_setupF( tinS& tinP ) ;

/* openssl: foreign encryption */

 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34030.etherC.reportProcessNamePidF!||
 voidT reportProcessNamePidF( tinS& tinP , strokeS*& psttP , strokeS*& psttPrefixP , strokeS*& psttSuffixP , strokeS*& psttUniqueP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34091.etherC.osTimeWatchF!||
 voidT osTimeWatchF( tinS& tinP , countT& time1P , sCountT& time2P , signC& sgnP , boolT& fFireP , countT timeGrainP = TOCK ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360021f6.etherc.osTimeToOldTimeMsF!||
 countT osTimeToOldTimeMsF( tinS& tinP , countT time1P , sCountT time2P = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340f2.etherC.osTimeToOldTimeF!||
 voidT osTimeToOldTimeF( tinS& tinP , countT& msP , countT& ssP , countT& mmP , countT& hhP , countT& dP , countT& mP , sCountT& yP , countT& dowP , const countT time1P , const sCountT time2P = 0 , const flagsT flagsP = flOStIMEtOoLDtIME_null ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34138.etherC.osTimeTestF!||
 boolT osTimeTestF( tinS& tinP , countT& timeA1P , sCountT& timeA2P , const countT timeD1P = 0 , const sCountT timeD2P = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34066.etherC.osTimeSubtractF!||
 voidT osTimeSubtractF( tinS& tinP , countT& timeA1P , sCountT& timeA2P , const countT timeB1P , const sCountT timeB2P = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340c5.etherC.osTimeSetF!||
 voidT osTimeSetF( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.341b6.etherC.osTimeUniqueF!||
 voidT osTimeNowUniqueF( tinS& tinP , countT& timeU1P , sCountT& timeU2P ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3407b.etherC.osTimeNowF!||
 voidT osTimeNowF( tinS& tinP , countT& time1P , sCountT& time2P , boolT fRawP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3408e.etherC.osTimeFromOldTimeF!||
 voidT osTimeFromOldTimeF( tinS& tinP , countT& time1P , sCountT& time2P , sCountT yP = 0 , countT mP = 0 , countT dP = 0 , countT hhP = 0 , countT mmP = 0 , countT ssP = 0 , countT msP = 0 , const flagsT flagsP = flOStIMEfROMoLDtIME_null ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34026.etherC.osTimeAddF!||
 voidT osTimeAddF( tinS& tinP , countT& timeA1P , sCountT& timeA2P , const countT timeB1P , const sCountT timeB2P = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3408c.etherC.osThreadSwitchingOnF!||
 voidT osThreadSwitchingOnF( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3408b.etherC.osThreadSwitchingOffF!||
 voidT osThreadSwitchingOffF( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340c3.etherC.osThreadSwitchingDesireF!||
 countT osThreadSwitchingDesireF( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340a5.etherC.osThreadSwitchingDesireF!||
 countT osThreadSwitchingDesireF( tinS& tinP , const countT idP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34033.etherC.osThreadIdF!||
 countT osThreadIdF( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.341aa.etherC.osThreadAdamF!||
 voidT osThreadAdamF( tinS& tinP , countT idAdamP , const strokeS* const psttArgsP = 0 , const flagsT flagsP = flOStHREADaDAMf_null , signC* const pSgnDoneP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34065.etherC.osThreadF!||
 voidT osThreadF( tinS& tinP , countT& tidP , voidT* const tmFP , signC* const pSgnDoneP = 0 , const flagsT flagsP = flTHREADlAUNCH_null , const countT cbStackP = 0 , const countT c1P = 0 , const countT c2P = 0 , const countT c3P = 0 , const countT c4P = 0 , const countT c5P = 0 , const countT c6P = 0 , const countT c7P = 0 , const countT c8P = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340b6.etherC.osSleepF!||
 voidT osSleepF( tinS& tinP , const countT time1P , const sCountT time2P , const countT timeGrain1P , const sCountT timeGrain2P , const flagsT flagsP = flSLEEP_null ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34064.etherC.osSleepF!||
 voidT osSleepF( tinS& tinP , const countT timeP = TUCK * 16 , const countT timeGrainP = 0 , const flagsT flagsP = flSLEEP_null ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34070.etherC.osSessionF!||
 voidT osSessionF( tinS& tinP , countT& tidP , countT& pidP , const strokeS* const psttExeP , const strokeS* const psttArgsP = 0 , const countT idColP = 0 , const countT idRowP = 0 , const countT cColP = 0 , const countT cRowP = 0 , const flagsT flagsP = flSESSION_null ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34071.etherC.osSessionF!||
 voidT osSessionF( tinS& tinP , countT& tidP , countT& pidP , const countT idAdamP , const strokeS* const psttArgsP = 0 , const countT idColP = 0 , const countT idRowP = 0 , const countT cColP = 0 , const countT cRowP = 0 , const flagsT flagsP = flSESSION_null ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340be.etherC.osSessionF!||
 voidT osSessionF( tinS& tinP , countT& osTidP , countT& osPidP , countT& valueP , countT& idDeathTypeP , const strokeS* const psttExeP , const strokeS* const psttArgsP = 0 , const countT idColP = 0 , const countT idRowP = 0 , const countT cColP = 0 , const countT cRowP = 0 , const flagsT flagsP = flSESSION_null ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340bf.etherC.osSessionF!||
 voidT osSessionF( tinS& tinP , countT& osTidP , countT& osPidP , countT& valueP , countT& idDeathTypeP , const countT idAdamP , const strokeS* const psttArgsP = 0 , const countT idColP = 0 , const countT idRowP = 0 , const countT cColP = 0 , const countT cRowP = 0 , const flagsT flagsP = flSESSION_null ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34098.etherC.osProcessWaitF!||
 voidT osProcessWaitF( tinS& tinP , countT& valueP , countT& idDeathTypeP , countT& pidP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34097.etherC.osProcessKillF!||
 voidT osProcessKillF( tinS& tinP , const countT pidP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34096.etherC.osProcessInterruptF!||
 voidT osProcessInterruptF( tinS& tinP , const countT pidP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34032.etherC.osProcessIdF!||
 countT osProcessIdF( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34094.etherC.osProcessForwardSignalsToMe_onF!||
 voidT osProcessForwardSignalsToMe_onF( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34093.etherC.osProcessForwardSignalsToMe_offF!||
 voidT osProcessForwardSignalsToMe_offF( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34084.etherC.osProcessF!||
 voidT osProcessF( tinS& tinP , countT& tidP , countT& pidP , const strokeS* const psttExeP , const strokeS* const psttArgsP = 0 , const flagsT flagsP = flPROCESShIRE_null , const handleC* phOutP = 0 , const handleC* phErrorP = 0 , const handleC* phInP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340bc.etherC.osProcessF!||
 voidT osProcessF( tinS& tinP , countT& tidP , countT& pidP , const countT idAdamP , const strokeS* const psttArgsP = 0 , const flagsT flagsP = flPROCESShIRE_null , const handleC* phOutP = 0 , const handleC* phErrorP = 0 , const handleC* phInP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34092.etherC.osProcessF!||
 voidT osProcessF( tinS& tinP , countT& osTidP , countT& osPidP , countT& valueP , countT& idDeathTypeP , const strokeS* const psttExeP , const strokeS* const psttArgsP = 0 , const flagsT flagsP = flPROCESShIRE_null , const handleC* phOutP = 0 , const handleC* phErrorP = 0 , const handleC* phInP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340bd.etherC.osProcessF!||
 voidT osProcessF( tinS& tinP , countT& osTidP , countT& osPidP , countT& valueP , countT& idDeathTypeP , const countT idAdamP , const strokeS* const psttArgsP = 0 , const flagsT flagsP = flPROCESShIRE_null , const handleC* phOutP = 0 , const handleC* phErrorP = 0 , const handleC* phInP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3412f.etherC.osMessageBoxF!||
 countT osMessageBoxF( tinS& tinP , const strokeS* const psttP , const strokeS* const psttTitleP = 0 , const flagsT flagsButtonsP = flMESSAGEbOXbUTTON_null , const flagsT flagButtonSelectedP = flMESSAGEbOXbUTTON_null ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34111.etherC.osMakeHoverFileF!||
 voidT osMakeHoverFileF( tinS& tinP , const countT cNameP , const boolT bRawNameP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34134.etherC.osMakeF!||
 voidT osMakeF( tinS& tinP , stackC& stErrorsP , const countT idAdamP , const flagsT flagsP = flMAKE_null ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340af.etherC.osIdF!||
 textC osIdF( tinS& tinP , const boolT bFileP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3412e.etherC.osFireF!||
 voidT osFireF( tinS& tinP , const boolT bDoNotComeBackP = 0 , const nicNameC nicNameP = nicNameC() ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34031.etherC.osEnvironmentVariableF!||
 voidT osEnvironmentVariableF( tinS& tinP , strokeS*& psttValueP , const strokeS* const psttKeyP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34166.etherC.osHttpViewerF!||
 voidT osHttpViewerF( tinS& tinP , strokeS*& psttP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34167.etherC.osHttpViewF!||
 voidT osHttpViewF( tinS& tinP , const strokeS* const psttP , const boolT bAsynchP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340b0.etherC.osEditorF!||
 voidT osEditorF( tinS& tinP , strokeS*& psttP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340b1.etherc.osEditF!||
 voidT osEditF( tinS& tinP , const strokeS* const psttP = 0 , const boolT bAsynchP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3417d.etherC.osDriverParseNameF!||
 voidT osDriverParseNameF( tinS& tinP , countT& idHomeP , countT& idAdamP , countT& idVersionP , const strokeS* const psttP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3412a.etherC.osDriverRemoveOldF!||
 boolT osDriverRemoveOldF( tinS& tinP , const countT idAdamP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34159.etherC.homeOsDriverNameF!||
 voidT homeOsDriverNameF( tinS& tinP , strokeS*& psttP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34130.etherC.osDriverNameFromMasterF!||
 voidT osDriverNameFromMasterF( tinS& tinP , strokeS*& psttP , const countT idAdamP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34129.etherC.osDriverF!||
 voidT osDriverF( tinS& tinP , const countT idAdamP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34153.etherc.osDoNothingLoopF!||
 voidT osDoNothingLoopF( tinS& tinP , countT cToDoP = 0 , const countT msSleepP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340dd.etherc.osDoNothingF!||
 voidT osDoNothingF( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34124.etherC.osClipboardWriteF!||
 voidT osClipboardWriteF( tinS& tinP , const strokeS* const psttP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34123.etherC.osClipboardReadF!||
 voidT osClipboardReadF( tinS& tinP , strokeS*& psttP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34127.etherC.osClipboardLetGoF!||
 voidT osClipboardLetGoF( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34126.etherC.osClipboardGrabF!||
 voidT osClipboardGrabF( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34125.etherC.osClipboardFlavorsF!||
 countT osClipboardFlavorsF( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360021dd.etherC.walkSettingsF!||
 voidT walkSettingsF( tinS& tinP , byteT* pbBufferP , countT cbBufferP , countT& cNestP , ifc2FT pCBFP = 0 , countT* pcArgP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360021dc.etherC.querySettingF!||
 voidT querySettingF( tinS& tinP , strokeS*& psttP , const strokeS* const psttKeyP ) ;
/* commands: operating system */


 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360021e9.etherc.ifcIdCopyF!||
 countT ifcIdCopyF( tinS& tinP , countT cNameP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.341b5.etherC.ifcGetNextSerialNumberF!||
 countT ifcGetNextSerialNumberF( tinS& tinP , const countT* const pczP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.341ae.etherC.ifcGetNextSerialNumberF!||
 countT ifcGetNextSerialNumberF( tinS& tinP , const osTextT* const postP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.341ab.etherC.ifcBitDumpIF!||
 static countT ifcBitDumpIF( tinS& tinP , osTextT* postP , const byteT* pbBitsP , const countT cBitsP , const countT cBitsPerLineP = TUCK , const countT cbGrainP = 1 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.341a7.etherC.ranUniI_IF!||
 static measure04T ranUniI_IF( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.341a2.etherC.ifc_idMemorySpaceI_IF!||
 static countT ifc_idMemorySpaceI_IF( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.341a1.etherC.ifc_ppNapWordI_IF!||
 static napkinC** ifc_ppNapWordI_IF( voidT ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.341a9.etherC.ifc_idAdamI_IF!||
 static countT ifc_idAdamI_IF( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3417e.etherC.ifc_idHomeIdisk_IF!||
 static countT ifc_idHomeIdisk_IF( voidT ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3417c.etherC.ifc_idHomeI_IF!||
 static countT ifc_idHomeI_IF( voidT ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3416b.etherC.ifcCallWhenFiredF!||
 voidT ifcCallWhenFiredF( tinS& tinP , ifcFT pFP = 0 , countT* const pcArgP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34163.etherC.ifcQueryHandlesF!||
 countT ifcQueryHandlesF( tinS& tinP , const strokeS* const psttOldCommentP , const countT cTriesP = 0 , nicNameC nicNameP = nicNameC() ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.341a3.etherC.ifcSayIF!||
 static voidT ifcSayIF( const osTextT* const postBodyP , const flagsT flagsP = flSAY_null , const osTextT* const postNameP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3415f.etherC.ifcRenderingHandlerF!||
 voidT ifcRenderingHandlerF( tinS& tinP , const ifcRenderingHandlerFT pIfcRenderingHandlerFIP = 0 , const countT infoP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3415a.etherC.ifcMonitorQueryOldF!||
 voidT ifcMonitorQueryOldF( tinS& tinP , byteT*& pbP , countT& cbP , const countT idP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3414e.etherC.ifcIsSpammerF!||
 boolT ifcIsSpammerF( tinS& tinP , const nicNameC& nicNameP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3414d.etherC.ifcIsSpammerF!||
 boolT ifcIsSpammerF( tinS& tinP , strokeS*& psttP , const nicNameC& nicNameP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340d2.etherC.ifcPutHostLogEntryF!||
 voidT ifcPutHostLogEntryF( tinS& tinP , const strokeS* const psttP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340d1.etherC.ifcPutHostLogEntryF!||
 voidT ifcPutHostLogEntryF( tinS& tinP , strokeS*& psttReplyP , const strokeS* const psttP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340fe.etherC.ifcPortQueryF!||
 voidT ifcPortQueryF( tinS& tinP , switchStackC& swsIdPortP , countT& leverP , const nicNameC nicNameP = nicNameC() ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340fd.etherC.ifcPortQueryF!||
 voidT ifcPortQueryF( tinS& tinP , stackC& stIdPortP , const nicNameC nicNameP = nicNameC() , const countT idiClassP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34106.etherC.ifcPortNewProcessF!||
 voidT ifcPortNewProcessF( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34108.etherC.ifcPortNewIdMiscF!||
 countT ifcPortNewIdMiscF( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340fb.etherC.ifcPortNewF!||
 countT ifcPortNewF( tinS& tinP , const countT idPortP , const countT idiClassP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340fc.etherC.ifcPortDelF!||
 voidT ifcPortDelF( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340fa.etherC.ifcPortAuthorityF!||
 voidT ifcPortAuthorityF( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340d6.etherC.ifcNicknameFromIdCitizenF!||
 voidT ifcNicknameFromIdCitizenF( tinS& tinP , strokeS*& psttP , const countT idP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34131.etherC.ifcHireF!||
 countT ifcHireF( tinS& tinP , const strokeS* const psttOldCommentP , const countT idAdamP , const strokeS* const psttArgsP = 0 , flagsT flagsP = flHIRE_null , const countT time1LimitP = 0 , const sCountT time2LimitP = 0 , const countT cTriesP = 0 , nicNameC nicNameP = nicNameC() ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34141.etherC.ifcJobF!||
 voidT ifcJobF( tinS& tinP , stackC& stCoursesP , const countT idAdamP , soulC& sOrderPrimaryP , stackC& stOrdersP , const strokeS* const psttOldCommentP , countT cTriesP = 0 , const nicNameC nicNameP = nicNameC() ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340ef.etherC.ifcIdCitizenFromExternalEmailF!||
 countT ifcIdCitizenFromExternalEmailF( tinS& tinP , const strokeS* const psttP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340d7.etherC.ifcExternalEmailFromIdCitizenF!||
 voidT ifcExternalEmailFromIdCitizenF( tinS& tinP , strokeS*& psttP , const countT idP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3412d.etherC.ifcDrivenServerF!||
 voidT ifcDrivenServerF( tinS& tinP , serverInfo1S& info1P , serverInfo2S& info2P ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340c4.etherC.ifcDatumF!||
 voidT ifcDatumF( tinS& tinP , const osTextT* const postFileP , const countT idLineP , const countT cLinesInDefP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34083.etherC.ifcDatumF!||
 voidT ifcDatumF( tinS& tinP , const flagsT flags1P , const flagsT flags2P , countT amountP , const countT* const pcResourceIdP , const strokeS* const psttP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34028.etherC.ifcDatumF!||
 voidT ifcDatumF( tinS& tinP , const flagsT flags1P , const flagsT flags2P , countT amountP , const countT* const pcResourceIdP , const countT idLineP , const voidT* const pbFileP , const byteT* const pbP = 0 , const countT cbP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3407f.etherC.ifcDatumF!||
 voidT ifcDatumF( tinS& tinP , const flagsT flags1P , const flagsT flags2P , countT amountP , const countT* const pcResourceIdP , const byteT* const pbP = 0 , const countT cbP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34057.etherC.ifcRaceIdF!||
 voidT ifcRaceIdF( tinS& tinP , const countT* const pcRaceIdP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3413a.etherC.ifcChatRelayPackageF!||
 voidT ifcChatRelayPackageF( tinS& tinP , soulC& sBigOutP , soulC& sSmallOutP , const countT idAdamP , const strokeS* const psttOldCommentP , const countT cTriesP = 0 , const countT idPortP = 0 , const nicNameC& nicNameP = nicNameC() , const boolT bDirectP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3413f.etherC.ifcChatF!||
 voidT ifcChatF( tinS& tinP , const countT cArgP , const countT idAdamHandlingP , jobFillCourseFT jobFillCourseFP = 0 , jobHearOrderFT jobHearOrderFP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34139.etherC.ifcChatF!||
 voidT ifcChatF( tinS& tinP , const countT cArgP , const countT idAdamHandlingP , chatHandlerFT chatHandlerFP , const countT idPortHintP = 0 , jobFillCourseFT jobFillCourseFP = 0 , jobHearOrderFT jobHearOrderFP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3413d.etherC.ifcCellHostsF!||
 nicNameC ifcCellHostsF( tinS& tinP , const countT idAdamP , countT cTriesP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3413c.etherC.ifcCellHostsF!||
 voidT ifcCellHostsF( tinS& tinP , nicNameC*& pNicNameP , countT& cNicNameP , const countT idAdamP , countT cTriesP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3413b.etherC.ifcCellHostsF!||
 voidT ifcCellHostsF( tinS& tinP , switchStackC& swsNicNameP , countT& idaLeverP , batonC& b_idaLeverP , switchStackC& swsIdAdamP , nicNameC& idhLeverP , batonC& b_idhLeverP , tableC& tblCellsP , tableC& tblHostsP , stackC& stDelete_strokeS_ptrP , stackC& stDelete_nicNameC_ptrP , stackC& stDelete_stackC_ptrP , countT cTriesP = 0 ) ;
/* commands: IdeaFarm (tm) City */

 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3402f.etherC.memSetF!||
 voidT memSetF( tinS& tinP , byteT* const pbP , const countT cbP , const byteT valueP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34110.etherC.memReplaceF!||
 countT memReplaceF( tinS& tinP , byteT* const pbBigP , const countT cbBigP , const byteT* const pbSmallOldP , const byteT* const pbSmallNewP , const countT cbSmallP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3409f.etherC.memOpenSharedF!||
 voidT memOpenSharedF( tinS& tinP , handleC& handleP , flagsT& flagsResultP , const strokeS* const psttP , handleC* phFileP = 0 , const countT cbP = 0 , const countT idHowP = ifcOPENsHAREDmEMORYhOW_nFeO ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3402d.etherC.memOpenF!||
 voidT memOpenF( tinS& tinP , voidT*& pvP , const countT cbP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3402c.etherC.memCopyF!||
 voidT memCopyF( tinS& tinP , byteT* const pbToP , const byteT* const pbFromP , const countT cbP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3402b.etherC.memCompareF!||
 sCountT memCompareF( tinS& tinP , const byteT* const pb1P , const byteT* const pb2P , const countT cbP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3402e.etherC.memCloseF!||
 voidT memCloseF( tinS& tinP , voidT*& pvP ) ;
/* commands: fast local memory */

 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340c6.etherC.fileTimestampsF!||
 voidT fileTimestampsF( tinS& tinP , const strokeS* const psttLikeP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3411c.etherC.fileWriteF!||
 voidT fileWriteF( tinS& tinP , const handleC& handleP , soulC& soulP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34014.etherC.fileWriteF!||
 voidT fileWriteF( tinS& tinP , const handleC& handleP , const byteT* const pbP , const countT cbP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340f7.etherC.fileSetPtrF!||
 voidT fileSetPtrF( tinS& tinP , const handleC& handleP , const flagsT flagsP , count2S& c2P ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3411b.etherC.fileReadF!||
 voidT fileReadF( tinS& tinP , soulC& soulP , const handleC& handleP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34012.etherC.fileReadF!||
 voidT fileReadF( tinS& tinP , byteT* const pbP , countT& cbP , const handleC& handleP , boolT fStillHungryIsOkP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34075.etherC.fileHoseDisconnectF!||
 voidT fileHoseDisconnectF( tinS& tinP , const handleC& handleP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34073.etherC.fileHoseCreateF!||
 voidT fileHoseCreateF( tinS& tinP , handleC& handleP , const strokeS* const psttP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34074.etherC.fileHoseConnectF!||
 voidT fileHoseConnectF( tinS& tinP , const handleC& handleP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34010.etherC.fileOpenF!||
 voidT fileOpenF( tinS& tinP , handleC& handleP , countT& idResultP , const strokeS* const psttP , const countT idAccessP = ifcOPENaCCESS_R , const countT idShareP = ifcOPENsHARE_R , const flagsT flagsDetailsP = flOPENdETAILS_LOCsEQ , const countT idHowP = ifcOPENhOW_nFeO , const flagsT flagsAttributeP = flFILEaTTR_null , const countT cbP = 0 , countT cTriesP = 0 ) ;
/* commands: files */

 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34016.etherC.paperZitsOnF!||
 static voidT paperZitsOnF( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34015.etherC.paperZitsOffF!||
 static voidT paperZitsOffF( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340ee.etherC.paperTitleF!||
 voidT paperTitleF( tinS& tinP , const strokeS* const psttP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3407d.etherC.paperTalkProgressF!||
 voidT paperTalkProgressF( tinS& tinP , batonC& bConsoleP , countT& goalP , countT& atP , countT msSleepP = 200 , strokeS* psttPrefixP = 0 , strokeS* psttSuffixP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3400d.etherC.strokeF!||
 voidT strokeF( tinS& tinP , const strokeS* psttP ) ;
/* commands: faces */

 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360021e7.etherc.emailFactoryReportF!||
 voidT emailFactoryReportF( tinS& tinP , const strokeS* const psttSubjectP , const strokeS* const psttBodyP = 0 ) ;
/* email */

 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34144.etherC.dnsSkipLabelsF!||
 voidT dnsSkipLabelsF( tinS& tinP , const byteT*& pbP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34148.etherC.dnsReplyF!||
 voidT dnsReplyF( tinS& tinP , byteT*& pbP , countT& cbP , const byteT* const pbQueryP , stackC& stsRepliesP , const boolT bAuthoritativeP = 1 , const countT idErrorP = ifcIDeRRORdNS_AOK ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34147.etherC.dnsQueryF!||
 voidT dnsQueryF( tinS& tinP , stackC& stsRepliesP , const strokeS* const psttDomainP , const countT idTypeP = ifcIDtYPEdNSqUERY_ALL , const countT time1P = 0 , const sCountT time2P = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3414b.etherC.dnsQueryF!||
 voidT dnsQueryF( tinS& tinP , byteT*& pbP , countT& cbP , const strokeS* const psttDomainP , const countT idTypeP = ifcIDtYPEdNSqUERY_ALL , const countT time1P = 0 , const sCountT time2P = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34143.etherC.dnsFormatQueryF!||
 voidT dnsFormatQueryF( tinS& tinP , byteT*& pbP , countT& cbP , const strokeS* const psttDomainP , const countT idTypeP = ifcIDtYPEdNSqUERY_A ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3414a.etherC.dnsParseF!||
 voidT dnsParseF( tinS& tinP , byteT*& pbHeaderAndQueriesP , countT& cbHeaderAndQueriesP , stackC& stsQueriesP , stackC& stsRepliesP , const byteT* const pbReplyP , const countT cbReplyP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34146.etherC.dnsNicNamesF!||
 voidT dnsNicNamesF( tinS& tinP , strokeS*& psttServerP , const strokeS* const psttDomainP , const countT idTypeP = ifcIDtYPEdNSqUERY_A ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34145.etherC.dnsNicNamesF!||
 voidT dnsNicNamesF( tinS& tinP , stackC& st_psttServerP , const strokeS* const psttDomainP , const countT idTypeP = ifcIDtYPEdNSqUERY_A ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3414c.etherC.dnsLabelsF!||
 voidT dnsLabelsF( tinS& tinP , strokeS*& psttP , const byteT*& pbP , dnsMsgHeaderS* const pHeaderP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34149.etherC.dnsLabelsF!||
 voidT dnsLabelsF( tinS& tinP , byteT*& pbP , countT& cbP , const strokeS* const psttP , switchC& swOffP , strokeS*& psttLeverP ) ;
/* foreign: domain name system */

 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34025.etherC.dllOpenF!||
 voidT dllOpenF( tinS& tinP , handleC& hDllP , const strokeS* psttP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34024.etherC.dllNameF!||
 voidT dllNameF( tinS& tinP , strokeS*& psttP , const handleC& handleP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3418b.etherC.dllEntryF!||
 voidT dllEntryF( tinS& tinP , sadamCBFT& pSadamCBFP , const handleC& handleP , const strokeS* psttP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34072.etherC.dllEntryF!||
 voidT dllEntryF( tinS& tinP , peekFT& pPeekFP , const handleC& handleP , const strokeS* psttP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34023.etherC.dllEntryF!||
 voidT dllEntryF( tinS& tinP , mainFT& pMainFP , const handleC& handleP , const strokeS* psttP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34022.etherC.dllEntryF!||
 voidT dllEntryF( tinS& tinP , voidT*& pvP , const handleC& handleP , const strokeS* psttP ) ;
/* commands: dynamic load modules */

 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360021e2.etherC.diskRenameToHashF!||
 countT diskRenameToHashF( tinS& tinP , const strokeS* const psttFolderP , const flagsT flagsP = flETHERrENAMEtOhASH_null ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360021d9.etherC.diskFixBadFileNamesF!||
// countT disk FixBadFileNamesF( tinS& tinP , const strokeS* const psttFolderP , const flagsT flagsP = flETHERfIXnAMES_null ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.341c0.etherC.diskWalkRenameForArchivalF!||
 voidT diskWalkRenameForArchivalF( tinS& tinP , countT& cDirsP , countT& cFilesP , const boolT& bQuitP , const strokeS* const psttToP , const strokeS* const psttFromP , diskWalkCopyCBFT pCbfP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.341bf.etherC.diskWalkTimePrefixF!||
 voidT diskWalkTimePrefixF( tinS& tinP , countT& cDirsP , countT& cFilesP , const boolT& bQuitP , const strokeS* const psttFromP , diskWalkCopyCBFT pCbfP = 0 , countT* pcArgP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.341be.etherC.diskWalkGatherF!||
 voidT diskWalkGatherF( tinS& tinP , countT& cDirsP , countT& cFilesP , const boolT& bQuitP , const strokeS* const psttToP , const strokeS* const psttFromP , diskWalkCopyCBFT pCbfP = 0 , countT* pcArgP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.361ca.etherC.diskUnzipF!||
 voidT diskUnzipF( tinS& tinP , const strokeS* const psttToP , const strokeS* const psttFromFileP , const strokeS* const psttFromZipP , const flagsT flagsP = flUNZIP_null ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.341bc.etherC.diskZipF!||
 voidT diskZipF( tinS& tinP , const strokeS* const psttToP , const strokeS* const psttFromP , const flagsT flagsP = flZIP_null ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360021e5.etherC.diskWalkSearchF!||
 voidT diskWalkSearchF( tinS& tinP , countT& cDirsP , countT& cFilesP , const boolT& bQuitP , const strokeS* const psttP , const osTextT* const postFindP , const flagsT flagsP = flDISKwALK_null , diskWalkSearchCBFT pCbfP = 0 , countT* pcArgP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.341bb.etherC.diskWalkCopyF!||
 voidT diskWalkCopyF( tinS& tinP , countT& cDirsP , countT& cFilesP , const boolT& bQuitP , const strokeS* const psttToP , const strokeS* const psttFromP , diskWalkCopyCBFT pCbfP = 0 , countT* pcArgP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.341ba.etherC.diskWalkF!||
 voidT diskWalkF( tinS& tinP , countT& cDirsP , countT& cFilesP , const strokeS* const psttNameP , const boolT& bQuitP , const flagsT flagsP = flDISKwALK_null , diskWalkCBFT pCbfP = 0 , countT* const pcArgP = 0 , countT* pModuloDirsP = 0 , countT* pModuloFilesP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3416e.etherC.diskWaitDirF!||
 boolT diskWaitDirF( tinS& tinP , handleC& handleP , const boolT& bQuitP , const strokeS* const psttDirP , const flagsT flagsP = flWAITdIR_null ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34067.etherC.diskSelectF!||
 voidT diskSelectF( tinS& tinP , const strokeS* const psttDriveNameP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34112.etherC.diskMapFileNameHoverF!||
 voidT diskMapFileNameHoverF( tinS& tinP , strokeS*& psttP , const strokeS* const psttRawP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3401f.etherC.diskMapFileNameF!||
 voidT diskMapFileNameF( tinS& tinP , strokeS*& psttP , const strokeS* const psttRawP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3401e.etherC.diskMakeDirStupidlyF!||
 boolT diskMakeDirStupidlyF( tinS& tinP , const strokeS* const psttP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3401d.etherC.diskMakeDirIfNeededF!||
 boolT diskMakeDirIfNeededF( tinS& tinP , const strokeS* const psttFileNameP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3401c.etherC.diskMakeDirF!||
 boolT diskMakeDirF( tinS& tinP , const strokeS* const psttP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34021.etherC.diskInfoF!||
 voidT diskInfoF( tinS& tinP , infoDiskS*& pInfoDiskP , const strokeS* const psttDriveNameP , const countT cTriesP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34020.etherC.diskIdF!||
 countT diskIdF( tinS& tinP , const strokeS* const psttDriveNameP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34068.etherC.diskHoverF!||
 voidT diskHoverF( tinS& tinP , const strokeS* const psttP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34132.etherC.diskGetHoverF!||
 voidT diskGetHoverF( tinS& tinP , strokeS*& psttP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3401b.etherC.diskFindMostFreeSpaceF!||
 voidT diskFindMostFreeSpaceF( tinS& tinP , strokeS*& psttDiskP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3401a.etherC.diskChooseSiteF!||
 countT diskChooseSiteF( tinS& tinP , strokeS*& psttP , const strokeS* const psttKeyP , const strokeS* const psttLikeP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360021f1.etherc.diskfindfileordirf!||
 countT diskFindFileOrDirF( tinS& tinP , strokeS*& pstt1FoundP , const strokeS* const psttPathP , const patternC* pPatternP = 0 , soulC* pSoulP = 0 , grabC* pGrabP = 0 , const countT csttExtraP = 0 , const countT cMaxP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360021f0.etherc.diskfindfileordirf!||
 voidT diskFindFileOrDirF( tinS& tinP , strokeS*& psttNameP , handleC& handleP , const strokeS* const psttPathP , const patternC* pPatternP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360021ef.etherc.diskfindfileordirf!||
 voidT diskFindFileOrDirF( tinS& tinP , infoFileS*& pInfoFileP , handleC& handleP , const strokeS* const psttPathP , const patternC* pPatternP = 0 , const flagsT flagsP = flDISKfIND_null ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34017.etherC.diskFindFileOrDirOldF!||
 //countT diskFindFileOrDirOldF( tinS& tinP , strokeS*& pstt1FoundP , const strokeS* const psttLikeP , soulC* pSoulP = 0 , grabC* pGrabP = 0 , const countT csttExtraP = 0 , const countT cMaxP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34018.etherC.diskFindFileOrDirOldF!||
 //voidT diskFindFileOrDirOldF( tinS& tinP , strokeS*& psttNameP , handleC& handleP , const strokeS* const psttLikeP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34019.etherC.diskFindFileOrDirOldF!||
 //voidT diskFindFileOrDirOldF( tinS& tinP , infoFileS*& pInfoFileP , handleC& handleP , const strokeS* const psttLikeP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34151.etherC.diskFileSetAttrF!||
 voidT diskFileSetAttrF( tinS& tinP , const strokeS* const psttP , const flagsT flagsP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34013.etherC.diskFileRefreshF!||
 voidT diskFileRefreshF( tinS& tinP , strokeS*& pstt1NotRefreshedP , const strokeS* const pstt1LocalP , const strokeS* const pstt1RemoteP , const strokeS* const pstt1RemotePrefixP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34150.etherC.diskFileQueryAttrF!||
 flagsT diskFileQueryAttrF( tinS& tinP , const strokeS* const psttP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34011.etherC.diskFileQueryF!||
 voidT diskFileQueryF( tinS& tinP , infoFileS*& pInfoFileP , const handleC& handleP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3408d.etherC.diskFilePourF!||
 voidT diskFilePourF( tinS& tinP , const strokeS* const psttHostP , const strokeS* const pstt1RemoteP , const strokeS* const pstt1LocalP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.341a5.etherC.diskMoveFileOrDirUniqueF!||
 voidT diskMoveFileOrDirUniqueF( tinS& tinP , strokeS*& psttNewP , const strokeS* const psttOldP , const countT cTriesP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3400f.etherC.diskMoveFileOrDirF!||
 voidT diskMoveFileOrDirF( tinS& tinP , const strokeS* const psttNewP , const strokeS* const psttOldP , const countT cTriesP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.341c9.etherC.diskWalkCopyFileF!||
 voidT diskWalkCopyFileF( tinS& tinP , const strokeS* const psttNewP , const strokeS* const psttOldP , const countT cTriesP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340b2.etherC.diskFileExistsF!||
 countT diskFileExistsF( tinS& tinP , const strokeS* const psttLikeP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3400e.etherC.diskFileOrDirDeleteF!||
 voidT diskFileOrDirDeleteF( tinS& tinP , const strokeS* const psttP , flagsT flagsP = flFILEoRdIRdELETE_null , countT cTriesP = 0 ) ;
/* commands: disks */

 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3407c.etherC.boxZapF!||
 voidT boxZapF( tinS& tinP , const strokeS* const psttP , const countT cTriesP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3406d.etherC.boxTimeF!||
 voidT boxTimeF( tinS& tinP , countT& time1P , sCountT& time2P , const strokeS* const psttP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340a6.etherC.boxServerF!||
 voidT boxServerF( tinS& tinP , const countT idPortP = 0 , const boolT bTalkP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360021e8.etherc.boxputuniquef!||
 voidT boxPutUniqueF( tinS& tinP , strokeS*& psttP , const strokeS* const psttLikeP , soulC& soulP , countT cOpenTriesP = 0 , const flagsT flagsOpenDetailsP = flOPENdETAILS_null ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3406c.etherC.boxPutUniqueF!||
 voidT boxPutUniqueF( tinS& tinP , strokeS*& psttP , const strokeS* const psttLikeP , const byteT* const pbP , const countT cbP = 0 , countT cOpenTriesP = 0 , const flagsT flagsOpenDetailsP = flOPENdETAILS_null ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340a3.etherC.boxPutHtmlFromKnowledgeTreeBaseF!||
 voidT boxPutHtmlFromKnowledgeTreeBaseF( tinS& tinP , const boolT bOneFileP , const strokeS* const psttLikeLocalP , const strokeS* const psttLikeP , const strokeS* const psttTitleP , const strokeS* const psttOldCopyrightP , const strokeS* const psttFileP , const countT csttExtraP = 0 , countT cOpenTriesP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340a2.etherC.boxPutHtmlF!||
 voidT boxPutHtmlF( tinS& tinP , const boolT bOneFileP , const strokeS* const psttLikeLocalP , const strokeS* const psttLikeP , const strokeS* const psttTitleP , const strokeS* const psttOldCopyrightP , const strokeS* const psttKnowledgeTreeP , countT cOpenTriesP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34088.etherC.boxPutGenerationF!||
 voidT boxPutGenerationF( tinS& tinP , strokeS*& psttP , const strokeS* const psttLikeP , const countT csttEstimateP , const byteT* const pbP , const countT cbP = 0 , countT cOpenTriesP = 0 , const flagsT flagsOpenDetailsP = flOPENdETAILS_null ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34122.etherC.boxPutF!||
 voidT boxPutF( tinS& tinP , const strokeS* const psttP , soulC& soulP , countT cOpenTriesP = 0 , countT time1P = 0 , const sCountT time2P = 0 , const flagsT flagsOpenDetailsP = flOPENdETAILS_null ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34069.etherC.boxPutF!||
 voidT boxPutF( tinS& tinP , const strokeS* const psttP , const byteT* const pbP = 0 , const countT cbP = 0 , countT cOpenTriesP = 0 , countT time1P = 0 , const sCountT time2P = 0 , const flagsT flagsOpenDetailsP = flOPENdETAILS_null , const flagsT flagsPutP = flBOXcpUTf_null ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340b7.etherC.boxPourF!||
 countT boxPourF( tinS& tinP , const strokeS* const psttLikeToP , const strokeS* const psttLikeFromP , const countT csttEstimateP , const countT cMaxP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34082.etherC.boxPourF!||
 countT boxPourF( tinS& tinP , const strokeS* const psttHostP , const strokeS* const psttLikeToP , const strokeS* const psttLikeFromP , const countT csttEstimateP , const countT cMaxP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3407e.etherC.boxMenuIdRangeF!||
 voidT boxMenuIdRangeF( tinS& tinP , countT& idMinP , countT& idMaxP , const strokeS* psttLikeP , const countT csttEstimateP , strokeS sttDelimiterP = strokeS() ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3406e.etherC.boxMenuF!||
 countT boxMenuF( tinS& tinP , soulC& soulP , const strokeS* const psttLikeP , grabC* pGrabP = 0 , const countT cMaxP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3407a.etherC.boxMailGetF!||
 countT boxMailGetF( tinS& tinP , const strokeS* const psttLikeP , const strokeS* const psttBoxIP , const countT csttEstimateP ) ;

 ////||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3409e.etherC.boxGetShadow::20141115@1937::MIGRATE:TO:USE:SETTINGS.BIT.TREE::SettingF!||
 //voidT boxGetShadow::20141115@1937::MIGRATE:TO:USE:SETTINGS.BIT.TREE::SettingF( tinS& tinP , strokeS*& psttP , const strokeS* const psttBoxIP , const strokeS* const psttDefaultP = 0 , const strokeS* const psttOkListP = 0 , const strokeS* const psttDelimiterP = 0 , countT cOpenTriesP = 1 , const flagsT flagsOpenDetailsP = flOPENdETAILS_null ) ;
 //IT IS NOW ILLEGAL FOR ANY CODE TO USE THIS API, WHICH IS OBSOLETED BY THE SETTINGS keyValuePairC CONTAINER

 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340ca.etherC.boxGetShadowGenerationF!||
 voidT boxGetShadowGenerationF( tinS& tinP , byteT*& pbP , countT& cbP , strokeS*& psttP , const strokeS* const psttLikeP , const countT csttEstimateP , const countT ageP = 0 , countT cOpenTriesP = 0 , const flagsT flagsOpenDetailsP = flOPENdETAILS_null ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34121.etherC.boxGetShadowF!||
 voidT boxGetShadowF( tinS& tinP , soulC& soulP , const strokeS* const psttP , countT cOpenTriesP = 0 , countT time1P = 0 , const sCountT time2P = 0 , const flagsT flagsOpenDetailsP = flOPENdETAILS_null ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3406b.etherC.boxGetShadowF!||
 voidT boxGetShadowF( tinS& tinP , byteT*& pbP , countT& cbP , const strokeS* const psttP , countT cOpenTriesP = 0 , countT time1P = 0 , const sCountT time2P = 0 , const flagsT flagsOpenDetailsP = flOPENdETAILS_null , const flagsT flagsP = flBOXcgETf_null , const osTextT* const postBodyP = 0 , countT costBodyP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34087.etherC.boxGetGenerationF!||
 voidT boxGetGenerationF( tinS& tinP , byteT*& pbP , countT& cbP , strokeS*& psttP , const strokeS* const psttLikeP , const countT csttEstimateP , const countT ageP = 0 , countT cOpenTriesP = 0 , const countT cZapTriesP = 0 , const flagsT flagsOpenDetailsP = flOPENdETAILS_null ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34120.etherC.boxGetF!||
 voidT boxGetF( tinS& tinP , soulC& soulP , const strokeS* const psttP , countT cOpenTriesP = 0 , const countT cZapTriesP = 0 , countT time1P = 0 , const sCountT time2P = 0 , const flagsT flagsOpenDetailsP = flOPENdETAILS_null ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3406f.etherC.boxGetF!||
 voidT boxGetF( tinS& tinP , const strokeS* const psttP , countT cOpenTriesP = 0 , const countT cZapTriesP = 0 , countT time1P = 0 , const sCountT time2P = 0 , const flagsT flagsOpenDetailsP = flOPENdETAILS_null ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3406a.etherC.boxGetF!||
 voidT boxGetF( tinS& tinP , byteT*& pbP , countT& cbP , const strokeS* const psttP , countT cOpenTriesP = 0 , const countT cZapTriesP = 0 , countT time1P = 0 , const sCountT time2P = 0 , const flagsT flagsOpenDetailsP = flOPENdETAILS_null ) ;
/* commands: boxes */

 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34008.etherC.beeSong1F!||
 voidT beeSong1F( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340e9.etherC.beeSingDigitsF!||
 voidT beeSingDigitsF( tinS& tinP , const countT cP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34007.etherC.beeHonkF!||
 voidT beeHonkF( tinS& tinP , const countT hzP = 440 , const countT timeP = TUCK * 0x40 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34006.etherC.beeClickF!||
 voidT beeClickF( tinS& tinP , const countT hzP = 1760 * 4 /*4 IS BARELY AUDIBLE AND IS GOOD FOR LIBRARY*/ , const countT timeP = 8 * TUCK ) ;
/* commands: bees */

 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3400c.etherC.batonOpenF!||
 voidT batonOpenF( tinS& tinP , handleC& handleP , boolT& fCreatorP , const strokeS* const psttP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3400b.etherC.batonLetGoF!||
 voidT batonLetGoF( tinS& tinP , const handleC& handleP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3400a.etherC.batonGrabF!||
 voidT batonGrabF( tinS& tinP , const handleC& handleP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34009.etherC.batonCloseF!||
 voidT batonCloseF( tinS& tinP , handleC& handleP ) ;
/* commands: batons */

 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3410b.etherC.NEWdELtYPEeTHER!||
 voidT newF( tinS& tinP , const countT idLineP , const countT idiFileP , nicNameC*& pP , const countT cP = 1 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340a9.etherC.NEWdELtYPEeTHER!||
 voidT newF( tinS& tinP , const countT idLineP , const countT idiFileP , count9S*& pP , const countT cP = 1 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340a9.etherC.NEWdELtYPEeTHER!||
 voidT newF( tinS& tinP , const countT idLineP , const countT idiFileP , count8S*& pP , const countT cP = 1 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340a9.etherC.NEWdELtYPEeTHER!||
 voidT newF( tinS& tinP , const countT idLineP , const countT idiFileP , count7S*& pP , const countT cP = 1 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340a9.etherC.NEWdELtYPEeTHER!||
 voidT newF( tinS& tinP , const countT idLineP , const countT idiFileP , count6S*& pP , const countT cP = 1 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340a9.etherC.NEWdELtYPEeTHER!||
 voidT newF( tinS& tinP , const countT idLineP , const countT idiFileP , count5S*& pP , const countT cP = 1 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340a9.etherC.NEWdELtYPEeTHER!||
 voidT newF( tinS& tinP , const countT idLineP , const countT idiFileP , count4S*& pP , const countT cP = 1 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340a9.etherC.NEWdELtYPEeTHER!||
 voidT newF( tinS& tinP , const countT idLineP , const countT idiFileP , count3S*& pP , const countT cP = 1 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340a9.etherC.NEWdELtYPEeTHER!||
 voidT newF( tinS& tinP , const countT idLineP , const countT idiFileP , count2S*& pP , const countT cP = 1 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3409d.etherC.NEWdELtYPEeTHER!||
 voidT newF( tinS& tinP , const countT idLineP , const countT idiFileP , strokeS*& pP , const countT cP = 1 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340d5.etherC.NEWdELtYPEeTHER!||
 voidT newF( tinS& tinP , const countT idLineP , const countT idiFileP , measureT*& pP , const countT cP = 1 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340aa.etherC.NEWdELtYPEeTHER!||
 voidT newF( tinS& tinP , const countT idLineP , const countT idiFileP , sCountT*& pP , const countT cP = 1 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3409c.etherC.NEWdELtYPEeTHER!||
 voidT newF( tinS& tinP , const countT idLineP , const countT idiFileP , countT*& pP , const countT cP = 1 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340ea.etherC.NEWdELtYPEeTHER!||
 voidT newF( tinS& tinP , const countT idLineP , const countT idiFileP , count01T*& pP , const countT cP = 1 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3409b.etherC.NEWdELtYPEeTHER!||
 voidT newF( tinS& tinP , const countT idLineP , const countT idiFileP , byteT*& pP , const countT cP = 1 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3410b.etherC.NEWdELtYPEeTHER!||
 voidT delF( tinS& tinP , nicNameC*& pP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340a9.etherC.NEWdELtYPEeTHER!||
 voidT delF( tinS& tinP , count9S*& pP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340a9.etherC.NEWdELtYPEeTHER!||
 voidT delF( tinS& tinP , count8S*& pP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340a9.etherC.NEWdELtYPEeTHER!||
 voidT delF( tinS& tinP , count7S*& pP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340a9.etherC.NEWdELtYPEeTHER!||
 voidT delF( tinS& tinP , count6S*& pP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340a9.etherC.NEWdELtYPEeTHER!||
 voidT delF( tinS& tinP , count5S*& pP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340a9.etherC.NEWdELtYPEeTHER!||
 voidT delF( tinS& tinP , count4S*& pP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340a9.etherC.NEWdELtYPEeTHER!||
 voidT delF( tinS& tinP , count3S*& pP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340a9.etherC.NEWdELtYPEeTHER!||
 voidT delF( tinS& tinP , count2S*& pP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3409d.etherC.NEWdELtYPEeTHER!||
 voidT delF( tinS& tinP , strokeS*& pP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340d5.etherC.NEWdELtYPEeTHER!||
 voidT delF( tinS& tinP , measureT*& pP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340aa.etherC.NEWdELtYPEeTHER!||
 voidT delF( tinS& tinP , sCountT*& pP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3409c.etherC.NEWdELtYPEeTHER!||
 voidT delF( tinS& tinP , countT*& pP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340ea.etherC.NEWdELtYPEeTHER!||
 voidT delF( tinS& tinP , count01T*& pP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3409b.etherC.NEWdELtYPEeTHER!||
 voidT delF( tinS& tinP , byteT*& pP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34063.etherC.poolNewF!||
 voidT poolNewF( tinS& tinP , const countT idLineNewP , const countT idiFileNewP , byteT*& pbP , const countT cbP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3402a.etherC.poolDelF!||
 voidT poolDelF( tinS& tinP , voidT* const pvP ) ;
/* commands: birth , death of objects of other classes */

 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360021f7.etherc.etherDoHttpJobF!||
 voidT etherDoHttpJobF( tinS& tinP , taskDrivenServerParamsS& jobP , socketC*& psoP , sessionC& sessionP , countT idPortMeP , nicNameC nnMeP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360021f5.etherc.etherDispenseSerialNumberF!||
 count04T etherDispenseSerialNumberF( tinS& tinP , const strokeS* const psttFileP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.341c0.etherC.etherSoilF!||
 countT etherSoilF( tinS& tinP , const boolT& bQuitP , soulC& soulOutP , soulC& soulInP , const countT idModeP , const strokeS* const psttKeyP = 0 , const flagsT flagsP = flETHERsOILf_null , const osTextT* const postSourceP = 0 , const countT costSourceP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34192.etherC.ether_cEnabledWhereI_IF!||
 static countT& ether_cEnabledWhereI_IF( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3416a.etherC.etherWaitCyrcleOldF!||
 voidT etherWaitCyrcleOldF( tinS& tinP , napkinC& napkinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34169.etherC.etherSnapCyrcleOldF!||
 voidT etherSnapCyrcleOldF( tinS& tinP , byteT*& pbP , countT& cbP , countT& offBeginP , napkinC& napkinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34168.etherC.etherReadFromCyrcleOldF!||
 voidT etherReadFromCyrcleOldF( tinS& tinP , napkinC*& pNapkinP , bitsC& bits_pNapkinP_P , cyrcleOldFT pCyrcleOldFP , countT& cParmP , boolT& bQuitP , const strokeS* const psttNapkinP , const countT cbCyrcleOldP , countT& cIgnoredP , byteT*& pbSnapP , countT& cbSnapP , countT& offBeginSnapP , boolT& bSnapP , const countT idMemorySpaceP = 0 , signC* const pSgnReadyP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34165.etherC.etherWhereF!||
 voidT etherWhereF( tinS& tinP , const countT idActionP , const flagsT flagsP = flETHERwHERE_null , const countT cThreadsMaxP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34100.etherC.loafIF!||
 static voidT loafIF( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340ff.etherC.etherFireImpersonateMonitorIF!||
 static voidT etherFireImpersonateMonitorIF( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340e0.etherC.ether_idCitizenHirerI_F!||
 countT& ether_idCitizenHirerI_F( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.360021e6.etherc.ether_psttEarlyFolder_f!||
 strokeS*& ether_psttEarlyFolder_F( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340df.etherC.ether_pstt1_processParametersI_F!||
 strokeS*& ether_pstt1_processParametersI_F( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340b5.etherC.etherUidF!||
 voidT etherUidF( tinS& tinP , const strokeS* const psttUidP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3409a.etherC.etherTestF!||
 voidT etherTestF( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34107.etherC.etherScanProcessParametersF!||
 voidT etherScanProcessParametersF( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340de.etherC.etherRptOverheadCostsF!||
 voidT etherRptOverheadCostsF( tinS& tinP , countT*& pcP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34086.etherC.etherPutLogF!||
 voidT etherPutLogF( tinS& tinP , const strokeS* const psttP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34152.etherC.etherParameterF!||
 boolT etherParameterF( tinS& tinP , const strokeS* const psttP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3410a.etherC.etherNicNamePaperF!||
 static nicNameC etherNicNamePaperF( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34109.etherC.etherIdPortPaperF!||
 static countT etherIdPortPaperF( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34085.etherC.etherGetLogF!||
 voidT etherGetLogF( tinS& tinP , strokeS*& psttP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340ab.etherC.etherEmployersF!||
 countT etherEmployersF( tinS& tinP , countT*& pcP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34164.etherC.etherBlammoF!||
 voidT etherBlammoF( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340ec.etherC.etherBeImpotentF!||
 voidT etherBeImpotentF( tinS& tinP , const countT codeP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34155.etherC.ether_pBatWindowDeletionI_F!||
 static batonC*& ether_pBatWindowDeletionI_F( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34154.etherC.ether_pMainRefsIF!||
 static mainRefsS*& ether_pMainRefsIF( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3412c.etherC.ether_cAllOrphanThreadsI_IF!||
 static countT& os_cAllOrphanThreadsI_IF( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340cb.etherC.os_cAllKidThreadsI_IF!||
 static countT& os_cAllKidThreadsI_IF( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34158.etherC.ether_cUtility_IF!||
 static countT& ether_cUtility_IF( tinS& tinP , const countT offP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34161.etherC.etPaintIF!||
 static etherC& etPaintIF( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34105.etherC.etRockIF!||
 static etherC& etRockIF( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34104.etherC.etTextIF!||
 static etherC& etTextIF( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34162.etherC.etPrimeIF!||
 static etherC& etPrimeIF( voidT ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340ed.etherC.etPrimeIF!||
 static etherC& etPrimeIF( tinS& tinP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340ba.etherC.etThreadIF!||
 static etherC& etThreadIF( tinS& tinP ) ;
/* commands: etherC objects */

 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.341b9.etherC.operator_shiftRight!||
 const baseSoilXxxxC& operator >>( soulC& slP ) const ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34171.etherC.operator_shiftRight!||
 baseSoilXxxxC& operator >>( soulC& slP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34170.etherC.operator_shiftLeft!||
 baseSoilXxxxC& operator <<( soulC& slP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.1030.etherC.operator_call!||
 virtual voidT operator ()( tinS& tinP , soulC& slP ) ;
/*soixlOld*/

 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34002.etherC.dt_etherC!||
 virtual ~etherC( voidT ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34001.etherC.etherC!||
 etherC( tinS& tinP , const countT idLineCtP , const countT idiFileCtP , const byteT* const pbBitsCtP , const flagsT flagsModeP = flTHIRDmODE_null , const flagsT flagsWatchP = flWATCH_TIME , const osTextT* const postNameP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.340ac.etherC.NEWdELcLASSbSIZED!||
 NEWdELcLASSpROTOS
/* birth , death */

/**/
 SPACER(2)
 //boolT& bFunctionCountersReady ;
 //sCountT*& pcFunctionTime2 ;
 //countT*& pcFunctionTime1 ;
 //countT*& pcFunctionExits ;
/**/ //countT*& pcFunctionEntries ;
 countT idTraceType ;
 countT idTraceLevel ;
 const byteT  pbBitsCt[ CBbITScT ] ;
 const countT idiFileCt ;
/**/ const countT idLineCt ;
/**/ SPACER(1)
/* face 3 */

/**/
    public :


                    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34173.etherC.genSoixlOldWordHelpsF!||
    voidT           genSoixlOldWordHelpsF( tinS& tinP ) ;
                    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34172.etherC.genSoixlOldWordLoadsF!||
    voidT           genSoixlOldWordLoadsF( tinS& tinP ) ;
                    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34081.etherC.strFEndF!||
    boolT           strFEndF( tinS& tinP , const countT* const pcP , const countT cnP = 0 ) ;
                    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34049.etherC.strFEndF!||
    boolT           strFEndF( tinS& tinP , const osTextT* const postP , const countT cnP = 0 ) ;
                    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34048.etherC.strFEndF!||
    boolT           strFEndF( tinS& tinP , const strokeS* const psttP , const countT cnP = 0 ) ;
                    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34099.etherC.spacerSetF!||
    voidT           spacerSetF( tinS& tinP ) ;
                    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3408f.etherC.sleepStartF!||
    voidT           sleepStartF( tinS& tinP ) ;
                    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34090.etherC.sleepEndF!||
    voidT           sleepEndF( tinS& tinP ) ;
                    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.3413e.etherC.ifcJobF!||
    voidT           ifcJobF( stackC& stCoursesP , tinS& tinP , const countT idAdamP , soulC& sOrderPrimaryP , stackC& stOrdersP , const strokeS* const psttOldCommentP , const nicNameC nicNameP = nicNameC() ) ;

    SPACER(0)
    SPACER(z)
    SPACER(y)
    SPACER(x)
    SPACER(w)
    SPACER(v)
    SPACER(u)


    SPACER(t)
    strokeS*        psttUid ;
    flagsT          flagsDefaultStrFromSCount ;
    SPACER(s)
    SPACER(r)
    sCountT         timeSlept2 ;
    SPACER(q)
    countT          timeSlept1 ;
    SPACER(p)
    SPACER(l)
    countT          timeBorn1 ;
    SPACER(m)
    sCountT         timeBorn2 ;
    SPACER(n)
    countT          timeSleep1 ; //RULE: THREAD CAN STUFF THIS ONLY IF IT IS NULL
    SPACER(o)
    sCountT         timeSleep2 ; // "
    SPACER(k)
    batonC          bClocks ; //MUST BE AFTER third CAUSE USES *this TO INITIALIZE
    SPACER(j)

    private :

/**/

/* face 2 */

/**/
    public :

    countT               cProgressDflt ;
    //countT*            pcRaceId ;
    SPACER(i)
    strokeS*             psttLog ;
    SPACER(h)
    SPACER(g)
    SPACER(f)
    SPACER(e)
    SPACER(d)
    SPACER(c)
    SPACER(b)
    etherInitC       etherInit ;

    private :
/**/

 flagsT& flagsWatch ; // MUST BE CT AFTER third
 flagsT& flagsMode ; // MUST BE CT AFTER third; MUST BE CT BEFORE THE FIRST OBJECT WITH A CONSTRUCTOR WHO CALLS A FUNCTION CONTAINING AN IN MACRO CALL (bClocks), BECAUSE THE IN MACRO REFER TO flagsMode
/* face 1 */

/**/
    public :

    poopC&           poop ;
    thirdC           third ;
    // THE FOLLOWING MEMBERS MUST BE INITIALIZED EARLY, BEFORE etherInit OR ANY OTHER OBJECT WHOSE CT'OR REFERS TO third.ec

    SPACER(a)
    const osTextT* const postName ;
{
/*1*/class _export etherC : public baseSoilXxxxC/*1*/

/**/
*/
  \<A HREF=\"5.d010104.1.1.0.html\"\>d010104:  WAKEsHOW( "example.simplest.snip.15000006.etherC" )\</A\>
 simplest
examples
\<A HREF=\"5.15000006.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

