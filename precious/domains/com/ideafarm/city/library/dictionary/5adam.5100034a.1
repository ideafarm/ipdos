
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


//VISIBLE

REST
etThread.osProcessIdPhaseAdamF( tinP , ifcIDpHASEhANDOFFoLD_SHUTTINGdOWN ) ;

etThread.loafIF( tinP ) ;

}
    }
        etThread.strokeF( tinP , TF1(pczLever)+T("    ")+TF1(vv2)+T("\r\n") ) ;
        swsMe >> vv2 ;
        ZE( countT , vv2 ) ;
    {
    while( swsMe )
    pczLever = (countT*)swsMe.leverF( tinP , idf ) ;
{
for( countT idf = 1 ; idf <= cFlavors ; idf ++ )
countT cFlavors = swsMe.cFlavorsF( tinP ) ;

pczLever = pcz4 ; vv = 4 ; swsMe << vv ; vv *= 2 ; swsMe << vv ;
pczLever = pcz3 ; vv = 3 ; swsMe << vv ; vv *= 2 ; swsMe << vv ;
pczLever = pcz2 ; vv = 2 ; swsMe << vv ; vv *= 2 ; swsMe << vv ;
pczLever = pcz1 ; vv = 1 ; swsMe << vv ; vv *= 2 ; swsMe << vv ;
ZE( countT , vv ) ;

countT pcz4[] = { 4 , 8 , 0xc , 0 } ;
countT pcz3[] = { 3 , 6 , 9 , 0 } ;
countT pcz2[] = { 2 , 4 , 6 , 0 } ;
countT pcz1[] = { 1 , 2 , 3 , 0 } ;

switchStackC swsMe( tinP , etThread , TAG( TAGiDnULL ) , flSTACKc_null , pczLever ) ;
ZE( countT* , pczLever ) ;

TODO

/*1*/WAKEhIDE( "example.extra" )/*1*/
/**/
*/
\<A HREF=\"5.c430104.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

