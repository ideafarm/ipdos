
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


DONE( tmRelayBlowTeatF )
}
    }
        }
            etThread( tinP , psWrap ) ;
            }
                sockP.writeF( tinP , *psWrap ) ;
                etThread.traceF( tinP , T("writing wrap to teat") ) ;
            {
            if( *psWrap )
            stRelayOutP >> *(countT*)&psWrap ;
            ZE( soulC* , psWrap ) ;
        {
        while( !bQuitWoConnectP && stRelayOutP )
        //etThread.traceF( tinP , T("waited  for push") ) ;
        stRelayOutP.waitF( tinP ) ;
        //etThread.traceF( tinP , T("waiting for push") ) ;
    {
    while( !bQuitWoConnectP && !etThread && !stRelayOutP.third )

    }
        etThread( tinP , psWrap ) ;
        }
            sockP.writeF( tinP , *psWrap ) ;
            *psWrap << processGlobal1I.idAdamRoot ;
            tinP.pEther->traceF( tinP , T("identifying myself as ")+TF2(processGlobal1I.idAdamRoot,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED)+T(" to teat") ) ;
        {
        if( psWrap )
        etThread( tinP , psWrap , TAG( TAGiDnULL ) ) ;
        ZE( soulC* , psWrap ) ;
    {

    ZE( countT , idWrap ) ;
    TN( tTM , "IdeaFarm " "(tm)" ) ;

    stackC&  stRelayOutP     =  *(stackC*)pTaskP->c3 ;
    boolT&   bQuitWoConnectP =   *(boolT*)pTaskP->c2 ;
    socketC& sockP           = *(socketC*)pTaskP->c1 ;
{
if( pTaskP && pTaskP->c1 && pTaskP->c2 && pTaskP->c3 )
/*1*/TASK( tmRelayBlowTeatF )/*1*/

/**/

*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

