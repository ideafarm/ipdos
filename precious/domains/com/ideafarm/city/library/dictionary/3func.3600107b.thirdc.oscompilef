
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    _OUT_
    }
        bErrorsP |= !!bErrFile ; //HANDLES COMPILER WARNINGS THAT DO NOT CAUSE value TO BE SET (WATCOM COMPILER PROVIDES A SWITCH TO TREAT WARNINGS AS ERRORS, BUT SOME OTHER COMPILERS MIGHT NOT, SO I DO NOT USE THAT WATCOM SWITCH, ALTHOUGH THERE WOULD BE NO HARM IN DOING SO.  USING THAT SWITCH WOULD ELIMINATE THE NEED FOR THIS LINE)
        }
            DEL( pInfo ) ;
            bErrFile = !!pInfo ;
            dosFindFileOrDirF( tinP , pInfo , handle , postErrorP ) ;
            handleC handle( tinP , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_FILEfIND ) ;
            ZE( infoFileS* , pInfo ) ;
        {
        ZE( boolT , bErrFile ) ;

        bErrorsP = !!value ;
        __( idDeathType ) ;
        delF( tinP , postArg ) ;
        dosExecPgmF( tinP , countTC() , countTC() , value , idDeathType , "wpp386.exe" , postArg ) ;
        ZE( countT , idDeathType ) ;
        ZE( countT , value ) ;

        //LOGrAW( "\r\n---- osCompileF / postArg ---- END --------------------------------\r\n" ) ;
        //LOGrAW( postArg ) ;
        //LOGrAW( "\r\n---- osCompileF / postArg ---- BEGIN ------------------------------\r\n" ) ;
        //U:: TO FIND A BUG

        }
            c_strConcatenateF( tinP , postArg , ppostArg ) ; ___( postArg ) ;
            ;
            }
                0

                #endif

                    postInP    ,
                    " "        ,
                    postErrorP ,
                    " -fr="    ,
                    postOutP   ,
                    " -fo="    ,
                    " -i=\\ideafarm.home.1\\precious\\domains\\com\\ideafarm\\city\\workshop\\openssl\\include" , //U:: ELIMINATE HARDCODED "ideafarm.home.1"
                    F(flagsP) & flMAKE_MINIMALtIMErISKY                 ? " -oan"           : ""                                         ,
                    F(flagsP) & flMAKE_MINIMALtIME                      ? " -oeil+mrt"      : ""                                         ,
                    F(flagsP) & flMAKE_MINIMALsPACE                     ? " -os"            : ""                                         ,
                    F(flagsP) & flMAKE_DEBUG                            ? " -d2 -dIFCdEBUG" : ""                                         ,
                    F(flagsP) & flMAKE_EXE || F(flagsP) & flMAKE_EXEwIN ? ""                : " -bd"                                     ,
                    " -fhq=\\ideafarm.home.1\\ephemeral\\domains\\com\\ideafarm\\city\\workshop\\tmp\\adam.show.third.pch -dBiFCcLASS=0" ,  //U:: ELIMINATE HARDCODED "ideafarm.home.1"
                    IPDOScOMPILEoPTIONS                                                                                                  ,

                #if defined( __NT__ ) || defined( __OS2__ )
            {
            const osTextT* ppostArg[] =
        {
        ZE( osTextT* , postArg ) ;

        }
            DEL( pInfo ) ;
            __NZ( pInfo ) ;
            dosFindFileOrDirF( tinP , pInfo , handle , postErrorP ) ;
            handleC handle( tinP , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_FILEfIND ) ;
            ZE( infoFileS* , pInfo ) ;
        {
    {
    _INoLD_

    }
        if( POOP ) return ;
        __( F(flagsP) & flMAKE_MINIMALtIME && F(flagsP) & flMAKE_MINIMALsPACE ) ;
        __( F(flagsP) & flMAKE_DEBUG && ( F(flagsP) & flMAKE_MINIMALsPACE || F(flagsP) & flMAKE_MINIMALtIME || F(flagsP) & flMAKE_MINIMALtIMErISKY ) ) ;
        __( F(flagsP) & flMAKE_EXE && F(flagsP) & flMAKE_EXEwIN ) ;
        FV( flMAKE , flagsP ) ;
        __Z( postInP ) ;
        __Z( postErrorP ) ;
        __Z( postOutP ) ;
        __NZ( bErrorsP ) ;
        if( POOP ) return ;
    {
    IFbEcAREFUL
    SCOOP
{
/**//*1*/voidT thirdC::osCompileF( tinS& tinP , boolT& bErrorsP , const osTextT* const postOutP , const osTextT* const postErrorP , const osTextT* const postInP , const flagsT flagsP )/*1*/
*/
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/1snip.001015f.flMAKE!||
 flagsP
  this file must exist
 postInP
  if bErrors is nonze then this file is guaranteed to have been written, and the caller must d elete it before i am called again
  this file must not exist
 postErrorP
  this file can, but need not exist
 postOutP
  else      file postErrorP is guaranteed to have been written
  if 0 then file postErrorP is guaranteed to not have been written
  when i return, will be 0 iff the compilation completed without errors
  must be 0
 bErrorsP
 tinP
arguments
compilation errors do not cause impotence
\<A HREF=\"5.102008c.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$osCompileF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

