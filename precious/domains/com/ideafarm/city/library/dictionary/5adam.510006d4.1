
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etherC::loafIF( tinP ) ;
etThread.traceF( tinP , T("ok") ) ;

etThread.traceF( tinP , T("done") ) ;
}
    #endif                                           
        if( !( offi % TUCK ) ) etThread.traceF( tinP , T("got    [offi,address,value]: ")+TF3(offi,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED,8)+tb+TF3((countT)pbFoo,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED|flFORMAT_FILLzE,8)+tb+TF3(*(countT*)pbFoo,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED|flFORMAT_FILLzE,8) ) ;
    #else
                               etThread.traceF( tinP , T("got    [offi,address,value]: ")+TF3(offi,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED,8)+tb+TF3((countT)pbFoo,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED|flFORMAT_FILLzE,8)+tb+TF3(*(countT*)pbFoo,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED|flFORMAT_FILLzE,8) ) ;
    #if defined( STUPID )

    byteT* pbFoo = napsFoo[ pcpOffItem ] ;

    #endif                                           
        countT pcpOffItem[] = { 1 , offi } ;
    #else
        countT pcpOffItem[] = { 2 , 0 , offi } ;
    #if defined( STUPID )
{

#endif                                           
    for( countT offi = 0 ; offi < TOCK ; offi ++ )
#else
    for( countT offi = 0 ; offi < TUCK ; offi ++ )
#if defined( STUPID )

etThread.traceF( tinP , T("retrieving") ) ;

}

    #endif                                           
        if( !( offi % TUCK ) ) etThread.traceF( tinP , T("loaded [offi,address,value]: ")+TF3(offi,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED,8)+tb+TF3((countT)pbFoo,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED|flFORMAT_FILLzE,8)+tb+TF3(*(countT*)pbFoo,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED|flFORMAT_FILLzE,8) ) ;
    #else
                               etThread.traceF( tinP , T("loaded [offi,address,value]: ")+TF3(offi,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED,8)+tb+TF3((countT)pbFoo,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED|flFORMAT_FILLzE,8)+tb+TF3(*(countT*)pbFoo,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED|flFORMAT_FILLzE,8) ) ;
    #if defined( STUPID )

    *(countT*)pbFoo = offi | NM_HIGH ;               // NM_HIGH IS NOT REQUIRED AND HAS NO FUNCTION ; THE MEMORY OBTAINED CAN BE USED FOR ANY PURPOSE; WARNING: EACH POINTER RETRIEVAL RENDERS PRIOR POINTERS INVALID ; IT IS ILLEGAL TO REFER TO MEMORY USING A POINTER OTHER THAN THE WO MOST RECENTLY RETRIEVED
    byteT* pbFoo = napsFoo[ pcpOffItem ] ;

                                                     // GOOD STYLE: USE AN OFFSET RANGE THAT BEGINS WITH 0
                                                     // THESE NUMBERS APPEAR IN THE NAMES OF THE BACKING FILE; THEY HAVE NO OTHER EFFECT
                                                     // THE CARDINAL VALUE OF THE BEGINNING OFFSET DOES NOT MATTER AS LONG AS IT IS AN INTEGRAL MULTIPLE
    #endif                                           
        countT pcpOffItem[] = { 1 , offi } ;         // FOR EFFICIENCY, ITEM OFFSETS SHOULD BE CONTIGUOUS AND SHOULD BEGIN AT 0 OR AT AN INTEGRAL MULTIPLE OF THE NUMBER OF ITEMS THAT FIT INTO EACH NAPKIN
    #else
        countT pcpOffItem[] = { 2 , 0 , offi } ;     // THIS IS INTENTIONALLY BAD CODING STYLE: THE ITEMS ARE VERY FAR APART
    #if defined( STUPID )
{

#endif                                           
    for( countT offi = 0 ; offi < TOCK ; offi ++ )
#else
    for( countT offi = 0 ; offi < TUCK ; offi ++ )
#if defined( STUPID )



TN( tb , " " ) ;
etThread.traceF( tinP , T("loading") ) ;

napkinsC napsFoo( tinP , TAG( TAGiDnULL ) , "naps.foo" , 0x12 , 2 ) ;   // EACH ELEMENT IS A countT, AND EACH NAPKIN IS A TOCK OF countT

TODO

//#define STUPID

/*1*/WAKEhIDE( "example.other.1snip.15000172.napkinsC" )/*1*/

/**/
*/
the catch: you may only use the most recently obtained pointer
this shows infinite capacity memory, accessed using array syntax "array[ offset ]"
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

