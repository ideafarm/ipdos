
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return cFound ;

    _OUT_

    }
        }
            pbc ++ ;

            }
                }
                    pbc[ off + 1 - cbSmall ] = pbSmallNewP[ off ] ;
                {
                for( countT off = 0 ; off < cbSmall ; off ++ )

                cFound ++ ;
                offMatch = 0 ;
            {
            if( offMatch == cbSmall )

            else if( offMatch )                   offMatch = 0 ;
            if( *pbc == pbSmallOldP[ offMatch ] ) offMatch ++ ;
        {
        while( !POOP && pbc < pbe )
        ZE( countT , offMatch ) ;

        byteT* pbe = pbBigP + cbBigP ;
        byteT* pbc = pbBigP ;
    {
    if( cbSmall && cbSmall <= cbBigP )
    ZE( countT , cFound ) ;

    const countT cbSmall = cbSmallP ? cbSmallP : third.c_strlenIF( tinP , pbSmallOldP ) ;

    _INoLD_

    }
        if( POOP ) return 0 ;
        __Z( pbSmallNewP ) ;
        __Z( pbSmallOldP ) ;
        __Z( pbBigP ) ;
        if( POOP ) return 0 ;
    {
    IFbEcAREFUL
    SCOOP
{
/*1*/countT etherC::memReplaceF( tinS& tinP , byteT* const pbBigP , const countT cbBigP , const byteT* const pbSmallOldP , const byteT* const pbSmallNewP , const countT cbSmallP )/*1*/

/**/
*/
  if cbSmall, however determined, is larger than cbBigP then nothing is done
  if cbSmall, however determined, is 0 then nothing is done
  if 0 then pbSmallOldP is analyzed as a null terminated string to determine cbSmall
  can be 0
 cbSmallP
  occurances in pbBigP of pbSmallOldP will be replaced with bytes taken from pbSmallNewP, byte for byte
  can contain null bytes, regardless of whether cbSmallP is 0 or not
  must not be 0
 pbSmallNewP
  if cbSmallP is 0 then pbSmallOldP will be treated as a null terminated string and inspected to determine cbSmall
  can include null bytes if cbSmallP is not 0
  must not be 0
 pbSmallOldP
   a ze value here does -not- cause pbBigP to be analyzed for length
  if 0 then nothing is done
  can be 0
 cbBigP
  must point to cbBigP bytesP of memory that the current process can write to and read from
  must not be 0
 pbBigP
 tinP
arguments
evaluates to the number of replacements made
replaces, in place, occurances of pbSmallOldP with pbSmallNewP
  \<A HREF=\"5.8530104.1.1.0.html\"\>8530104:  WAKEsHOW( "example.simplest.func.1030149.etherC.memReplaceF" )\</A\>
 simplest
examples
\<A HREF=\"5.1030149.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$memReplaceF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

