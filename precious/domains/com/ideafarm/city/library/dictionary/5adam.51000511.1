
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etThread.traceF( tinP , T("ifcIDaDAM_KERNEL3BANG / ----") ) ;

}
    while( cRelays ) { ++ s ; etThread.osSleepF( tinP , TUCK * 0x40 ) ; }

    etThread.traceF( tinP , T("ifcIDaDAM_KERNEL3BANG / launched tmRelayF") ) ;

    }
        ++ s ; etThread.osSleepF( tinP , TOCK ) ;
        cRelays ++ ; etThread.osThreadF( tinP , countTC() , tmRelayF , 0 , flTHREADlAUNCH_null , 0 , (countT)&cRelays ) ;
    {
    while( cTries -- )
    countT cTries = 1 ;
    sleepC s( tinP , TAG( TAGiDnULL ) ) ;

    etThread.traceF( tinP , T("ifcIDaDAM_KERNEL3BANG / launching tmRelayF") ) ;
{

ZE( countT , cRelays ) ;
    
}
    host.idpTeat = idPortC() ;
    homeS& host = homeS::homeIF() ;
{

etThread.traceF( tinP , T("ifcIDaDAM_KERNEL3BANG / ++++") ) ;

TODO

DONE( tmRelayF )
}
    etThread.traceF( tinP , T("ifcIDaDAM_KERNEL3BANG / tmRelayF / ----") ) ;

    cRelaysP -- ;
    relayC relay( tinP , etThread , bReady ) ;
    ZE( boolT , bReady ) ;
    countT& cRelaysP = *(countT*)pTaskP->c1 ;

    etThread.traceF( tinP , T("ifcIDaDAM_KERNEL3BANG / tmRelayF / ++++") ) ;
{
if( pTaskP && pTaskP->c1 )
TELL( "setting up" )
TASK( tmRelayF )

/*1*/WAKEhIDE( "ifcIDaDAM_KERNEL3BANG" )/*1*/
/**/
*/
i am an object oriented rewrite of ff40104, which works
i began as an exact copy of ff40104
obsoletes ff40104
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

