
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

swFlock.freeAllF( tinP ) ;

}
    }
        }
            etThread.traceF( tinP , T("folder relocked:    ")+T(psttzLeverFolder) ) ;
        {
        else
        }
            //U:: SHUTDOWN THE COMPUTER BY FORCE HERE (SECURITY HOLE)

            DEL( pFlock ) ;
            etThread.traceF( tinP , T("error: could not relock folder so am shutting this computer down (U::not really):    ")+T(psttzLeverFolder) ) ;
            POOPR
        {
        if( POOP )

        pFlock = new( 0 , tinP , LF ) fileC( tinP , (strokeS*)tFolderToCloak , ifcOPENaCCESS_R , 0 , flOPENdETAILS_DOnOTvALIDATE | flOPENdETAILS_BUMPkEY | flOPENdETAILS_DOnOTmAKEdIRiFnEEDED , ifcOPENhOW_nFeO , flFILEaTTR_null , flFILEc_null , 1 ) ; ___( pFlock ) ;

        SCOOPS
    {
    IFsCRATCH

    DEL( pFlock ) ;
{

}
    }
        }
            }
                DEL( pFlock ) ;
            {
            if( cDo )

            }
                etThread.traceF( tinP , T("folder locked:    ")+tFolderToCloak ) ;
            {
            else
            }
                DEL( pFlock ) ;
                etThread.traceF( tinP , T("error: could not lock folder:    ")+tFolderToCloak ) ;
                POOPR
            {
            if( POOP )

            pFlock = new( 0 , tinP , LF ) fileC( tinP , (strokeS*)tFolderToCloak , ifcOPENaCCESS_R , 0 , flOPENdETAILS_DOnOTvALIDATE | flOPENdETAILS_BUMPkEY | flOPENdETAILS_DOnOTmAKEdIRiFnEEDED , ifcOPENhOW_nFeO , flFILEaTTR_null , flFILEc_null , 1 ) ; ___( pFlock ) ;
        {
        while( cDo -- )  //THIS IS TO VERIFY THAT I CAN DESTROY AND RECREATE THE FILE LOCK
        countT cDo = 2 ;

        SCOOPS
    {
    IFsCRATCH

{
ZE( fileC* , pFlock ) ;
TN( tFolderToCloak , "///d/tmp/locked.test/" ) ;

switchC swFlock( tinP , etThread , TAG( TAGiDnULL ) , flSTACKc_null , psttzLeverFolder ) ;
ZE( strokeS* , psttzLeverFolder ) ;

TODO

} FILE_FULL_DIR_INFO, *PFILE_FULL_DIR_INFO;
  WCHAR         FileName[1];
  ULONG         EaSize;
  ULONG         FileNameLength;
  ULONG         FileAttributes;
  LARGE_INTEGER AllocationSize;
  LARGE_INTEGER EndOfFile;
  LARGE_INTEGER ChangeTime;
  LARGE_INTEGER LastWriteTime;
  LARGE_INTEGER LastAccessTime;
  LARGE_INTEGER CreationTime;
  ULONG         FileIndex;
  ULONG         NextEntryOffset;
typedef struct _FILE_FULL_DIR_INFO {
//CONJ: WATCOM'S NT HEADERS ARE OLD

} FILE_INFO_BY_HANDLE_CLASS_updated, *PFILE_INFO_BY_HANDLE_CLASS_updated;
  MaximumFileInfoByHandleClas_updateds
  FileNormalizedNameInfo_updated,
  FileCaseSensitiveInfo_updated,
  FileRenameInfoEx_updated,
  FileDispositionInfoEx_updated,
  FileIdExtdDirectoryRestartInfo_updated,
  FileIdExtdDirectoryInfo_updated,
  FileIdInfo_updated,
  FileAlignmentInfo_updated,
  FileStorageInfo_updated,
  FileFullDirectoryRestartInfo_updated,
  FileFullDirectoryInfo_updated,
  FileRemoteProtocolInfo_updated,
  FileIoPriorityHintInfo_updated,
  FileIdBothDirectoryRestartInfo_updated,
  FileIdBothDirectoryInfo_updated,
  FileAttributeTagInfo_updated,
  FileCompressionInfo_updated,
  FileStreamInfo_updated,
  FileEndOfFileInfo_updated,
  FileAllocationInfo_updated,
  FileDispositionInfo_updated,
  FileRenameInfo_updated,
  FileNameInfo_updated,
  FileStandardInfo_updated,
  FileBasicInfo_updated,
typedef enum _FILE_INFO_BY_HANDLE_CLASS_updated {

/*1*/WAKEhIDE( "slash n squeeze baseline: ifcIDaDAM_CLOAK to find a bug" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

