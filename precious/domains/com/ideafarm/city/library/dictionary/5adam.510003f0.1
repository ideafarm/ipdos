
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST
etThread.osProcessIdPhaseAdamF( tinP , ifcIDpHASEhANDOFFoLD_SHUTTINGdOWN ) ;

}
    }
        etThread.osSleepF( tinP , TOCK ) ;

        }
            etThread = 0 ;
            sOut.writeF( tinP , (byteT*)&cLen , sizeof cLen ) ;
            ZE( countT , cLen ) ;
            etThread = 0 ;

            }
                etThread.osSleepF( tinP , TUCK * 32 ) ;
                etThread.beeSingDigitsF( tinP , 0x3 ) ;
            {
            while( !ether && etThread.os_cAllKidThreadsI_IF( tinP ) > !!( ether & fliEC_QUITTING ) )

            }
                else        { ZE( countT , tnu ) ; etThread.osThreadF( tinP , tnu , tmRouteF , 0 , flTHREADlAUNCH_null , 0 , (countT)pso , (countT)&sOut , (countT)&bOut ) ; }
                if( ether ) { DEL( pso ) ; }

                socket.acceptF( tinP , pso , idPortPeer , nnPeer , countTC() ) ; ___( pso ) ;
                ZE( countT , idPortPeer ) ;
                nicNameC nnPeer ;
                ZE( socketC* , pso ) ;
            {
            while( !etThread )

            socket.listenF( tinP ) ;
            socket.bindF( tinP , ifcPORToLD1dATArOUTER ) ;
            socketC socket( tinP , etThread , TAG( TAGiDnULL ) ) ;

            sOut.connectF( tinP , ifcPORToLD1dATArOUTER , 0x01010103 ) ; // HOST I00003
            socketC sOut( tinP , etThread , TAG( TAGiDnULL ) ) ;
            batonC bOut( tinP , TAG( TAGiDnULL ) ) ;
        {
    {
    while( !ether )

    etThread.strokeF( tinP , T("IdeaFarm " "(tm) City Data Router to Handler Host\r\ni route incoming data (normally from WAN remote hosts)\r\nto the (normally LAN local) host that handles data\r\n") ) ;
{
else
}
    etThread.strokeF( tinP , T("Another ")+textIdFileC( tinP , DDNAME )+T(" appears to be alive on this computer.  Only one is allowed.") ) ;
    etThread = 0  ;
{
if( etThread )
U:: USE napkinC OBJECT TO TEST FOR ALONENESS
batonC baton( tinP , TAG( TAGiDnULL ) , T("2f30104") ) ;

__1 // RETIRED

TODO

DONE( tmRouteF )

}
    DEL( pso ) ;
    etThread.strokeF( tinP , T("client -\r\n") ) ;
    etThread.sockRelayF( tinP , sOut , *pso , &bOut ) ;
    etThread.strokeF( tinP , T("client +\r\n") ) ;
    pso->etherF( tinP , etThread ) ;
    batonC&  bOut = *(batonC*) pTaskP->c3 ;
    socketC& sOut = *(socketC*)pTaskP->c2 ;
    socketC* pso  =  (socketC*)pTaskP->c1 ;
{
if( pTaskP && pTaskP->c1 && pTaskP->c2 )
TASK( tmRouteF )

/*1*/WAKEhIDE( "city.data.router.to.handler.host" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

