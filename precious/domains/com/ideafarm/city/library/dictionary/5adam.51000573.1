
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

}
    if( cFoo ) ;
    spk >> cFoo ;
    cFoo = 0 ;

    etThread.delF( tinP , postFoo ) ;
    etThread.delF( tinP , psttFoo ) ;
    etThread.strMakeF( tinP , LF , postFoo , psttFoo ) ; ___( postFoo ) ;
    ZE( osTextT* , postFoo ) ;

    spk >> psttFoo ;
    ZE( strokeS* , psttFoo ) ;

    spk >> cFoo ;
    cFoo = 0 ;
    spk >> cFoo ;
    cFoo = 0 ;
    spk >> cFoo ;
    cFoo = 0 ;
    spk >> cFoo ;
    ZE( countT , cFoo ) ;

    etThread.boxGetShadowF( tinP , spkv , tDirName+T("ideafarm.key.")+T(NAME) ) ;
    soulC spkv( tinP , TAG( TAGiDnULL ) ) ;
{
//TEST THE KEY FILE

etThread.boxPutF( tinP , tDirName+T("ideafarm.key.")+T(NAME) , spk ) ;

}
    etThread.delF( tinP , pbRandom ) ;

    spk.shiftLeftF( tinP , ifcIDtYPEsOULiTEM_byteTptr , pbRandom , TOCK ) ;

    }
        }
            if( br ) pbRandom[ off ++ ] = br ;

            byteT br = (byteT)cr ;
            countT cr = mr ;
            measure04T mr = ru ;
        {
        while( off < TOCK )
        countT off = 0 ;
        ranUniC ru( TUCK ) ;
    {

    etThread.newF( tinP , LF , pbRandom , TOCK ) ; ___( pbRandom ) ;
    ZE( byteT* , pbRandom ) ;
{

etThread.delF( tinP , psttName ) ;
spk << psttName ;
etThread.strMakeF( tinP , LF , psttName , T(NAME) ) ; ___( psttName ) ;
ZE( strokeS* , psttName ) ;

//spk << idDisk ; //format 1 only
spk << (countT)FINGERnEG_PERSONALkEY ; //format > 1
//spk << (countT)0x83c95e47 ; // format 1 only
spk << (countT)2 ; // idFormat
spk << (countT)DDNUMB ;
soulC spk( tinP , TAG( TAGiDnULL ) ) ; // "PHYSICAL KEY"

//etThread.strokeF( tinP , T("serial number: ")+TF2(idDisk,flFORMAT_NObIGITvALUES)+T("\r\n") ) ;
//countT idDisk = etThread.diskIdF( tinP , T("///d/") ) ;

}
    etThread.boxPutF( tinP , tDirName+T("ideafarm.readme.key.")+T(NAME) , tReadme , tReadme.csF( tinP ) ) ;
    
    ;
        )
        "Federal Constitutional Protectorate of the United States of America\r\n"
        "IdeaFarm " "(tm) City\r\n"
        "Governing Proprietor\r\n"
        "Wo'O Ideafarm\r\n"
        "\r\n"
        "Thank you for doing your part to secure IdeaFarm " "(tm) Space.\r\n"
        "\r\n"
        "child, to use this disk.)\r\n"
        "IdeaFarm " "(tm) Space.  Do not allow another person, even your spouse or\r\n"
        "IdeaFarm " "(tm) Space.  You are responsible for \"your\" actions when in\r\n"
        "4. Ensure that this disk is used only by you.  (This disk identifies you in\r\n"
        "\r\n"
        "3. Notify Wo'O Ideafarm as soon as practical if this disk is lost or stolen.\r\n"
        "\r\n"
        "2. Destroy this disk immediately upon receipt of a replacement disk.\r\n"
        "\r\n"
        "Associate.\r\n"
        "1. Destroy this disk immediately upon your termination as an IdeaFarm " "(tm)\r\n"
        "\r\n"
        "You agree to:\r\n"
        "\r\n"
        "disk, the following terms are in effect.\r\n"
        "is unacceptable to you, destroy this disk immediately.  Until you destroy this\r\n"
        "By using this disk, you agree to the following terms.  If any of these terms\r\n"
        "\r\n"
        "Associate and it has been issued to you specifically for your personal use.\r\n"
        "You are authorized to posess it only if you are a registered IdeaFarm " "(tm)\r\n"
        "This disk is the property of Wo'O Ideafarm.  It may not be copied or modified.\r\n"
        "\r\n"
        "\r\n"
        "This disk is issued to: ")+T(NAME)+T("\r\n"
        "\r\n"
        "http://www.ideafarm.com\r\n"
    
    TN( tReadme , "" ) ; tReadme = T(
{
TN( tDirName , "" ) ; tDirName = T("///h/ideafarm.work/backed.up.daily/cd.key/")+T(NAME)+T("/") ;

TODO

#define NAME "Hhhhhhhh"
//#define NAME "Wo'O Ideafarm"
//#define NAME "Neal Basu"

/*1*/WAKEsHOW( "tool.physical.key" )/*1*/
/**/
*/
so, until i replace Nero, i cannot take advantage of this to prevent the use of copies
Nero, an otherwise good product, modifies volser when adding files!
if the cd burner can add files without changing the volser, then the login validation code can use the volser that i store to verify that a copy is not being used
creates a physical key file that can be burned onto a cdrom that is currently in the cdrom drive and is already formatted
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

