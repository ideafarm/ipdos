
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    _OUT_

    for( countT idc = idLathI + 1 ; idc <= cso ; idc ++ ) psttP[ CSpREFIX - 1 + idc - csd ] = psttP[ CSpREFIX - 1 + idc ] ;

    SETpREFIX( psttP , cso - csd , ceo + csd ) ;
    GETpREFIX( cso , ceo , psttP ) ;
    ZE( countT , ceo ) ;
    ZE( countT , cso ) ;

    countT csd = idLathI - idFirstP + 1 ;

    _INoLD_

    }
        if( POOP ) return ;
        __( psttP->idAdam < idLathI ) ;
        __( !psttP->idAdam ) ;
        if( POOP ) return ;
        __( idLathI < idFirstP ) ;
        __Z( idFirstP ) ;
        __Z( psttP ) ;
        if( POOP ) return ;
    {
    IFbEcAREFUL

    const countT idLathI = idLastP ? idLastP : ( psttP ? psttP->idAdam : 0 ) ;
    SCOOP
{
/**//*1*/voidT etherC::strDeleteF( tinS& tinP , strokeS* const psttP , const countT idFirstP , const countT idLastP )/*1*/
*/
 csttExtraP
  must not be greater than the length of psttP
  if not 0, then must not be less than idFirstP
  can be 0, which implies the length of psttP
 idLastP
  if idLastP is not 0 then must not be greater than idLastP
  must not be greater than the length of psttP
  must not be 0
 idFirstP
  must not be 0
 psttP
arguments
d eletes a substring from a string
  \<A HREF=\"5.1e10104.1.1.0.html\"\>1e10104:  WAKEsHOW( "example.simplest.func.10300ec.etherC.strDeleteF" )\</A\>
 simplest
examples
\<A HREF=\"5.10300ec.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$strDeleteF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

