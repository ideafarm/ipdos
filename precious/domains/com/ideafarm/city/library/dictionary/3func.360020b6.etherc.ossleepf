
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    _OUT_

    }
        }
            if( F(flagsP) & flSLEEP_TALK ) strokeF( tinP , T("")+S2(saOLD_EDITeRASEbACKtOmARK,scOld_EDIT) ) ;_WQ
            sleepEndF( tinP ) ;_WQ
            ++ s ; third.dosSleepIF( tinP , timeGrain , timeGrain ) ;_WQ
            sleepStartF( tinP ) ;_WQ
            }
                delF( tinP , psttw ) ;_WQ
                strokeF( tinP , T("")+S2(0,scOld_SYSmARK)+T(psttw) ) ;_WQ
                strFromTimeF( tinP , psttw , time1 , time2 ) ; ___( psttw ) ;_WQ
                ZE( strokeS* , psttw ) ;_WQ
            {
            if( F(flagsP) & flSLEEP_TALK )
            osTimeSubtractF( tinP , time1 , time2 , timeGrain , 0 ) ;_WQ
        {
        while( !POOP && time2 >= 0 )

        sCountT time2 = time2P ;_WQ
        countT  time1 = time1P ;_WQ

        if( timeGrain > TOCK * 2 ) timeGrain = TOCK * 2 ;_WQ
        if( !time2P && timeGrain > time1P ) timeGrain = time1P ;_WQ
        if( !timeGrain ) timeGrain = TOCK ;_WQ
        countT timeGrain = timeGrain1P ;_WQ
        sleepC s( tinP , TAG( TAGiDnULL ) ) ;_WQ
    {
    if( !( F(flagsMode) & flTHIRDmODE_TESTaUTO ) || F(flagsP) & flSLEEP_IGNORE_flTHIRDmODE_TESTaUTO || F(flagsMode) & flTHIRDmODE_TESTaUTOdOsLEEPS )

    _INoLD_

    }
        if( POOP ) return ;
        FV( flSLEEP , flagsP ) ;_WQ
        __( timeGrain2P < 0 ) ; // FOR FUTURE USE, WHEN timeGrain2P != 0 IS SUPPORTED
        __( timeGrain2P ) ;_WQ
        if( POOP ) return ;

        if( POOP && this != &etPrimeIF( tinP ) ) { BLAMMO ; }  // PREVENTS CPU PEGGING; WILL GET BLAMMO INSTEAD
    {
    IFbEcAREFUL
    SCOOP
{
/*1*/voidT etherC::osSleepF( tinS& tinP , const countT time1P , const sCountT time2P , const countT timeGrain1P , const sCountT timeGrain2P , const flagsT flagsP )/*1*/
/**/
*/
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/1snip.001004b.flSLEEP!||
 flagsP
  this grain size restriction does not restrict the total time to sleep
  this parameter is present for consistency with other time commands
  must be 0
 timeGrain2P
   implies one TOCK
  can be 0
 timeGrain1P
   if time2P < 0 then this function returns immediately
  should be >= 0
 time2P
 time1P
arguments
multiday sleep
  \<A HREF=\"5.a510104.1.1.0.html\"\>a510104:  WAKEsHOW( "example.simplest.func.10300d0.etherC.osSleepF" )\</A\>
 simplest
examples
\<A HREF=\"5.10300d0.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$osSleepF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

