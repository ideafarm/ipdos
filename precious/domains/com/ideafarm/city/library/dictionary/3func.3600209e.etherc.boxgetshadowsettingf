
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


#endif

}
    }
        delF( tinP , psttDelimiter ) ;
        delF( tinP , posti ) ;
        }
            delF( tinP , psttOldCandidate ) ;
    
            else                    __1
            else if( psttDefaultP ) { strFuseF( tinP , psttP , psttDefaultP  ) ; ___( psttP ) ; }
                 if( fOk          ) { strFuseF( tinP , psttP , psttOldCandidate ) ; ___( psttP ) ; }
            }
                }
                    delF( tinP , psttOk ) ;
                    fOk = psttOk && !strCompareF( tinP , psttOk , psttOldCandidate ) ;
                    strSubstringF( tinP , psttOk , idf , sttq , T(psttDelimiter) , psttOkListP ) ; ___( psttOk ) ;
                {
                while( idf && !fOk )
                ZE( strokeS* , psttOk ) ;
                strokeS sttq( (countT)0 , sc_IGNOREqUOTES ) ;
                countT idf = 1 ;
            {
            else
            if( !psttOkListP ) fOk = 1 ;
            ZE( boolT , fOk ) ;
    
            strMakeF( tinP , LF , psttOldCandidate , T(posti) ) ; ___( psttOldCandidate ) ;
            ZE( strokeS* , psttOldCandidate ) ;
            __Z( posti ) ;
        {
        if( posti )
    
        }
            }
                if( psttDefaultP ) { strFuseF( tinP , psttP , psttDefaultP ) ; ___( psttP ) ; }
                POOPR
            {
            if( POOP )
            { ZE( countT   , costi ) ; tinP.pEtScratch->boxGetShadowF( tinP , posti , costi , psttBoxIP , cOpenTriesP , flagsOpenDetailsP ) ; ___( posti ) ; }
            SCOOPS
        {
        ZE( osTextT* , posti ) ;
    
        else                 { strFuseF( tinP , psttDelimiter , T("\r\n")      ) ; ___( psttDelimiter ) ; }
        if( psttDelimiterP ) { strFuseF( tinP , psttDelimiter , psttDelimiterP ) ; ___( psttDelimiter ) ; }
        ZE( strokeS* , psttDelimiter ) ;
    {
    IFsCRATCH

    _IO_

    }
        if( POOP ) return ;
        __Z( psttBoxIP ) ;
        __NZ( psttP ) ;
        if( POOP ) return ;
    {
    IFbEcAREFUL
    SCOOP
{
/**//*1*/voidT etherC::box GetShadow::20141115@1937::MIGRATE:TO:USE:SETTINGS.BIT.TREE::SettingF( tinS& tinP , strokeS*& psttP , const strokeS* const psttBoxIP , const strokeS* const psttDefaultP , const strokeS* const psttOkListP , const strokeS* const psttDelimiterP , countT cOpenTriesP , const flagsT flagsOpenDetailsP )/*1*/

#if defined( NEVERdEFINED )

//20141115@1950: IT IS NOW ILLEGAL TO USE THIS API ; USE THE SETTINGS keyValuePairsC INSTANCE

*/
  if not 0 then will try cOpenTriesP times
  if 0 then will retry forever
 cOpenTriesP
 psttDelimiterP
 psttOkListP
 psttDefaultP
 psttBoxIP
 psttP
arguments
 if 0 then T("\r\n") is used
psttDelimiterP: the string that separates the valid values in psttOkListP
 example: T("vanilla\r\nchocolate\r\nstrawberry")
 if 0 then no value checking is performed
psttOkListP: list of valid values
 example: T("chocolate")
  if 0 and the box does not exist, psttP will be 0
 can be 0
psttDefaultP: value to use if the box does not exist or contains an invalid value
 example: T("///ideafarm/ephemeral/domains/com/my.domain/settings/ice.cream.flavor")
psttBoxIP: the name of the box
the entire contents of the box is used as the value
the default is used when the box does not exist or it contains an unlisted value
gets a setting from a box
  \<A HREF=\"5.4810104.1.1.0.html\"\>4810104:  WAKEsHOW( "example.simplest.func.10300af.etherC.box GetShadow::20141115@1937::MIGRATE:TO:USE:SETTINGS.BIT.TREE::SettingF" )\</A\>
 simplest
examples
\<A HREF=\"5.10300af.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$box GetShadow::20141115@1937::MIGRATE:TO:USE:SETTINGS.BIT.TREE::SettingF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//

