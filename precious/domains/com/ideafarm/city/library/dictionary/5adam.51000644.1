
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etherC::loafIF( tinP ) ;
etThread.strokeF( tinP , tf ) ;

if( F(flagsCPU) & flCPUfEATURE_AVX     ) tf += T(" AVX    ") ;
if( F(flagsCPU) & flCPUfEATURE_OSXSAVE ) tf += T(" OSXSAVE") ;
if( F(flagsCPU) & flCPUfEATURE_AESNI   ) tf += T(" AESNI") ;
if( F(flagsCPU) & flCPUfEATURE_SSE42   ) tf += T(" SSE42  ") ;
if( F(flagsCPU) & flCPUfEATURE_SSE41   ) tf += T(" SSE41  ") ;
if( F(flagsCPU) & flCPUfEATURE_SSSE3   ) tf += T(" SSSE3  ") ;
if( F(flagsCPU) & flCPUfEATURE_SSE3    ) tf += T(" SSE3   ") ;
if( F(flagsCPU) & flCPUfEATURE_SSE2    ) tf += T(" SSE2   ") ;
if( F(flagsCPU) & flCPUfEATURE_SSE     ) tf += T(" SSE    ") ;
if( F(flagsCPU) & flCPUfEATURE_MMX     ) tf += T(" MMX    ") ;
if( F(flagsCPU) & flCPUfEATURE_CMOV    ) tf += T(" CMOV   ") ;
if( F(flagsCPU) & flCPUfEATURE_FPU     ) tf += T(" FPU    ") ;
if( F(flagsCPU) & flCPUfEATURE_INTEL   ) tf += T(" INTEL  ") ;

TN( tf , "" ) ;

const flagsT& flagsCPU = processGlobal1S::_processGlobal1I_IF().flagsCpuFeatures ;

TODO

//CS:CODEsYNC: 11000466 1c00002b 51000644: THE ORDERING OF THESE FLAGS DETERMINES THE BIT THAT IS REFERENCED; THIS BIT IS HARDCODED IN ASM ROUTINE

/*1*/WAKEsHOWtEXT( "example.simplest.1snip.1c00002b.queryCpuFeaturesAM" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

