
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    }
        }
            //}
            //    }
            //        }
            //            //LOGrAW5( "                                              pel [x,y]: " , pMe->x , " " , pMe->y , "\r\n" ) ;
            //
            //            POINT* pMe = pPel->pPoint + offi ++ ;
            //        {
            //        for( countT offp = 0 ; offp < pPel->pcSize[ offg ] ; offp ++ )
            //        //LOGrAW5(     "    -------- [offGlyph,cPoint]: " , offg , " " , pPel->pcSize[ offg ] , "\r\n" ) ;
            //    {
            //    for( countT offg = 0 ; offg < pPel->cGlyph ; offg ++ )
            //    ZE( countT , offi ) ;
            //    //LOGrAW3(         "+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ [cGlyph]: " , pPel->cGlyph , "\r\n" ) ;
            //{
            //if( idIn == 1 )
            //countT idIn = 1 + incv02AM( idInLath ) ;
            //static countT idInLath ;
            //THIS IS NORMALLY COMMENTED OUT AND IS HERE ONLY FOR DEBUGGING CONVENIENCE

            BOSpOOP
            BOS( WHATgbo , BOSoK , DeleteObject( oshPen ) )
            BOSdOnOTtEST( WHATgbo , SelectObject( device.oshDeviceMemoryF() , oshPenWas ) )

            boolT bOk = tinP.brcRaw ;
            BOSpOOP
            BOS( WHATgbo , BOSoK , PolyPolyline( device.oshDeviceMemoryF() , pPel->pPoint , (DWORD*)pPel->pcSize , pPel->cGlyph ) )

            HPEN    oshPenWas = (HPEN)tinP.brcRaw ;
            BOSdOnOTtEST( WHATgbo , SelectObject( device.oshDeviceMemoryF() , oshPen ) )
            HPEN    oshPen = (HPEN)tinP.brcRaw ;
            BOSpOOP
            BOS( WHATgbo , BOSoK , CreatePen( PS_SOLID , 1 , pPel->rgbOverride ? pPel->rgbOverride : cLever_rgb ) )

            pelS* pPel = (pelS*)&(countT&)swPel ;
            cLever_rgb = swPel.leverF( tinP , idf ) ;
        {
        for( countT idf = 1 ; idf <= cFlavors ; idf ++ )
        countT cFlavors = swPel.cFlavorsF( tinP ) ;
    {
    if( !( F(flags) & flPELc_BEqUIET ) )
{
/*1*/voidT pelC::writeF( tinS& tinP )/*1*/

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

