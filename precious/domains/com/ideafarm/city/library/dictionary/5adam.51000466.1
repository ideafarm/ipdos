
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

}
    etThread.strokeF( tinP , TF1(bb)+T("\r\n") ) ;
    stb >> pbb ; // SINCE pbb IS NOT 0 AND POINTS TO bb, THE RESULT WILL BE COPIED INTO bb
{
while( stb )
byteT* pbb = &bb ; // THIS LINE IS NEEDED BECAUSE operator >> REQUIRES A REFERENCE (BECAUSE IT KNOWS HOW TO ALLOCATE BYTES IF THE REFERENCE CONTAINS 0)

bb ++ ; stb << &bb ;
bb ++ ; stb << &bb ;
bb ++ ; stb << &bb ;
bb ++ ; stb << &bb ;

ZE( byteT , bb ) ;

stackC stb( tinP , etThread , TAG( TAGiDnULL ) , flSTACKc_BLOB , 1 ) ; // FIXED LENGTH (1 BYTE) BLOBS

TODO

/*1*/WAKEhIDE( "example.other.func.1150042.stackC.operator_shiftLeft" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

