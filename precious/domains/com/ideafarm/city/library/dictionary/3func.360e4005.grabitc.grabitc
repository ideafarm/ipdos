
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    //ctCheckF() ;

    if( !( F(flagsCt2) & flGRABITc_SUPPRESScTdT                                              ) ) grabF( tinP , idLineCtP , idiFileCtP , pbBitsCtP ) ;

    putNegAM( finger , FINGERnEG_GRABITc ) ;

    __HIGHbIT( ifcIdBitP - ifcIDgRABITbIT_min ) ;

    }
        thirdC::dosPriorityIF( tinP , ifcTHREADpRIORITY_SPINLOCK ) ;
        idDesire = thirdC::dosPriorityIF( tinP ) ;
    {
    if( !( F(flagsCt2) & ( flGRABITc_IMAGEiSvISIBLEtOoTHERtHREADS | flGRABITc_DESIREcHANGEoNdEMAND ) ) )

    for( countT offp = 0 ; offp < sizeof pbPad ; offp ++ ) *(byteT*)&pbPad[ offp ] = GRABITbYTEiNITIALvALUE ;

    }
        }
            poff_cGrabberRecurse          = ( F(flagsP) & flGRABITc_IMAGEiSvISIBLEtOoTHERpROCESSES ? (countT*)( (byteT*)&tinP.pcGrabitRecurse[ offr ]   - (byteT*)this ) : &tinP.pcGrabitRecurse[ offr ] ) ;
            poff_cGrabberOsTid            = ( F(flagsP) & flGRABITc_IMAGEiSvISIBLEtOoTHERpROCESSES ? (countT*)( (byteT*)&tinP.pcGrabitOsTid[   offr ]   - (byteT*)this ) : &tinP.pcGrabitOsTid[   offr ] ) ;
        {
        else
        if( offr == CmAXgRABITrECURSEiNtINs ) { BLAMMO ; }

        }
            }
                break ;
                tinP.ppbGrabitRecurse[ offr ] = pbo ;
            {
            if( !tinP.ppbGrabitRecurse[ offr ] )
        {
        if( offr == CmAXgRABITrECURSEiNtINs ) for( offr = 0 ; offr < CmAXgRABITrECURSEiNtINs ; offr ++ )

        }
            if( tinP.ppbGrabitRecurse[ offr ] == pbo ) break ;
        {
        for( offr = 0 ; offr < CmAXgRABITrECURSEiNtINs ; offr ++ )
        ZE( countT , offr ) ;

        ;
            : poff_bo
            ? (byteT*)this + (countT)poff_bo
        byteT* pbo = F(flagsP) & flGRABITc_IMAGEiSvISIBLEtOoTHERpROCESSES                                         // byteT CONTAINING THE BIT TO BE GRABBED
    {
    if( F(flagsP) & flGRABITc_RECURSEuSINGtINs )

    _IO_

    }
        if( POOP ) { BLAMMO ; } ;
        __( ifcIdBitP > ifcIDgRABITbIT_max ) ;
        __( ifcIdBitP < ifcIDgRABITbIT_min ) ;
        __( !pcGrabberOsTidP != !pcGrabberRecurseP ) ;
        if( POOP ) return ;
    {
    IFbEcAREFUL

    SCOOP
{
msNap( msNapP )
idDesire( 0 ) ,
poff_cGrabberRecurse( F(flagsP) & flGRABITc_RECURSEuSINGtINs ? 0 : F(flagsP) & flGRABITc_IMAGEiSvISIBLEtOoTHERpROCESSES ? (countT*)( (byteT*)pcGrabberRecurseP - (byteT*)this ) : pcGrabberRecurseP ) ,
poff_cGrabberOsTid(   F(flagsP) & flGRABITc_RECURSEuSINGtINs ? 0 : F(flagsP) & flGRABITc_IMAGEiSvISIBLEtOoTHERpROCESSES ? (countT*)( (byteT*)pcGrabberOsTidP   - (byteT*)this ) : pcGrabberOsTidP   ) ,
) ,
                : &keyDefault
                ? pcKeyP
            : pcKeyP
                : (countT*)( (byteT*)&keyDefault - (byteT*)this )
                ? (countT*)( (byteT*)pcKeyP      - (byteT*)this )
            ? pcKeyP
        : F(flagsP) & flGRABITc_IMAGEiSvISIBLEtOoTHERpROCESSES
        ? 0
    F(flagsP) &flGRABITc_UNKEYED
(
poff_key
) ,


        : (byteT*)&cP


        ? (byteT*)( (byteT*)&cP - (byteT*)this )
    F(flagsP) & flGRABITc_IMAGEiSvISIBLEtOoTHERpROCESSES
(
poff_bo
keyDefault( 0 ) ,
bitsDefault( GRABITbYTEiNITIALvALUE ) ,
offo(        ifcIdBitP >= ifcIDgRABITbIT_min && ifcIdBitP <= ifcIDgRABITbIT_max ? ifcIdBitP - ifcIDgRABITbIT_min : 0 ) ,
flagsCt2( flagsP                                                     ) ,
baseGrabC( tinP , idLineCtP , idiFileCtP , ifcIDtYPEdERIVEDbASEgRABc_grabitC , F(flagsP) & flGRABITc_SHARElAYER ? flBASEgRABc_SHARElAYER : flBASEgRABc_null , idGrabLayerP ) ,
/*1*/grabitC::grabitC( tinS& tinP , const countT idLineCtP , const countT idiFileCtP , const byteT* const pbBitsCtP , countT&   cP              , const countT  ifcIdBitP , grabitC& grabitNUP , countT* const pcKeyP , countT* const pcGrabberOsTidP , countT* const pcGrabberRecurseP , const flagsT flagsP , const countT msNapP , const countT idGrabLayerP ) :/*1*/

/**/

*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

