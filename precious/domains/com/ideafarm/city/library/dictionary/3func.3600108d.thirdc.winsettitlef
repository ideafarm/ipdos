
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return bOk ;
    _OUT_

    }
        bOk = winSendMessageF( tinP , hWindow , idwm_SETwINDOWtEXT , (countT)postt ) ;
        hWindow.osF( ifcIDtYPEhANDLE_WINDOW , osh , 0 , 1 ) ;
        handleC hWindow( tinP , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_WINDOW ) ;
        thirdC::c_strncpyIF( tinP , postt , postP , costat ) ;
        newF( tinP , LF , postt , costat ) ; ___( postt ) ;
        const countT costat = 1 + c_strlenIF( tinP , postP ) ;
        ZE( osTextT* , postt ) ;
    {
    else
    }
        #endif
            }
                bOk = !tinP.bosFail ;
                BOS( WHATgbo , BOSoK , SetConsoleTitle(           postP ) )
            {
            else
            }
                bOk = !tinP.bosFail ;
                BOS( WHATgbo , BOSoK , SetWindowText( (HWND)osh , postP ) )
            {
            if( osh )
        #elif defined( __NT__ )
            //U:
        #if defined( __OS2__ )
    {
    if( tinP.monitor.idThread == tinP.pAdamGlobal1->_thirdC_.idThreadWindows || !osh )
    boolT bOk = 1 ;

    }
        pRootI->letRefF() ;
        osh     = ~hWindowP ? hWindowP.osF( ifcIDtYPEhANDLE_WINDOW ) : ( pRootI ? ((const handleC&)*pRootI).osF( ifcIDtYPEhANDLE_WINDOW ) : 0 ) ;
    {
    if( pRootI )
    windowOldC* pRootI = windowOldC::getRefIF( tinP ) ;
    ZE( countT , osh ) ;

    _INoLD_

    }
        if( POOP ) return 0 ;
        //__( !*postP ) ;
        if( POOP ) return 0 ;
        __Z( postP ) ;
        if( POOP ) return 0 ;
    {
    IFbEcAREFUL
    SCOOP
{
/*1*/boolT thirdC::winSetTitleF( tinS& tinP , const osTextT* const postP , const handleC& hWindowP )/*1*/

/**/
*/
  if 0 then sets the title of the main window of the application
  can be 0
 hWindowP
  no longer true: must not be null length
  must not be 0
 postP
arguments
callers that want impotence to occur if i cannot set a title must test my return value
i evaluate to bOk, which is nonze iff i was able to set a title
if there is no console and no graphics window, nothing is done and impotence does not occur
it is illegal to refer to this symbol in the definition of an adam
\<A HREF=\"5.10200a0.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$winSetTitleF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

