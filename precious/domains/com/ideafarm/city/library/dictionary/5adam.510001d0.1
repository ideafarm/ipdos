
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


//VISIBLE

REST
etThread.osProcessIdPhaseAdamF( tinP , ifcIDpHASEhANDOFFoLD_SHUTTINGdOWN ) ;

HEAReNTER( etThread )
etThread.strokeF( tinP , T("\r\npress the enter key") ) ;

}
    etThread.delF( tinP , pstti ) ;
    etThread.strokeF( tinP , pstti ) ;

    stack >> pstti ;
    ZE( strokeS* , pstti ) ;
{
while( stack )

pushF( tinP , etThread , stack , 3 , 8 ) ;
pushF( tinP , etThread , stack , 1 , 6 ) ;

stackC stack( tinP , etThread , TAG( TAGiDnULL ) , flSTACKc_null , ifcSTACKtYPE_PTR_strokeS ) ;

TODO

}
    }
        if( !idSlot ) etThread.delF( tinP , pstto ) ;
        stackP.sinkF( tinP , idSlot , pstto , flSTACKsINK_UNIQUE ) ;
        ZE( countT , idSlot ) ;
        etThread.strMakeF( tinP , LF , pstto , T("value = ")+TF1(value)+T("\r\n") ) ; ___( pstto ) ;
        ZE( strokeS* , pstto ) ;
    {
    for( countT value = cMinP ; value <= cMaxP ; value ++ )
{
voidT pushF( tinS& tinP , etherC& etThread , stackC& stackP , const countT cMinP , const countT cMaxP )

/*1*/WAKEhIDE( "example.simplest.func.115000d.stackC.sinkF" )/*1*/
/**/
*/
\<A HREF=\"5.2d10104.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//

