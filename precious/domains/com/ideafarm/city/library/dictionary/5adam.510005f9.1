
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//

                    
REST

etThread.strokeF( tinP , T("aok\r\n") ) ;

}
    }
        DEL( pso ) ;
        }
            }
                }
                    break ;
                    POOPR ;
                {
                else
                if( !POOP ) { CONoUTrAW( pb2 ) ; }
                pso->readF( tinP , pb2 , 1 ) ;
                byteT pb2[] = { 0 , 0 } ;
            {
            while( !ether )
        {
        else
        if( !pso ) break ;
        
        }
            socka.acceptF( tinP , pso , idpc , nnc , bRefuse ) ; ___( pso ) ;
            ZE( boolT , bRefuse ) ;
            nicNameC nnc ;
            ZE( countT , idpc ) ;
        {
        ZE( socketC* , pso ) ;
    {
    while( !ether )
    
    etThread.osThreadF( TaRG1( tmWorkF ) , idPort ) ;
    
    socka.listenF( tinP ) ;
    countT idPort = socka.bindF( tinP ) ;
    
    socketC socka( tinP , *tinP.pEtScratch , TAG( TAGiDnULL ) ) ;
    SCOOPS
{
IFsCRATCH

TODO

DONE( tmWorkF )
}
    }
        }
            }
                ++ s ; ether.osSleepF( tinP , TOCK ) ;
        
                if( bo ++ == 'z' ) bo = 'a' ;

                }
                    break ;
                    POOPR ;
                {
                if( POOP )
                socko.writeF( tinP , &bo , 1 ) ;
            {
            while( !ether )
            byteT bo = 'a' ;
            sleepC s( tinP , TAG( TAGiDnULL ) ) ;
            
            socko.connectF( tinP , idPort ) ;
            socketC socko( tinP , *tinP.pEtScratch , TAG( TAGiDnULL ) , ifcSOCKETtYPE_STREAM , flSOCKETc_null , 0 , 0 , &timeAllowedConnected ) ;
            countT timeAllowedConnected = TOCK << 3 ;

            }
                ++ s ; ether.osSleepF( tinP , TOCK ) ;
                sleepC s( tinP , TAG( TAGiDnULL ) ) ;
            {
        {
        while( !ether )
        SCOOPS
    {
    IFsCRATCH

    countT idPort = pTaskP->c1 ;
{
if( pTaskP && pTaskP->c1 )
TASK( tmWorkF )

/*1*/WAKEsHOWtEXT( "example.other.snip.003000d.socketC.connection.timeout" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

