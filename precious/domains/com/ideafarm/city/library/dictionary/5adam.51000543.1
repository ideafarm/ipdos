
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etherC::loafIF( tinP ) ;

etThread.strokeF( tinP , tAll ) ;

;

    T("X\r\nXXXX")
    SADAM(pSoul2)+//SCBA(scbF)+
    SADAM(pSoul1)+//SCBA(scbF)+
    //T("XX")+
    T("XXXX\r\nX")+

TN( tAll , "" ) ; tAll +=

*pSoul2 << (strokeS*)tv ;
*pSoul1 << (strokeS*)tv ;
etThread( tinP , pSoul2 , TAG( TAGiDnULL ) ) ;
etThread( tinP , pSoul1 , TAG( TAGiDnULL ) ) ;
ZE( soulC* , pSoul2 ) ;
ZE( soulC* , pSoul1 ) ;
TN( tv , "X" ) ;
//TOO EXPENSIVE: osTextT posta[] = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789,./<>?;':\"[]\\{}|`~!@#$%^&*()-_=+" ;
osTextT posta[] = "abcdefgh" ;

{ sadamCBFT pf = scbF ; } //VERIFY TYPE

TODO

}
    return 0 ; //CONTINUE CALLING IN THE CURRENT SNIP
    wP.baton.ungrabF( tinP ) ;
    if( stInvalidP && c8scratchAdamP.c1 && c8scratchSnipP.c1 && c8scratchSnipAdamP.c1 && idSnipP && psttSnipP && idsP && c8scratchEventP.c1 && bNoDrawP && flagsP && wP.bDoomed ) ;
    
    }
        }
            break ;
            }
                }
                    }
                        break ;
                        }
                            }
                                break ;
                                etherP.beeClickF( tinP , idSnipP * 0x220 , TUCK * 0x80 ) ;
                                )
                                    idRow <= c8scratchStrokeP.c4
                                    idCol <= c8scratchStrokeP.c3 &&
                                    idRow >= c8scratchStrokeP.c2 &&
                                    idCol >= c8scratchStrokeP.c1 &&
                                (
                                if
            
                                //POPUPcOUNT( "idsP: " , idsP ) ;
                                //POPUPcOUNT( "idSnipP: " , idSnipP ) ;
                            {
                            case ifcIDtYPEtOOL_MOUSEbUTTONlEFT :
                        {
                        switch( idTool )
                    {
                    case ifcIDtYPEaCTION_DOWN :
                {
                switch( idAction )
            
                thirdC& third = etherP ;
                const countT& idRow    = pcNotesP[ 5 ] ;
                const countT& idCol    = pcNotesP[ 4 ] ;
                const countT& idAction = pcNotesP[ 3 ] ;
                const countT& idTool   = pcNotesP[ 2 ] ;
            {
            if( pcNotesP[ 0 ] == 1 && pcNotesP[ 1 ] == 4 )
        {
        case ifcIDtYPEsTROKEcALLbACK_MOUSE :
        }
            break ;
            }
                }
                    }
                        }
                            break ;
                            else                                                                                etherP.etherFireImpersonateMonitorIF( tinP ) ;
                            if( F(thirdC::third_flagsModeProcess1I_IF( tinP )) & flMODEpROCESS1_IGNOREfIREbYoPERATOR ) thirdC::dosBeepIF( tinP , 0x3800 , TUCK * 0x20 ) ;
                        {
                        case ifcIDtYPEtOOL_ESCAPE :
                    {
                    switch( idTool )
                    ZE( boolT , bFreshFace ) ;
                {
                if( idAction == ifcIDtYPEaCTION_DOWN )
            
                const countT& idAction = pcNotesP[ 3 ] ;
                const countT& idTool = pcNotesP[ 2 ] ;
            {
            if( pcNotesP[ 0 ] == 1 && pcNotesP[ 1 ] == 2 )
        {
        case ifcIDtYPEsTROKEcALLbACK_KEY :
        }
            break ;
    
            THREADmODE1rESTORE
            wP.wrapRenderF( tinP , tButton ) ;
            THREADmODE1oN( flTHREADmODE1_ALLOWsTOPwHILEgRABBING ) //TO ALLOW DT OF stInvalid
            
            ;
            
                S2(0,scOld_POPoRIGIN)
                S2(saOLD_OLDCMDpSEUDOiDaDAMoVERRIDEpOP,scOld_mmMOVEpELtO)+
                S2(0,scOld_POPhIGHwATER)+
                S2(0,scOld_OLDCMDpOPlOWwATER)+
                S2(0,scOld_OLDCMDpOPrIGHTwATER)+
                S2(0,scOld_OLDCMDpOPlEFTwATER)+
                S2(CfROM2(cIdColMinButton,cIdRowMinButton),scOld_mmLINEpELtO)+
                S2(CfROM2(cIdColMinButton,cIdRowMaxButton),scOld_mmLINEpELtO)+
                S2(CfROM2(cIdColMaxButton,cIdRowMaxButton),scOld_mmLINEpELtO)+
                S2(CfROM2(cIdColMaxButton,cIdRowMinButton),scOld_mmLINEpELtO)+
                S2(CfROM2(cIdColMinButton,cIdRowMinButton),scOld_mmMOVEpELtO)+
                S2(0,scOld_OLDCMDpUSHlEFTwATER)+
                S2(0,scOld_OLDCMDpUSHrIGHTwATER)+
                S2(0,scOld_OLDCMDpUSHlOWwATER)+
                S2(0,scOld_PUSHhIGHwATER)+
                S2(0,scOld_PUSHoVERRIDEcOLrOW)+
                tTitle+
                S2(flPUSHoRIGIN_WOwO,scOld_cPUSHoRIGIN)+
                T("")+
            
            tButton =
            TN( tButton , "" ) ;

            c8scratchStrokeP.c4 = R( wP.mIdRow ) - 1 + cIdRowMaxButton ;
            c8scratchStrokeP.c3 = R( wP.mIdCol ) - 1 + cIdColMaxButton ;
            c8scratchStrokeP.c2 = R( wP.mIdRow ) - 1 + cIdRowMinButton ;
            c8scratchStrokeP.c1 = R( wP.mIdCol ) - 1 + cIdColMinButton ;
            
            }
                cIdRowMaxButton = R( mIdRowMaxTitle ) + 2 ;
                cIdColMaxButton = R( mIdColMaxTitle ) + 2 ;
                cIdRowMinButton = R( mIdRowMinTitle ) - 2 ;
                cIdColMinButton = R( mIdColMinTitle ) - 2 ;
                wP.boundingRectF( tinP , mIdColMinTitle , mIdRowMinTitle , mColsTitle , mRowsTitle , tTitle ) ;
                ZE( measureT , mRowsTitle ) ;
                ZE( measureT , mColsTitle ) ;
                ZE( measureT , mIdRowMinTitle ) ;
                ZE( measureT , mIdColMinTitle ) ;
            {
            ZE( countT , cIdRowMaxButton ) ;
            ZE( countT , cIdColMaxButton ) ;
            ZE( countT , cIdRowMinButton ) ;
            ZE( countT , cIdColMinButton ) ;

            }
                etherP( tinP , psParams ) ;
                }
                    etherP.delF( tinP , psttTitle ) ;

                    tTitle = T(psttTitle) ;

                    (*psParams) >> psttTitle ;
                    ZE( strokeS* , psttTitle ) ;
                {
                if( psParams )
                wP.stqr_paperSouls >> psParams ;
                ZE( soulC* , psParams ) ;
            {
            TN( tTitle , "" ) ;

        {
        case ifcIDtYPEsTROKEcALLbACK_RENDER :
    {
    switch( idTypeCallP )
    wP.baton.grabF( tinP , TAG( TAGiDnULL ) ) ;
{
boolT scbF( tinS& tinP , etherC& etherP , windowOldC& wP , stackC& stInvalidP , const countT idSnipP , const strokeS* const psttSnipP , const countT idsP , const flagsT flagsP , const boolT bNoDrawP , const countT idTypeCallP , const countT idEventP , const countT* const pcNotesP , count8S& c8scratchEventP , count8S& c8scratchAdamP , count8S& c8scratchSnipP , count8S& c8scratchSnipAdamP , count8S& c8scratchStrokeP )

/*1*/WAKEhIDE( "tool.test.button.rendering" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

