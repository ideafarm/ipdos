
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


//VISIBLE

REST
etThread.osProcessIdPhaseAdamF( tinP , ifcIDpHASEhANDOFFoLD_SHUTTINGdOWN ) ;

HEAReNTER( ether )
etThread.strokeF( tinP , T("\r\n\r\npress the enter key") ) ;

}
    }
        etThread.delF( tinP , psttv ) ;
        sws >> psttv ;
        ZE( strokeS* , psttv ) ;
    {
    while( sws )
{
for( lever = 1 ; lever <= 4 ; lever ++ )

}
    etThread.strokeF( tinP , T("for lever ")+TF1(lever)+T(", the test value was found at position ")+TF1(ids)+T("\r\n") ) ;
    ids = sws( tTest ) ;
{
for( lever = 1 ; lever <= 4 ; lever ++ )

TN( tTest , "fooey3" ) ;

}
    ids = 0 ; psttv = 0 ; etThread.strMakeF( tinP , psttv , T("fooey4") ) ; sws.sinkF( tinP , ids , psttv ) ;
    ids = 0 ; psttv = 0 ; etThread.strMakeF( tinP , psttv , T("fooey3") ) ; sws.sinkF( tinP , ids , psttv ) ;
    ids = 0 ; psttv = 0 ; etThread.strMakeF( tinP , psttv , T("fooey2") ) ; sws.sinkF( tinP , ids , psttv ) ;
    ids = 0 ; psttv = 0 ; etThread.strMakeF( tinP , psttv , T("fooey1") ) ; sws.sinkF( tinP , ids , psttv ) ;
    ZE( strokeS* , psttv ) ;
{
for( lever = 1 ; lever <= 4 ; lever ++ )

ZE( countT , ids ) ;

switchStackC sws( tinP , ether , TAG( TAGiDnULL ) , flSTACKc_null , lever , flSTACKc_null , ifcSTACKtYPE_PTR_strokeS ) ;
ZE( countT , lever ) ;

TODO

/*1*/WAKEhIDE( "example.simplest.func.121000d.switchStackC.sinkF" )/*1*/
/**/
*/
\<A HREF=\"5.1130104.1.0.html\"\>definition\</A\>
/*












//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

