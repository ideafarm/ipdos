
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    }
        }
            sgnP.giveF( tinP ) ;
            third.osTimeNowF( tinP , time1P , time2P ) ;
            time1P = time2P = 0 ;
            ++ s ; third.dosSleepIF( tinP , timeGrainP ) ;
        {
        while( !POOP && !fFireP )
        sleepC s( tinP , TAG( TAGiDnULL ) ) ;
    {

    sCountT timeHire2 = time2P ;
    countT timeHire1 = time1P ;
    sgnP.giveF( tinP ) ;
    third.osTimeNowF( tinP , time1P , time2P ) ;
    _IO_

    }
        if( POOP ) return ;
        __NZ( time2P ) ;
        __NZ( time1P ) ;
        if( POOP ) return ;
    {
    IFbEcAREFUL
    SCOOP
{
/**//*1*/voidT etherC::osTimeWatchF( tinS& tinP , countT& time1P , sCountT& time2P , signC& sgnP , boolT& fFireP , countT timeGrainP )/*1*/
*/
 timeGrainP
 fFireP
 sgnP
 time2P
 time1P
arguments
gives the sign immediately after updating time1P and time2P
ends when fFireP is not ze
maintains time1P and time2P to contain the current time
  \<A HREF=\"5.b510104.1.1.0.html\"\>b510104:  WAKEsHOW( "example.simplest.func.10300a0.etherC.osTimeWatchF" )\</A\>
 simplest
examples
\<A HREF=\"5.10300a0.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$osTimeWatchF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

