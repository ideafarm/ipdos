
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etherC::loafIF( tinP ) ;
etThread.traceF( tinP , T("ok") ) ;

}
    }
        POOPR
        }
            __1
            etThread.traceF( tinP , T("got   [vv]:    ")+TF2(vv2,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ;
            countT vv2 = *(countT*)(const byteT*)page2 ;
            pageC page2 = jotFoo ;
        {    

        POOPR
        }
            __1
            etThread.traceF( tinP , T("got   [vv]:    ")+TF2(vv1,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ;
            countT vv1 = *(countT*)(const byteT*)page1 ;
            pageC page1 = jotFoo ;
        {    

        SCOOPS
    {
    IFsCRATCH

    }
        etThread.traceF( tinP , T("wrote [idJot,vv]:    ")+TF2(idJot,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED)+T("    ")+TF2(vv,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ;
        countT idJot = jotFoo.writeF( tinP , (byteT*)&vv , sizeof vv ) ;

        }
            vv |= ido ;
            vv <<= 4 ;
        {
        while( cDo -- )
        countT cDo = 7 ;
        countT vv = ido ;
    {
    for( countT ido = 1 ; ido <= 2 ; ido ++ )

    jotC jotFoo( tinP , "foo" , flJOTc_WRITE | flJOTc_DELETE | flJOTc_DOnOTrEGISTER ) ;
{

TODO

/*1*/WAKEsHOWtEXT( "test.jotC.write.read.with.impotence" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

