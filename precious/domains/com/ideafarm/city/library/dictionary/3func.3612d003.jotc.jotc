
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    //etherC::etRockIF( tinP ).traceF( tinP , T("jotC + [this,tag,name]: ")+TF2((countT)this,flFORMAT_UNSIGNED|flFORMAT_NObIGITvALUES)+T("    ")+TF2(tagHighNibble,flFORMAT_UNSIGNED|flFORMAT_NObIGITvALUES)+T("    ")+T(postNameP) ) ;

    tinP.pEther->delF( tinP , pcpIdBookSizePairs ) ;
    }
        idMaxWritten += cJots ;
        }
            pcc += 2 ;
            cJots += cbUsed / sizeof( handle0111C ) ;

            idBookLath = idBook ;
            __( cbUsed % sizeof( handle0111C ) ) ;
            __( idBook - 1 - idBookLath ) ;
            countT cbUsed = pcc[ 1 ] ;
            countT idBook = pcc[ 0 ] ;
        {
        while( cBooks -- )
        countT* pcc = pcpIdBookSizePairs + 1 ;
        countT cBooks = *pcpIdBookSizePairs ;
        ZE( countT , idBookLath ) ;
        ZE( countT , cJots ) ;
    {
    if( pcpIdBookSizePairs )

    bksIndex.cbEachBookF( tinP , pcpIdBookSizePairs ) ;
    ZE( countT* , pcpIdBookSizePairs ) ;

    idMaxWritten = idLathRead = tagHighNibble ; // SEE jotC::writeF FOR THE SPECIFICATION OF THE BIT LAYOUT OF AN idJot VALUE

    }
        tagHighNibble = ( offr << sizeof( countT ) * SB - 4 ) | BM_HIGH ;

        }
            BLAMMO ;
        {
        if( offr == CsLOTSjOTrEGISTRY )
        }
            }
                break ;
                idSlotJot = 1 + offr ;
                tinP.ppJot[ offr ] = this ;
            {
            if( !tinP.ppJot[ offr ] )
        {
        for( ; offr < CsLOTSjOTrEGISTRY ; offr ++ )
        ZE( countT , offr ) ;
    {
    if( !( F(flagsP) & flJOTc_DOnOTrEGISTER ) )

    }
        if( POOP ) return ;
        FV( flJOTc , flagsP ) ;
        __Z( postNameP ) ;
        if( POOP ) return ;
    {
    IFbEcAREFUL
{
flagsCt( flagsP )
idMaxWritten( 0 ) ,
idLathRead( 0 ) ,
cIndexEntriesPerIndexBook( bksIndex.cbBodyBookF() / sizeof( handle0111C ) ) ,
bksData(  tinP , TAG( TAGiDnULL ) , ( F(flagsP) & flJOTc_PRIVATE ? TF2(tinP.osPid,flFORMAT_UNSIGNED|flFORMAT_NObIGITvALUES)+T(".")+TF2(tinP.monitor.idThread,flFORMAT_UNSIGNED|flFORMAT_NObIGITvALUES)+T(".") : T("") )+T(postNameP)+T(".jotC.data" ) , F(flagsP) & flJOTc_PRIVATE ? ifcIDsTATEsPACE_SCRATCH : ifcIDsTATEsPACE_MULTIPLEaDAMS , ( F(flagsP) & flJOTc_WRITE ? flBOOKSc_WRITER : flBOOKSc_null ) | ( F(flagsP) & flJOTc_PURGEoNcT ? flBOOKSc_PURGEoNcT : flBOOKSc_null ) | ( F(flagsP) & flJOTc_DELETE ? flBOOKSc_PURGEoNdT : flBOOKSc_null ) , !( F(flagsP) & flJOTc_WRITE ) ? 0 :                           cbDataBookP        ? cbDataBookP        : CBjOTbOOKdEFAULT                           , cKeepInactiveP , 0 , 0 , 0 , idMemorySpaceP ) ,
bksIndex( tinP , TAG( TAGiDnULL ) , ( F(flagsP) & flJOTc_PRIVATE ? TF2(tinP.osPid,flFORMAT_UNSIGNED|flFORMAT_NObIGITvALUES)+T(".")+TF2(tinP.monitor.idThread,flFORMAT_UNSIGNED|flFORMAT_NObIGITvALUES)+T(".") : T("") )+T(postNameP)+T(".jotC.index") , F(flagsP) & flJOTc_PRIVATE ? ifcIDsTATEsPACE_SCRATCH : ifcIDsTATEsPACE_MULTIPLEaDAMS , ( F(flagsP) & flJOTc_WRITE ? flBOOKSc_WRITER : flBOOKSc_null ) | ( F(flagsP) & flJOTc_PURGEoNcT ? flBOOKSc_PURGEoNcT : flBOOKSc_null ) | ( F(flagsP) & flJOTc_DELETE ? flBOOKSc_PURGEoNdT : flBOOKSc_null ) , !( F(flagsP) & flJOTc_WRITE ) ? 0 : sizeof( handle0111C ) * ( cIndexEntriesBookP ? cIndexEntriesBookP : CBjOTbOOKdEFAULT / sizeof( handle0111C ) ) , cKeepInactiveP , 0 , 0 , 0 , idMemorySpaceP ) ,
_idThreadCt( tinP.monitor.idThread ) ,
tagHighNibble( 0 ) ,
idSlotJot( 0 ) ,
grabC( tinP , TAG( TAGiDnULL ) , flagsGrabP | flGRABc_NOTjEALOUS , idGrabLayerP ) ,     // flGRABc_NOTjEALOUS IS ADDED BECAUSE USING ME WILL USUALLY OR ALWAYS RESULT IN booksC BEING GRABBED
/*1*/jotC::jotC( tinS& tinP , const osTextT* const postNameP , const flagsT flagsP , const countT cbDataBookP , const countT cIndexEntriesBookP , const countT cKeepInactiveP , countT idGrabLayerP , flagsT flagsGrabP , countT idMemorySpaceP ) :/*1*/

// IF flJOTc_DOnOTrEGISTER THEN I WILL NOT SET ANY BITS IN NM_HIGH FOR idJot VALUES

// IF IT IS EVER NECESSARY TO SUPPORT EARLY/LATE, EDIT THIS DEF TO AVOID USING textC (THE T MACRO) IF EARLY/LATE
// I CANNOT BE USED EARLY/LATE BECAUSE I USE textC TO CONSTRUCT A UNIQUE NAME

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

