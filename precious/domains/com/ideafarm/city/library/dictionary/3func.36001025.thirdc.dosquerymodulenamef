
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    _OUT_

    if( POOP ) delF( tinP , postP ) ;
    delF( tinP , postOs ) ;
    c_strncpyIF( tinP , postP , ifFileNameC( tinP , *this  , postOs ) , cMax + 2 ) ;
    newF( tinP , LF , postP , cMax + 2 ) ; ___( postP ) ;
    #endif

        __( tinP.brcRaw == ERROR_INSUFFICIENT_BUFFER ) ;
        BOSdOnOTtEST( WHATgbo , GetLastError() )

        BOSpOOP
        BOS( WHATgbo , BOSoK , GetModuleFileName( (HMODULE)handleP.osF( ifcIDtYPEhANDLE_DLL ) , postOs , cMax + 1 ) )

    #elif defined( __NT__ )
        BOSpOOP
        BOSI( WHATgbo , BOSfAIL , DosQueryModuleName( (HMODULE)handleP.osF( ifcIDtYPEhANDLE_DLL ) , cMax + 1 , postOs ) )
    #ifdef __OS2__

    newF( tinP , LF , postOs , cMax + 2 ) ; ___( postOs ) ;
    ZE( osTextT* , postOs ) ;
    __Z( cMax ) ;
    const countT cMax = dosQuerySysInfoMaxPathLengthIF( tinP ) ;

    _INoLD_

    }
        if( POOP ) return ;
        __( sizeof( countT ) != sizeof( HMODULE ) || fnu ) ;
        ZE( boolT , fnu ) ;
        __Z( handleP ) ;
        __NZ( postP ) ;
        if( POOP ) return ;
    {
    IFbEcAREFUL
    SCOOP
{
/**//*1*/voidT thirdC::dosQueryModuleNameF( tinS& tinP , osTextT*& postP , const handleC& handleP )/*1*/
*/
 handleP
 postP
arguments
it is illegal to refer to this symbol in the definition of an adam
\<A HREF=\"5.1020027.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$dosQueryModuleNameF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

