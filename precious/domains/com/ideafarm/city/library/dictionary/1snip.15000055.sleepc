
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


;
}
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34005.sleepC.blammoIfIF!||
 static voidT blammoIfIF( tinS& tinP ) ;
/* commands */

 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34004.sleepC.operator_increment!||
 voidT operator ++( sCountT scP ) ; //ILLEGAL
 voidT operator ++( voidT ) ;
/* operators */

 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34003.sleepC.sleepC!||
 sleepC( tinS& tinP , const countT idLineCtP , const countT idiFileCtP , const byteT* const pbBitsCtP , const boolT bOsCallP = 0 ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34002.sleepC.dt_sleepC!||
 ~sleepC( voidT ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34001.sleepC.NEWdELcLASSb!||
 NEWdELcLASSpROTOS
/* birth , death */

/**/
    public :

    const boolT        bOuter ;
    const countT       bOsCall ;
    tinS* const        pTin ;
    const byteT        pbBitsCtSave[ CBbITScT ] ;
    const countT       idiFileCtSave ;
    const countT       idLineCtSave ;
{
/*1*/class _export sleepC/*1*/

/**/
*/
the only function of this object is to edit tinS::grabPseudo so that the monitor knows that the thread is locked in sleep
an object of my class must be constructed on any thread that calls a thirdC::DosSleep*F member
\<A HREF=\"5.15000055.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

