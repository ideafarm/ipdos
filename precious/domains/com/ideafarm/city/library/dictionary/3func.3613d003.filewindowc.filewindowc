
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    }
        hMap.osF( ifcIDtYPEhANDLE_FILEmAPPING , oshMap , 0 , POOP ? 0 : tinP.brcRaw ) ;
    
        BOSpOOP
        BOS( WHATgbo , BOSoK , MapViewOfFileExNuma( (HANDLE)oshMap , osf2 , offHiP , offLoP , cbP , 0 , thirdC::osOffNumaNodeValidChosenIF( processGlobal1I.idNumaNode ) ) )

        }
            cbWindow = cbFileLo - offLoP ;
            )
                offHiP == cbFileHi - 1
                ||
                offHiP == cbFileHi
            (
            if
        {
        if( !cbWindow )

        ;
            : FILE_MAP_READ
            ? FILE_MAP_ALL_ACCESS
        const flagsT osf2 = F(flagsCt) & flFILEwINDOW_WRITE

        countT oshMap = tinP.brcRaw ;
    {
    if( !POOP )

    }
        BOSpOOP
        BOS( WHATgbo , BOSoK , CreateFileMappingNuma( (voidT*)hFileP.osF( ifcIDtYPEhANDLE_FILE ) , &sa , osf1 , 0 , 0 , 0 , thirdC::osOffNumaNodeValidChosenIF( processGlobal1I.idNumaNode ) ) )

        ;
            : PAGE_READONLY
            ? PAGE_READWRITE

        const flagsT osf1 = F(flagsCt) & flFILEwINDOW_WRITE

        SECURITYaTTRIBUTE_saUNRESTRICTED ;
    {

    }
        if( POOP ) return ;
        __( offLoP % cbGrain ) ;
        }
            }
                if( offEndLo < offLoP && offEndLo > cbFileLo ) { __1 }              // SPECIFIED LENGTH WRAPS AND WRAPPED PART EXTENDS BEYOND END OF FILE
            {
            else if( offHiP == cbFileHi - 1 )
            }
                else                    { __( offEndLo > cbFileLo ) ; }             // SPECIFIED LENGTH DOES NOT WRAP BUT EXTENDS BEYOND END OF FILE
                if( offEndLo < offLoP ) { __1                         }             // SPECIFIED LENGTH WRAPS BEYOND END OF FILE
            {
            if( offHiP == cbFileHi )

            countT offEndLo = offLoP + cbP ;
        {
        else
        }
            __( offHiP == cbFileHi - 1 && offLoP < cbFileLo ) ;                     // REMAINDER OF FILE CANNOT BE FULLY ADDRESSED USING VALUES [0,-1]
            __( offHiP <  cbFileHi - 1 ) ;                                          // REMAINDER OF FILE CANNOT BE FULLY ADDRESSED USING VALUES [0,-1]
        {
        if( !cbP )

        __( offHiP == cbFileHi && offLoP >= cbFileLo ) ;                            // offLo IS AT OR BEYOND END OF FILE
        __( offHiP >  cbFileHi ) ;                                                  // offHi IS BEYOND END OF FILE
        __NZ( !cbFileLo && !cbFileHi ) ;                                            // FILE IS NULL LENGTH
        __NZ( !hFileP ) ;
        if( POOP ) return ;
    {
    IFbEcAREFUL

    }
        DEL( pInfo ) ;
        cbFileHi = pInfo->cbUsedHigh ;
        cbFileLo = pInfo->cbUsed     ;
        etherP.diskFileQueryF( tinP , pInfo , hFileP ) ;
        ZE( infoFileS* , pInfo ) ;
    {
    if( ~hFileP )

    }
        cbGrain = info.dwAllocationGranularity ;
        GetSystemInfo( &info ) ;
        SYSTEM_INFO info ;
    {
{
flagsCt( flagsP )
hMap( tinP , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_FILEmAPPING ) ,
cbGrain( 0 ) ,
cbWindow( cbP ) ,
/*1*/fileWindowC::fileWindowC( tinS& tinP , etherC& etherP , const handleC& hFileP , countT offLoP , countT offHiP , countT cbP , const flagsT flagsP ) :/*1*/

/**/

*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

