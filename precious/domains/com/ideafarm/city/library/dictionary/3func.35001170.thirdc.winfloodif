
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    }
        #endif

            BOSpOOP
            BOS( WHATgbo , BOSoK , DeleteObject( oshBrush ) )
            BOSdOnOTtEST( WHATgbo , SelectObject( (HDC)hDrawP.osF( ifcIDtYPEhANDLE_DRAWpRIVATE ) , oshBrusho ) ) //U::DEVELOP ERROR CHECKING THAT WILL WORK FOR SelectObject

            BOSpOOP
            BOS( WHATgbo , BOSoK , ExtFloodFill( (HDC)hDrawP.osF( ifcIDtYPEhANDLE_DRAWpRIVATE ) , idcAt , idrAt , rgbTestP , F(flagsP) & flDRAW_FLOODuNTIL ? FLOODFILLBORDER : FLOODFILLSURFACE ) )

            //}
            //    LOGrAWtID8( "thirdC::winFloodIF: at (col,row):" , R( mIdColAtP ) , " " , R( mIdRowAtP ) , ": rgbHere is " , rgbHere , bToBorder ? "; fill until " : "; fill while " , rgbTestP ) ;
            //    countT rgbHere = tinP.brcRaw ;
            //    BOSpOOP
            //    BOS( WHATgbo , BOSfAILiFmINUS1 , GetPixel( (HDC)hDrawP.osF( ifcIDtYPEhANDLE_DRAWpRIVATE ) , idcAt , idrAt ) )
            //    boolT bToBorder = F(flagsP) & flDRAW_FLOODuNTIL ;
            //{

            HANDLE oshBrusho = (HANDLE)tinP.brcRaw ;
            BOSdOnOTtEST( WHATgbo , SelectObject( (HDC)hDrawP.osF( ifcIDtYPEhANDLE_DRAWpRIVATE ) , oshBrush ) ) //U::DEVELOP ERROR CHECKING THAT WILL WORK FOR SelectObject
            HBRUSH oshBrush  = (HBRUSH)tinP.brcRaw ;
            BOSpOOP
            BOS( WHATgbo , BOSoK , CreateSolidBrush( rgbDrawP ) )

            countT idrAt   = R( winOsRowIF( mIdRowAtP , cRowsDraw ) ) ;
            countT idcAt   = R( winOsColIF( mIdColAtP             ) ) ;

            const countT cRowsDraw = ((const HANDLEaPPnOTEScOUNTcLASS&)hDrawP).c2 ;

        #if defined( __NT__ )
    {
    if( !( F(flagsP) & flDRAW_SUPPRESSpELcOLORcHANGES ) )
{
/*1*/voidT thirdC::winFloodIF( tinS& tinP , const handleC& hDrawP , const measureT mIdColAtP , const measureT mIdRowAtP , const countT rgbTestP , const countT rgbDrawP , const flagsT flagsP )/*1*/

/**/
*/
for max speed, i contain no overhead and i obtain my parameters from tinP
it is illegal to refer to this symbol in the definition of an adam
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

