
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    }
        cNestP -- ;

        else             ((bitNodeS*)( (*pNapkinsP)[ - 1 + (countT)p1 & ~BM_HIGH ] ))->traceF( tinP , cNestP , pNapkinsP ) ;
        if( !pNapkinsP ) ((bitNodeS*)(                     (countT)p1 & ~BM_HIGH   ))->traceF( tinP , cNestP , pNapkinsP ) ;

        cNestP ++ ;
        tinP.pEther->traceF( tinP , TPS("",cNestP,strokeS('.'))+T("1") ) ;
    {
    if( (countT)p1 & ~BM_HIGH )

    }
        cNestP -- ;

        else             ((bitNodeS*)( (*pNapkinsP)[ - 1 + (countT)p0 & ~BM_HIGH ] ))->traceF( tinP , cNestP , pNapkinsP ) ;
        if( !pNapkinsP ) ((bitNodeS*)(                     (countT)p0 & ~BM_HIGH   ))->traceF( tinP , cNestP , pNapkinsP ) ;

        cNestP ++ ;
        tinP.pEther->traceF( tinP , TPS("",cNestP,strokeS('.'))+T("0") ) ;
    {
    if( (countT)p0 & ~BM_HIGH )

    //if( (countT)p1 & BM_HIGH ) tinP.pEther->traceF( tinP , TP("",cNestP)+T("deleted") ) ;
    //if( (countT)p0 & BM_HIGH ) tinP.pEther->traceF( tinP , TP("",cNestP)+T("created") ) ;
{
/*1*/voidT bitNodeS::traceF( tinS& tinP , countT& cNestP , napkinsC* pNapkinsP )/*1*/

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

