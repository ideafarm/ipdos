
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    __Z( psttDiskP ) ;
    }
        if( psttBest->idAdam > 3 ) { strMakeF( tinP , LF , psttDiskP , psttBest ) ; ___( psttDiskP ) ; }
        }
            }
                }
                    delF( tinP , postDisk ) ;
                    }
                        psttBest[ CSpREFIX + 3 ] = psttDisk[ CSpREFIX + 3 ] ;
                        cbBest = cbFree ;
                    {
                    if( third.c_zDiskFLongFileNamesOKF( tinP , postDisk ) )
                    strMakeF( tinP , LF , postDisk , psttDisk ) ; ___( postDisk ) ;
                    ZE( osTextT* , postDisk ) ;
                {
                if( bLocal && cbBest < cbFree )
                DEL( pInfo ) ;
                countT cbFree = pInfo->cBytesPerSector * pInfo->cSectorsPerAllocationUnit * pInfo->cUnusedUnits ;
                boolT bLocal = pInfo->bLocal ;
            {
            if( pInfo )

            }
                if( POOP ) { POOPR ; }
                tinP.pEtScratch->diskInfoF( tinP , pInfo , psttDisk , 1 ) ; ___( pInfo ) ;
                SCOOPS
            {
            ZE( infoDiskS* , pInfo ) ;
        {
        for( psttDisk[ CSpREFIX + 3 ] = 'c' ; psttDisk[ CSpREFIX + 3 ] <= 'z' ; ++ psttDisk[ CSpREFIX + 3 ] ) // 2011.10.24: ASCENDING NOW
        ZE( countT , cbBest ) ;
        psttBest[ CSpREFIX + 3 ] = 0 ;
        psttBest[ CSpREFIX + 2 ] = '/' ;
        psttBest[ CSpREFIX + 1 ] = '/' ;
        psttBest[ CSpREFIX     ] = '/' ;
        psttDisk[ CSpREFIX + 3 ] = 0 ;
        psttDisk[ CSpREFIX + 2 ] = '/' ;
        psttDisk[ CSpREFIX + 1 ] = '/' ;
        psttDisk[ CSpREFIX     ] = '/' ;
        SETpREFIX( psttBest , 4 , 0 ) ;
        SETpREFIX( psttDisk , 4 , 0 ) ;
        strokeS psttBest[ CSpREFIX + 4 ] ;
        strokeS psttDisk[ CSpREFIX + 4 ] ;
    {
    IFsCRATCH
    _IO_

    }
        if( POOP ) return ;
    {
    IFbEcAREFUL
    SCOOP
{
/*1*/voidT etherC::diskFindMostFreeSpaceF( tinS& tinP , strokeS*& psttDiskP )/*1*/

/**/
*/
  must be 0
 psttDiskP
arguments
remote file systems will be excluded in the search
  \<A HREF=\"5.e210104.1.1.0.html\"\>e210104:  WAKEsHOW( "example.simplest.func.1030020.etherC.diskFindMostFreeSpaceF" )\</A\>
 simplest
examples
\<A HREF=\"5.1030020.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$diskFindMostFreeSpaceF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//

