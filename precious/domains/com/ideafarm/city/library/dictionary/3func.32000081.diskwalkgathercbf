
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return bDoIt ;

    }
        }
            }
                if( tinP.bosFail ) tinP.pEther->traceF( tinP , T("diskWalkGatherCBF / error: could not move [postNameP,postNameClean]:    ")+T(postNameP)+T("    ")+T(postNameClean) ) ;
                BOS( WHATsfr , BOSoK , MoveFile( postNameP , T(info.postTo)+T(postNameClean) ) ) ;

                //tinP.pEther->traceF( tinP , T("diskWalkGatherCBF [postNameP,to]:  ")+T(postNameP)+T("                ")+T(postNameClean) ) ;

                }
                    }
                        postc ++ ;
                        if( *postc == '\\' ) *postc = '.' ;
                    {
                    while( *postc )
                    osTextT* postc = postNameClean ;
                {
                BOSnOtIN( strcpy( postNameClean , postNameUse ) )
                osTextT postNameClean[ TUCK << 1 ] ;

                }
                    if( *postNameUse ) postNameUse ++ ;
                    postNameUse = (osTextT*)_brcRaw ;
                    BOSnOtIN( strchr( postNameUse , '\\' ) )
                {
                while( *postNameUse && cSlashSkip -- )
                const osTextT* postNameUse = postNameP ;

                countT cSlashSkip = info.pcArgApp ? *info.pcArgApp : 0 ;

                ZE( countT , _brcRaw ) ;
            {
            else
            }
                //if( tinP.bosFail && tinP.brcQuery != ERROR_ALREADY_EXISTS ) BOSpOOP ;
                //BOS( WHATsfr , BOSoK , CreateDirectory( info.postTo , 0 ) ) ;
                //info.postTo[ costTo - 1 ] = 0 ;
                //countT costTo = tinP.brcRaw ;
                //BOSdOnOTtEST( WHATgbo , strlen( info.postTo ) )
            {
            if( bDir )

            boolT  bDir = postNameP[ costLike - 1 ] == '\\' ;
            countT costLike = tinP.brcRaw ;
            BOSdOnOTtEST( WHATgbo , strlen( postNameP ) )
        {
        if( bDoIt )

        ;
            : 1
            ? (*info.pCbf)( tinP , cDirsP , cFilesP , bQuitP , postNameP , pcArgP )
        bDoIt = info.pCbf

        //BOSdOnOTtEST( WHATgbo , strcpy( info.postTo + info.costToRoot , postNameP + info.costFromRoot ) )
        diskWalkCopyInfoS& info = *(diskWalkCopyInfoS*)pcArgP ;
    {
    if( postNameP )
    ZE( boolT , bDoIt ) ;
    _IO_
{
/*1*/boolT diskWalkGatherCBF( tinS& tinP , countT& cDirsP , countT& cFilesP , const boolT& bQuitP , const osTextT* const postNameP , countT* const pcArgP , const countT* const pModuloFilesP , const countT* const pModuloDirsP )/*1*/

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

