
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    }
        }
            }
                if( F(flagsP) & flSLEEP_TALK ) strokeF( tinP , T("")+S2(saOLD_EDITeRASEbACKtOmARK,scOld_EDIT) ) ;_WQ
                sleepEndF( tinP ) ;_WQ
                third.dosSleepIF( tinP , timeGrain ) ;_WQ
                sleepStartF( tinP ) ;_WQ
                }
                    delF( tinP , psttw ) ;_WQ
                    strokeF( tinP , T("\r")+S2(0,scOld_SYSmARK)+T(psttw) ) ;_WQ
                    strFromTimeF( tinP , psttw , time , 0 ) ; ___( psttw ) ;_WQ
                    ZE( strokeS* , psttw ) ;_WQ
                {
                if( F(flagsP) & flSLEEP_TALK )
                time -= timeGrain ;_WQ
            {
            while( !POOP && time )
        {
        else
        }
            sleepEndF( tinP ) ;_WQ
            third.dosSleepIF( tinP , 0 ) ;_WQ
            sleepStartF( tinP ) ;_WQ
        {
        if( !time )

        countT time = ( timeP / timeGrain ) * timeGrain ;_WQ
        if( timeGrain > TOCK * 2 ) timeGrain = TOCK * 2 ;_WQ
        if( !timeGrain ) timeGrain = 1 ;_WQ
        if( timeGrain > timeP ) timeGrain = timeP ;_WQ
        if( !timeGrain ) timeGrain = timeP / 0x10 ;_WQ
        countT timeGrain = timeGrainP ;_WQ
    {
    if( !( F(flagsMode) & flTHIRDmODE_TESTaUTO ) || F(flagsP) & flSLEEP_IGNORE_flTHIRDmODE_TESTaUTO || F(flagsMode) & flTHIRDmODE_TESTaUTOdOsLEEPS )
    _IO_

    }
        if( POOP ) return ;
        FV( flSLEEP , flagsP ) ;_WQ
        if( POOP ) return ;

        if( POOP && this != &etPrimeIF( tinP ) ) { BLAMMO ; }  // PREVENTS CPU PEGGING; WILL GET BLAMMO INSTEAD
    {
    IFbEcAREFUL
    SCOOP
{
/*1*/voidT etherC::osSleepF( tinS& tinP , const countT timeP , const countT timeGrainP , const flagsT flagsP )/*1*/

/**/
*/
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/1snip.001004b.flSLEEP!||
 flagsP
  if ( F(flagsP) & flSLEEP_TALK ) then the displayed time is updated after each timeGrainP
  if ze then timeP / 10 is used
  the duration of each nap, during which this thread is really sleeping  
 timeGrainP
   warning: value 0 can result in locking out lower priority threads in a multithreaded adam class
  can be 0
 timeP
arguments
returns early if impotence is detected
checks for asynchronous impotence (etPrimeIF( tinP )) after each timeGrainP nap
takes naps of length timeGrainP each until have napped for timeP
  \<A HREF=\"5.1510104.1.1.0.html\"\>1510104:  WAKEsHOW( "example.simplest.func.103006f.etherC.osSleepF" )\</A\>
 simplest
examples
\<A HREF=\"5.103006f.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$osSleepF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//

