
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etherC::loafIF( tinP ) ;

}
    ++ s ; ether.osSleepF( tinP , TOCK ) ;

    }
        etThread.strokeF( tinP , T(bDoneCounting?"*":" ")+T("[pertuckDirs,pertuckFiles]: ")+TF2(pertuckDirs,flFORMAT_UNSIGNED|flFORMAT_NObIGITvALUES)+tb+TF2(pertuckFiles,flFORMAT_UNSIGNED|flFORMAT_NObIGITvALUES)+tcr ) ;

        countT pertuckFiles = cFilesCopied * TUCK / cFiles ;
        countT pertuckDirs  = cDirsCopied  * TUCK / cDirs  ;
    {
    if( cDirs && cFiles )
{
while( !ether && !bDoneCopying || ( cAfter && cAfter -- ) )
countT cAfter = 1 ;
sleepC s( tinP , TAG( TAGiDnULL ) ) ;
TN( tcr , "\r\n" ) ;
TN( tb , " " ) ;

etThread.osThreadF( TaRG1( tmCopyF  ) , (countT)&cDirsCopied , (countT)&cFilesCopied , (countT)&bDoneCopying  ) ;
etThread.osThreadF( TaRG1( tmCountF ) , (countT)&cDirs       , (countT)&cFiles       , (countT)&bDoneCounting ) ;
ZE( boolT  , bDoneCopying  ) ;
ZE( boolT  , bDoneCounting ) ;
ZE( countT , cFilesCopied  ) ;
ZE( countT , cDirsCopied   ) ;
ZE( countT , cFiles        ) ;
ZE( countT , cDirs         ) ;

TODO

DONE( tmCopyF )
}
    bDoneP = 1 ;

    ((thirdC&)etThread).diskWalkCopyF( tinP , cDirsP , cFilesP , ether , postTO , postFROM , myCBF ) ;

    boolT&  bDoneP  =  *(boolT*)pTaskP->c3 ;
    countT& cFilesP = *(countT*)pTaskP->c2 ;
    countT& cDirsP  = *(countT*)pTaskP->c1 ;
{
if( pTaskP && pTaskP->c1 && pTaskP->c2 && pTaskP->c3 )
TASK( tmCopyF )

DONE( tmCountF )
}
    bDoneP = 1 ;
    cFilesP -- ;
    cDirsP -- ;

    thirdC::diskWalkIF( tinP , cDirsP , cFilesP , postFROM , ether ) ;


    ++ s ; ether.osSleepF( tinP , TOCK << 3 ) ;
    sleepC s( tinP , TAG( TAGiDnULL ) ) ;

    cFilesP ++ ;
    cDirsP ++ ;

    boolT&  bDoneP  =  *(boolT*)pTaskP->c3 ;
    countT& cFilesP = *(countT*)pTaskP->c2 ;
    countT& cDirsP  = *(countT*)pTaskP->c1 ;
{
if( pTaskP && pTaskP->c1 && pTaskP->c2 && pTaskP->c3 )
TASK( tmCountF )

#define postTO   "\\tmp\\test.copy\\"
#define postFROM "\\ideafarm.home.1\\"

}
    return bDoIt ;

    boolT  bDoIt = !thirdC::c_strstrIF( tinP , postNameP , "do.not.copy.a.file.with.this.in.its.name" ) ;
{
boolT myCBF( tinS& tinP , countT& cDirsP , countT& cFilesP , const osTextT* const postNameP , countT* const pcArgP )

/*1*/WAKEsHOWtEXT( "example.other.3func.34194.thirdC.diskWalkCopyF.progress.plain" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//

