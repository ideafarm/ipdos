
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


/*3*/
#define flTHREADlAUNCH_EPHEMERAL               /*fl*/
#define flTHREADlAUNCH_INHERITjOTrEGISTRATIONS /*fl*/
#define flTHREADlAUNCH_SHOWpONY                /*fl*/
#define flTHREADlAUNCH_FAKE                    /*fl*/
#define flTHREADlAUNCH_ORPHAN                  /*fl*/
#define flTHREADlAUNCH_WHENqUITTING            /*fl*/
/*3*/
/*1*//*flTHREADlAUNCH*//*1*/
/**/
*/
   exception: using signC objects or another mechanism to ensure that the object is not destroyed before a reference to it is made
  never use this flag when passing in a reference to an object constructed and destructed automatically on the launching thread
  when using this flag, think carefully about references passed into the launched thread, and when those objects are destroyed
   benefit: it is a bit harder, though still possible, to destroy an object before the child thread has finished referring to it
  avoid using this flag when practical
 coding style
 this flag has no effect on process behavior (on main thread behavior)
 the launching thread, if not main, will not wait for threads launched with this flag to terminate
flTHREADlAUNCH_ORPHAN
it is illegal to specify flTHREADlAUNCH_FAKE anywhere other than in func.10200da.*
it is illegal to specify flTHREADlAUNCH_FAKE in the definition of an adam
\<A HREF=\"5.00100f6.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

