
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    _OUT_

    }
        }
            dec02AM( tinP.cKidThreads ) ; //ADDED RECENTLY CAUSE ABSENCE SEEMED TO BE A BUG
            dec02AM( tinP.pAdamGlobal1->_thirdC_.cAllKidThreads ) ;
        {
        else
        if( F(flagsP) & flTHREADlAUNCH_ORPHAN ) dec02AM( tinP.pAdamGlobal1->_thirdC_.cAllOrphanThreads ) ;
    {
    if( POOP )

    if( POOP && tidP ) tidP = 0 ;
    __( tidP == - 1 ) ;

    #endif

        }
            }
                }
                    }
                        //U::A: hThread.resetF() ;
                        //U::A: tinP.pAdamGlobal4->_thirdC_grab_lOsTid.ungrabF( tinP ) ;
                        //U::A: *tinP.pAdamGlobal1->_thirdC_.pSwThreadHandle = hThread.osF( ifcIDtYPEhANDLE_THREAD ) ;
                        //U::A: tinP.pAdamGlobal1->_thirdC_.lOsTid = tidP ;
                        //U::A: tinP.pAdamGlobal4->_thirdC_grab_lOsTid.grabF( tinP , TAG( TAGiDnULL ) ) ;
                    {
                    if( tidP && tidP != - 1 )
        
                    __( tinP.brcRaw != 1 ) ;
                    BOSpOOP
                    BOS( WHATgbo , BOSmAXcOUNTT , ResumeThread( (HANDLE)hThread.osF( ifcIDtYPEhANDLE_THREAD ) ) )
                    BOSnOvALUE( WHATgbo , SetLastError( 0 ) )
        
                    BOSpOOP
                    BOS( WHATgbo , BOSoK , SetThreadPriority( (HANDLE)hThread.osF( ifcIDtYPEhANDLE_THREAD ) , idp ) )
                    BOSnOvALUE( WHATgbo , SetLastError( 0 ) )
        
                    //}
                    //    thirdC::osSelectProcessorsIF( tinP , idType , &hThread ) ;
                    //
                    //    ;
                    //                : ifcIDtYPEtHREAD_WORKhORSE
                    //                ? ifcIDtYPEtHREAD_SHOWpONY
                    //            : F(flagsP) & flTHREADlAUNCH_SHOWpONY
                    //            ? ifcIDtYPEtHREAD_KERNEL
                    //        : tinP.pAdamGlobal1->idCell < 3
                    //        ? ifcIDtYPEtHREAD_WORKhORSE
                    //    countT idType = etherC::ifc_idHomeI_IF() & fliIDhOME_HOMELESS || etherC::ifc_idHomeIdisk_IF() < 0x100
                    //{
                    //20170213@1456: COMMENTED OUT WITHOUT ANALYSIS TO PERHAPS FIX UNEXPECTED PROCESSOR AFFINITY FOR KERNEL1_MONITOR ADAM
        
                    __Z( hThread ) ;
                    hThread.osF( ifcIDtYPEhANDLE_THREAD , (countT)tinP.brcRaw ) ;
                {
                if( !POOP )

                BOSpOOP
                BOS( WHATgbo , BOSoK , CreateThread( &sa , cbStackP , (tmfosFT)tmFP , pvP , CREATE_SUSPENDED , (ULONG*)&tidP ) )

                BOSnOvALUE( WHATgbo , SetLastError( 0 ) )
                SECURITYaTTRIBUTE_saUNRESTRICTED ;
                int idp = tinP.brcRaw ;
            {
            if( !POOP )
            BOSpOOP
            BOS( WHATgbo , BOStHREADERcODE , GetThreadPriority( (HANDLE)tinP.brcRaw ) )
            BOSdOnOTtEST( WHATgbo , GetCurrentThread() )
            BOSnOvALUE( WHATgbo , SetLastError( 0 ) )
            handleC hThread( tinP , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_THREAD ) ;
        {

    #elif defined( __NT__ )

        __Z( tidP ) ;
        BOSpOOP
        BOSI( WHATgbo , BOSfAIL , DosCreateThread( (ULONG*)&tidP , (tmfosFT)tmFP , (ULONG)pvP , 0 , cbStackP ) )

    #ifdef __OS2__

    //PSEUDODUPLICATED CODE: 1020057 1610003

    inc02AM( tinP.pAdamGlobal1->cThreadsWatched ) ;
    //CONoUTrAW3( "c_beginThreadIF [cThreadsWatched] <-- " , 1 + incv02AM( tinP.pAdamGlobal1->cThreadsWatched ) , "\r\n" ) ;

    }
        inc02AM( tinP.cKidThreads ) ;
        inc02AM( tinP.pAdamGlobal1->_thirdC_.cAllKidThreads ) ;
    {
    else
    if( F(flagsP) & flTHREADlAUNCH_ORPHAN ) inc02AM( tinP.pAdamGlobal1->_thirdC_.cAllOrphanThreads ) ;
    third_flagsProcessStateI_IF( tinP , flPROCESSsTATE_MAINtHREADiSaLONE , 0 ) ;

    }
        //while( !POOP && tinP.pAdamGlobal1->_thirdC_.cAllKidThreads > 0x100 ) { ++ s ; dosSleepWinkIF( tinP ) ; }
        //sleepC s( tinP , TAG( TAGiDnULL ) ) ;
    {
    //U::PROVIDE A PARAMETER OR PERHAPS A PROCESS MODE TO ENABLE THIS OVERRUN PROTECTION

    _INoLD_

    }
        if( POOP ) return ;
            __( !( F(processGlobal1I.flCt) & flCTdTg_tinMainInPool && !( F(processGlobal1I.flDt) & flCTdTg_tinMainInPool ) ) ) ;
        #endif
            __( sizeof( countT ) != sizeof( ULONG ) || fnu ) ;
            __( sizeof( countT ) != sizeof( DWORD ) || fnu ) ;
        #elif defined( __NT__ )
            __( sizeof( countT ) != sizeof( TID ) || fnu ) ;
        #ifdef __OS2__
        ZE( boolT , fnu ) ;
        if( POOP ) return ;
        __( !tinP.pAdamGlobal1->_thirdC_.pSwThreadHandle ) ;
        __Z( cbStackP ) ;
        __Z( tmFP ) ;
        __( tidP ) ;
        FV( flTHREADlAUNCH , flagsP )
        if( POOP ) return ;
    {
    IFbEcAREFUL    
{
/*1*/voidT thirdC::c_beginthreadIF( tinS& tinP , countT& tidP , voidT* const tmFP , voidT* pvP , const countT cbStackP , const flagsT flagsP )/*1*/

#endif
    typedef ULONG (OSF *tmfosFT)( voidT* argP ) ;
#elif defined( __NT__ )
    typedef voidT (OSF *tmfosFT)( ULONG argP ) ;
#ifdef __OS2__
//DUPLICATED CODE: 1020057 1610008

/**/
*/
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/1snip.00100f6.flTHREADlAUNCH!||
 flagsP
 cbStackP
 pvP
 tmFP
 tidP
arguments
  then cc can be passed to the thread
  countT& cc = third.os_cAllKidThreadsI_IF( tinP )
 example
 to do this, pass a reference to the thread so it can decrement
the thread must decrement this counter just before ending
cAllKidThreadsI or tinP.pAdamGlobal1->_thirdC_.cAllOrphanThreads is incremented
the new thread inherits the priority of the calling thread
creates a new thread of execution
it is illegal to refer to this symbol in the definition of an adam
\<A HREF=\"5.1020057.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$c_beginthreadIF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

