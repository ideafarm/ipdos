
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//

#endif

}
    }
        }
            DEL( pInfoFile ) ;
            strMakeF( tinP , LF , psttNameP , pInfoFile->psttIfoName ) ; ___( psttNameP ) ;
        {
        if( pInfoFile )
        diskFindFileOrDirOldF( tinP , pInfoFile , handleP , psttLikeP ) ; ___( pInfoFile ) ;
        ZE( infoFileS* , pInfoFile ) ;
    {
    _IO_

    }
        if( POOP ) return ;
        __( psttLikeP->idAdam < 6 ) ;
        if( POOP ) return ;
        __Z( psttLikeP ) ;
        if( POOP ) return ;
    {
    IFbEcAREFUL
    SCOOP
{
/*1*/voidT etherC::diskFindFileOrDirOldF( tinS& tinP , strokeS*& psttNameP , handleC& handleP , const strokeS* const psttLikeP )/*1*/

//U: IMPOTENCE IF handleP BEFORE OR AFTER I OBTAIN A FILE (OR, ALLOW IT BUT CALL CLOSEEARLY)

#if defined( NEVERdEFINED )
//DEPRECATED.  USE diskFindFileOrDirF

/**/
*/
  must not specify a root directory, e.g. T("///x/")
  must not be 0
 psttLikeP
 handleP
 psttNameP
arguments
psttLikeP must not contain wildcards
psttLikeP contains a string such as "///ideafarm/ephemeral/domains/com/foo/myfile"
returns the single file that is exactly identified by psttLikeP
it is illegal to refer to this symbol in the definition of an adam
\<A HREF=\"5.103001d.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$diskFindFileOrDirOldF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//

