
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    if( pbBitsCtP ) ; //U::

    if( bOsCall ) pTin->grabPseudo.flags |= flGRABc_PSEUDOoScALL ; //IT IS ILLEGAL, THOUGH NOT ENFORCED, TO CONSTRUCT A sleepC OBJECT ON THIS THREAD WHILE I EXIST; THIS IS BECAUSE I DO NOT SAVE AND RESTORE THE grabC FLAGS
    (countT&)pTin->grabPseudo.idiFileCt = idiFileCtP ;
    (countT&)pTin->grabPseudo.idLineCt  = idLineCtP  ;
    }
        pTin->grabPseudo.cGrabbed ++ ;
        if( pTin->grabPseudo.stat.cAcquisitions != - 1 ) inc02AM( pTin->grabPseudo.stat.cAcquisitions ) ;
        else                         pTin->grabPseudo.osTid = tinP.osTid ;
        }
            { BLAMMO ; }
        {
        if( pTin->grabPseudo.osTid )
        }
            { BLAMMO ; }
        {
        if( pTin->grabPseudo.cGrabbed == - 1 )
        pTin->grabPseudo.stat.cCollisionsNew = 0 ; //U:MIGHT OVERWRITE A FEW COLLISIONS THAT SHOULD BE COUNTED AS NEW (I.E. SINCE INCREMENTING idGrabberOk)
        }
            { BLAMMO ; }
        {
        if( pTin->grabPseudo.idGrabberOk != idGrabberMe )
        countT idGrabberMe = 1 + incv02AM( pTin->grabPseudo.idGrabberHigh ) ;
        //CODE SYNCH: 17f0005 1700003
        //SIMULATE WHATEVER grabF DOES TO MAKE grabPseudo LOOK GRABBED
    {
    if( bOuter )

    }
        }
            BLAMMO ;

            etherC::ifcSayIF( ostoBuf , flSAY_LOG | flSAY_APPEND ) ;

            OStEXTAK( ostoBuf , "\r\n" ) ;
            //OStEXTC( ostoBuf , bTlsEarlyLateI , 0 ) ;
            OStEXTC( ostoBuf , bTlsEarlyLateIF() , 0 ) ;
            OStEXTAK( ostoBuf , " bTlsEarlyLateI: " ) ;
            OStEXTC( ostoBuf , tinP.idTin , 0 ) ;
            OStEXTAK( ostoBuf , "\" idTin: " ) ;
            OStEXTA( ostoBuf , tinP.postThreadName ) ;
            OStEXTAK( ostoBuf , "\r\nTINSL: \"" ) ;
            OStEXTC( ostoBuf , pTin->idTin , 0 ) ;
            OStEXTAK( ostoBuf , "\" idTin: " ) ;
            OStEXTA( ostoBuf , pTin->postThreadName ) ;
            OStEXTAK( ostoBuf , "\r\npTin : \"" ) ;
            OStEXT( ostoBuf , 0x80 )
        {
        if( pTin != &tinP )
        TINSL
    {
    if( pTin->idTinNamed != ifcIDtINnAMED_tinHeartI )

    }
        }
            BLAMMO ;

            etherC::ifcSayIF( ostor , flSAY_LOG | flSAY_APPEND ) ;

            OStEXTAK( ostor , "\r\n" ) ;
            OStEXTC( ostor , tinP.idLineMile , 0 ) ;
            OStEXTAK( ostor , "; idLineMile is " ) ;
            //OStEXTC( ostor , tinP.pc Utility[ 1 ] , 0 ) ;
            OStEXTAK( ostor , "\"; pcUtilityI[1] is " ) ;
            OStEXTA( ostor , tinP.postThreadName )
            OStEXTAK( ostor , "sleep blammo 1 (sleepC constructor) on thread \"" )
            OStEXT( ostor , 0x100 ) ;
            LOGcALLnEST( "sleep blammo 1" )

        {
        if( !_bStopOk )

        SET_bStopOk
    {
    if( !( F(tinP.flagsThreadMode3) & flTHREADmODE3_EXCEPTIONrEPORTINGiNpROGRESS ) )
    //CODEsYNC DUPLICATE CODE: 1700005 1700003

    blammoIfIF( tinP ) ;

    }
        BLAMMO ;
    {
    if( pTin == &processGlobal3I.tinVeryVeryEarlyLateMain && F(processGlobal1I.flCt) & flCTdTg_tinVeryEarlyLateMainI && !( F(processGlobal1I.flDt) & flCTdTg_tinVeryEarlyLateMainI ) )
{
bOuter( !tinP.grabPseudo.cGrabbed )
bOsCall( bOsCallP ) ,
pTin( &tinP ) ,
idiFileCtSave( tinP.grabPseudo.idiFileCt ) ,
idLineCtSave( tinP.grabPseudo.idLineCt ) ,
/*1*/sleepC::sleepC( tinS& tinP , const countT idLineCtP , const countT idiFileCtP , const byteT* const pbBitsCtP , const boolT bOsCallP ) :/*1*/

/**/
*/
\<A HREF=\"5.1700003.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

