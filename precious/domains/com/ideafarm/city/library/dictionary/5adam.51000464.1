
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

while( !etThread && ~hDown ) ;
}
    etThread.strokeF( tinP , TF1(cLever)+T(": ")+T(nn)+T("\r\n") ) ;
    const nicNameC& nn = *(const nicNameC*)&swsn.downF( tinP , hDown ) ; // "(const nicNameC&)swsn.downF" IS ILLEGAL BECAUSE THE COMPILER WILL USE A TEMPORARY countT OBJECT
{
do
cLever = 0x456 ;

while( !etThread && ~hDown ) ;
}
    etThread.strokeF( tinP , TF1(cLever)+T(": ")+T(nn)+T("\r\n") ) ;
    const nicNameC& nn = *(const nicNameC*)&swsn.downF( tinP , hDown ) ; // "(const nicNameC&)swsn.downF" IS ILLEGAL BECAUSE THE COMPILER WILL USE A TEMPORARY countT OBJECT
{
do
handleC hDown( tinP , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_STACKwALK ) ;
cLever = 0x123 ;

swsn << nicNameC( 0x55 , 0x66 , 0x77 , 0x88 ) ;
swsn << nicNameC( 0x11 , 0x22 , 0x33 , 0x44 ) ;
cLever = 0x456 ;

swsn << nicNameC( 5 , 6 , 7 , 8 ) ;
swsn << nicNameC( 1 , 2 , 3 , 4 ) ;
switchStackC swsn( tinP , etThread , TAG( TAGiDnULL ) , flSTACKc_null , cLever , flSTACKc_null , ifcSTACKtYPE_nicNameC ) ;
countT cLever = 0x123 ;

TODO

/*1*/WAKEhIDE( "example.other.func.1210026.switchStackC.downF" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

