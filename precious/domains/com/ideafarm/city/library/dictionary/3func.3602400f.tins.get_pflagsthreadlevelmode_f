
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    //OUT

    pcP[ offo ] = 0 ;
    }
        pcP[ offo ++ ] = pFlagsThreadLevelMode[ idn & OFFsLOTtINnESTmAX ] ;
        if( offo >= ccP - 1 ) break ;
    {
    for( countT idn = monitor.cInNest ; idn >= idnf ; idn -- )
    ZE( countT , offo ) ;

    if( (sCountT)idnf < 1 ) idnf = 1 ;
    countT idnf = monitor.cInNest - OFFsLOTtINnESTmAX ;

    //IN

    }
        if( POOP ) return ;
        __Z( pcP ) ;
        if( POOP ) return ;
    {
    IFbEcAREFUL
{
/*1*/voidT tinS::get_pFlagsThreadLevelMode_F( tinS& tinP , countT* const pcP , const countT ccP )/*1*/
/**/
*/
  set it to sizeof tinP.pFlagsThreadLevelMode + 1 unless you are only interested in looking up a few levels
 ccP
  i will terminate the values that i write with a ze value
  i will write the call nest TAG( TAGiDnULL ) values into pcP until at most ccP-1 values have been written
  i do not care what the contents of these objects is
  must point to ccP countT objects
 pcP
  will be set if impotence occurs
  must be 0
 ec
 tinP
arguments
\<A HREF=\"5.12f000b.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$get_pLFnest_F.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

