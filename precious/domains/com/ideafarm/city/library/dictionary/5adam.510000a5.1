
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


//VISIBLE

REST
etThread.osProcessIdPhaseAdamF( tinP , ifcIDpHASEhANDOFFoLD_SHUTTINGdOWN ) ;

etThread.strokeF( tinP , T("ok\r\n") ) ;
ss.waitF( tinP ) ;
sayF( tinP , etThread , bb , S1C('1') ) ;
etThread.osThreadF( tinP , tid , tmF , &ss , flTHREADlAUNCH_null , 0 , (countT)&bb ) ;
ZE( countT , tid ) ;
signC ss(  tinP , TAG( TAGiDnULL ) ) ;
batonC bb(  tinP , TAG( TAGiDnULL ) ) ;

TODO

DONE( tmF )
if( pTaskP && pTaskP->c1 ) sayF( tinP , etThread , *(batonC*)pTaskP->c1 , S1C('2') ) ;
TASK( tmF )

}
    batonP.ungrabF( tinP ) ;
    while( cTries -- ) etThread.strokeF( tinP , sttP ) ;
    countT cTries = 0x1000 ;
    batonP.grabF( tinP , TAG( TAGiDnULL ) ) ;
{
voidT sayF( tinS& tinP , etherC& etThread , batonC& batonP , const strokeS sttP )

/*1*/WAKEhIDE( "example.simplest.func.10a0004.batonC.operator_increment" )/*1*/
/**/
*/
\<A HREF=\"5.5a00104.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

