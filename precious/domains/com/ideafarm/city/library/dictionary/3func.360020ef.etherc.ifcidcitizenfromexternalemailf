
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return idCmd ;
    }
        sock.readF( tinP , (byteT*)&idCmd , sizeof idCmd ) ;

        sock.writeF( tinP , psttP ) ;

        sock.writeF( tinP , (byteT*)&idCmd , sizeof idCmd ) ;
        idCmd = sizeof( strokeS ) * ( CSpREFIX + psttP->idAdam ) ;

        sock.writeF( tinP , (byteT*)&idCmd , sizeof idCmd ) ;

        sock.connectF( tinP , ifcPORToLD1nICKNAME , socketC::nicNameIF( tinP , *this , T(WWWiDEAFARMcOM) ) ) ;
        socketC sock( tinP , *this , TAG( TAGiDnULL ) ) ;
    {
    countT idCmd = idcNICKNAMEcMD_QUERYiDfROMeXTERNALeMAIL ;

    _IO_

    }
        if( POOP ) return 0 ;
        __Z( psttP ) ;
        if( POOP ) return 0 ;
    {
    IFbEcAREFUL
    SCOOP
{
/*1*/countT etherC::ifcIdCitizenFromExternalEmailF( tinS& tinP , const strokeS* const psttP )/*1*/

/**/
*/
  must not be 0
 psttP
 tinP
arguments
 if the address is not recognized, impotence will -not- occur
 0 if there is no idCitizen with that email address
evaluates to the idCitizen associated with psttP
  \<A HREF=\"5.d830104.1.1.0.html\"\>d830104:  WAKEsHOW( "example.simplest.func.1030116.etherC.ifcIdCitizenFromExternalEmailF" )\</A\>
 simplest
examples
\<A HREF=\"5.1030116.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$ifcIdCitizenFromExternalEmailF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

