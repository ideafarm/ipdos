
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


//VISIBLE

REST
etThread.osProcessIdPhaseAdamF( tinP , ifcIDpHASEhANDOFFoLD_SHUTTINGdOWN ) ;

HEAReNTER( ether )

etThread.strokeF( tinP , TT(timeB1,timeB2)+T("\r\n\r\nsome of this time was spent within osSleepF checking occasionally for impotence\r\nmost of this excess time is due to delays in waking up that were caused by\r\nother threads (in other processes) keeping the computer busy\r\n\r\npress the enter key") ) ;
etThread.osTimeSubtractF( tinP , timeB1 , timeB2 , timeToSleep , 0 ) ;
etThread.strokeF( tinP , T("\r\n\r\nthe elapsed time was actually\r\n\r\n")+TT(timeB1,timeB2)+T("\r\n\r\nnote that this is slightly longer than 8 TOCKs\r\nthe excess time was\r\n\r\n") ) ;

etThread.osTimeSubtractF( tinP , timeB1 , timeB2 , timeA1 , timeA2 ) ;
etThread.osTimeNowF( tinP , timeB1 , timeB2 ) ;
etThread.osSleepF( tinP , timeToSleep , 0 , flSLEEP_TALK ) ;
etThread.osTimeNowF( tinP , timeA1 , timeA2 ) ;

const countT timeToSleep = TOCK * 8 ;

ZE( sCountT , timeB2 ) ;
ZE( countT , timeB1 ) ;
ZE( sCountT , timeA2 ) ;
ZE( countT , timeA1 ) ;

etThread.strokeF( tinP , T("sleeping for 8 TOCKs\r\n\r\n") ) ;

TODO

/*1*/WAKEhIDE( "example.simplest.func.1030071.etherC.osTimeSubtractF" )/*1*/
/**/
*/
\<A HREF=\"5.2510104.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

