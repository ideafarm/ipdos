
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    }
        }
            default : { ether.strFuseF( tinP , psttP , TP("|",cColP) ) ; break ; }
            case 2  : { ether.strFuseF( tinP , psttP , T("|")+tOld+TP("",cColP-tOld.csF(tinP)-1) ) ; break ; }
            case 1  : { ether.strFuseF( tinP , psttP , T("|")+TF3(oTickP,0,cColP-1) ) ; break ; }
            case 0  : { ether.strFuseF( tinP , psttP , TPS("+",cColP,S1C('-')) ) ; break ; }
        {
        switch( oScanP )
    {
    else
    }
        }
            default : { ether.strFuseF( tinP , psttP , TP("@",cColP) ) ; break ; }
            case 2  : { ether.strFuseF( tinP , psttP , T("@")+tOld+TP("",cColP-tOld.csF(tinP)-1) ) ; break ; }
            case 1  : { ether.strFuseF( tinP , psttP , T("@")+TF3(oTickP,0,cColP-1) ) ; break ; }
            case 0  : { ether.strFuseF( tinP , psttP , TPS("@",cColP,S1C('-')) ) ; break ; }
        {
        switch( oScanP )
    {
    else if( oTickP == oTickNowP + 1 && oTickNowP % 0x10 != 0xf )
    }
        }
            default : { ether.strFuseF( tinP , psttP , TP("|",cColP) ) ; break ; }
            case 2  : { ether.strFuseF( tinP , psttP , T("|")+tOld+TP("",cColP-tOld.csF(tinP)-1) ) ; break ; }
            case 1  : { ether.strFuseF( tinP , psttP , T("|")+TF3(oTickP,0,cColP-1) ) ; break ; }
            case 0  : { ether.strFuseF( tinP , psttP , TPS("@",cColP,S1C('-')) ) ; break ; }
        {
        switch( oScanP )
    {
    else if( oTickP == oTickNowP + 0x11 && oTickNowP % 0x10 != 0xf )
    }
        }
            default : { ether.strFuseF( tinP , psttP , TP("|",cColP) ) ; break ; }
            case 2  : { ether.strFuseF( tinP , psttP , T("|")+tOld+TP("",cColP-tOld.csF(tinP)-1) ) ; break ; }
            case 1  : { ether.strFuseF( tinP , psttP , T("|")+TF3(oTickP,0,cColP-1) ) ; break ; }
            case 0  : { ether.strFuseF( tinP , psttP , TPS("@",cColP,S1C('@')) ) ; break ; }
        {
        switch( oScanP )
    {
    else if( oTickP == oTickNowP + 0x10 )
    }
        }
            default : { ether.strFuseF( tinP , psttP , TP("@",cColP) ) ; break ; }
            case 2  : { ether.strFuseF( tinP , psttP , T("@")+tOld+TP("",cColP-tOld.csF(tinP)-1) ) ; break ; }
            case 1  : { ether.strFuseF( tinP , psttP , T("@")+TF3(oTickP,0,cColP-1) ) ; break ; }
            case 0  : { ether.strFuseF( tinP , psttP , TPS("@",cColP,S1C('@')) ) ; break ; }
        {
        switch( oScanP )
    {
    if( oTickP == oTickNowP )

    }
        tOld = TF4(hh,flFORMAT_FOREIGN|flFORMAT_NObASE|flFORMAT_FILLzE,2,0xa)+T(":")+TF4(mm,flFORMAT_FOREIGN|flFORMAT_NObASE|flFORMAT_FILLzE,2,0xa)+T(":")+TF4(ss,flFORMAT_FOREIGN|flFORMAT_NObASE|flFORMAT_FILLzE,2,0xa) ;
        { ZE( sCountT , time2 ) ; ether.osTimeToOldTimeF( tinP , ms , ss , mm , hh , da , mo , ye , dow , time1 , time2 , flOStIMEfROMoLDtIME_OLDtIMEiSutc ) ; }
        ZE( countT , dow ) ;
        ZE( sCountT , ye ) ;
        ZE( countT , mo ) ;
        ZE( countT , da ) ;
        ZE( countT , hh ) ;
        ZE( countT , mm ) ;
        ZE( countT , ss ) ;
        ZE( countT , ms ) ;
    {
    TN( tOld , "" ) ;

    countT time1 = oTickP << 0x18 ;
{
/*1*/voidT cellScanClockF( tinS& tinP , etherC& ether , strokeS*& psttP , const countT oScanP , const countT oTickP , const countT oTickNowP , const countT cColP )/*1*/

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

