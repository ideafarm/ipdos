
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return *this ;

    _OUTbATONsTACKc_
    }
        }
            if( pSgnEvent && F(flags) & flSTACKc_GIVEsIGNnEWpLATE ) pSgnEvent->giveF( tinP ) ;
            newTabsIfF( tinP , ppNew , 0 ) ;
            // IF WE EVER NEED TO GIVE THE SIGN FOR pSwTin, THE giveTakeF MEMBER FOR signC WILL NEED TO BE OVERRIDDEN TO AVOID USING TINSL


            }
                }
                    adjustRefsF( tinP , cPlates , ifcIDaCTIONsTACKaDJUSTrEFS_REFERENCE , ppNew ) ;
                    cPlates ++ ; //U::
                    ppBottom = ppNew ;
                    if( ppBottom ) ppBottom->ppD = ppNew ;
                    ppNew->ppU = ppBottom ;
                {
                else
                }
                    cPlates ++ ; //U::
                    ppTop = ppNew ;
                    if( ppTop ) ppTop->ppU = ppNew ;
                    ppNew->ppD = ppTop ;
                    adjustRefsF( tinP , 1 , ifcIDaCTIONsTACKaDJUSTrEFS_NEWaBOVE , ppNew ) ;
                {
                if( !( F(flags) & flSTACKc_FIFO ) )
            {
            else
            }
                adjustRefsF( tinP , 1 , ifcIDaCTIONsTACKaDJUSTrEFS_REFERENCE , ppNew ) ;
                cPlates ++ ; //U::
                ppTop = ppBottom = ppNew ;
            {
            if( !ppTop )
        {
        if( ppNew )
        newPlateF( tinP , ppNew , valueP ) ;
        ZE( plateS* , ppNew ) ;
        
        if( !( F(flagsState) & flSTACKsTATE_SHIFTlEFTuSED ) ) flagsState |= flSTACKsTATE_SHIFTlEFTuSED ;
    {
    if( !third )
    __( !*p_idCursor - !*p_ppCursor ) ;
    __( *p_idLathRef && !*p_ppLathRef ) ;
    __( ppTop && ppTop->ppU ) ;

    LATHrEF

    CURSOR

    _INbATONsTACKc_

    }
        if( third ) return *this ;
        __( !valueP && !( F(flags) & flSTACKc_ALLOWzE ) ) ;
        if( third ) return *this ;
    {
    IFbEcAREFUL    

    SCOOP
    TINSL
    //U: ALLOW ONLY FOR idType ifcSTACKtYPE_countT OR ifcSTACKtYPE_ANY (WILL NEED TO PROVIDE A PRIVATE MEMBER FUNCTION THAT DOES NOT ENFORCE THIS FOR INTERNAL USE AND USAGE BY switchStackC::stackF)
{
/*1*/stackC& stackC::operator << ( const countT valueP )/*1*/

/**/
*/
   legal:   "countT vv = 3 ; myStack << vv ;"
   illegal: "myStack << 3 ;"
  must not be a literal
  can be 0
 valueP
arguments
after calling this function, stackC::extractF( tinP ) can be used to remove the item that it references
this function zees the internal cursor that is used to make operator [] speedy
evaluates to a reference to this stack object
 this value might be a pointer
places the value of an object onto this stack object
  \<A HREF=\"5.fb10104.1.1.0.html\"\>fb10104:  WAKEsHOW( "example.simplest.func.1150005.stackC.operator_shiftLeft" )\</A\>
 simplest
examples
\<A HREF=\"5.1150005.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

