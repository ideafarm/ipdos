
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etThread.delF( tinP , psttw ) ;
etThread.strokeF( tinP , T("received: \"")+T(psttw)+T("\"\r\n") ) ;
sIn >> psttw ; ___( psttw ) ;
ZE( strokeS* , psttw ) ;

__( idCmd - ifcIDcMDsESSION_ECHO ) ;
sIn >> idCmd ;
ZE( countT , idCmd ) ;

}
    sChat2.writeF( tinP , soulo3 ) ;
    soulC soulo3( tinP , TAG( TAGiDnULL ) , flSOUL_null , ifcIDcMDsESSION_BYE ) ;

    sChat2.readF( tinP , sIn ) ;
    sChat2.writeF( tinP , sBig ) ;

    sChat2.connectF( tinP ) ;
    socketC sChat2( tinP , etThread , TAG( TAGiDnULL ) ) ;
{
soulC sIn( tinP , TAG( TAGiDnULL ) ) ;

}
    etThread.ifcChatRelayPackageF( tinP , sBig , sSmall , DDNUMB , TF1(DDNUMB)+T("/example.simplest.ifcChatF") ) ;

    etThread.strokeF( tinP , T("sent: \"")+tSay+T("\"\r\n") ) ;
    sSmall << (strokeS*)tSay ;
    soulC sSmall( tinP , TAG( TAGiDnULL ) , flSOUL_null , ifcIDcMDsESSION_ECHO ) ;

    TN( tSay , "hello from d240104!" ) ;
{
soulC sBig( tinP , TAG( TAGiDnULL ) ) ;

etThread.ifcChatF( tinP , cArg , DDNUMB , chatHandlerF ) ;
ZE( countT , cArg ) ;

TODO

}
    if( cArgP && idAdamHandlingP && idChatSessionP ) ;

    }
        }
            }
                }
                    break ;
                    bBye = 1 ;
                {
                default :
                case ifcIDcMDsESSION_BYE :
                }
                    break ;
                    psoP->writeF( tinP , sInP ) ;
                {
                case ifcIDcMDsESSION_ECHO :
            {
            switch( sInP.cFieldF( tinP ) )
        {
        if( !etThread && !*tinP.zEtScratch )
        psoP->readF( tinP , sInP ) ;
        soulC sInP( tinP , TAG( TAGiDnULL ) ) ;
    {
    while( !ether && !etThread && !*tinP.zEtScratch && !bBye )
    ZE( boolT , bBye ) ;
{
voidT chatHandlerF( tinS& tinP , etherC& ether , etherC& etThread , socketC*& psoP , const countT idChatSessionP , countT cArgP , const countT idAdamHandlingP )

/*1*/WAKEhIDE( "example.simplest.ifcChatF" )/*1*/
/**/
*/
required: 2540104 (name server); 1140104 (chat)
what is worse is that i listen!
i talk to myself via the local chat server
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//

