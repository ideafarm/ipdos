
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    _OUT_
    while( p1Root ) delete p1Root ; //DON''T USE DEL HERE

    }
        }
            boxZapF( tinP , psttc1 ) ;
            if( POOP ) break ;
        {
        FORsTRINGSiN1( (strokeS*)pstt1LocalP )
    {
    // DELETE THE LOCAL FILES

    delF( tinP , pbAll ) ;
    delF( tinP , psttList ) ;
    boxPutF( tinP , psttList , pbAll , cbAll ) ;
    __Z( cbAll ) ;

    }
        }
            }
                p1c = p1c->pR ;

                pbc += p1c->cbd ;
                memCopyF( tinP , pbc , p1c->pbd , p1c->cbd ) ;

                pbc += sizeof p1c->cbd ;
                memCopyF( tinP , pbc , (byteT*)&p1c->cbd , sizeof p1c->cbd ) ;
            {
            while( p1c )
            pbc = pbAll ;
            ZE( byteT* , pbc ) ;
            p1c = p1Root ;
            ZE( _1S* , p1c ) ;
        {
        else
        }
            memCopyF( tinP , pbAll , p1Root->pbd , cbAll ) ;
            __( cbAll - p1Root->cbd ) ;
        {
        if( !p1Root->pR )

        newF( tinP , LF , pbAll , cbAll ) ; ___( pbAll ) ;
        }
            }
                p1c = p1c->pR ;
                cbAll += p1c->cbd ;
                cbAll += sizeof p1c->cbd ;
            {
            while( p1c )
            p1c = p1Root ;
            ZE( _1S* , p1c ) ;
        {
        else
        }
            cbAll = p1Root->cbd ;
        {
        if( !p1Root->pR )
    {
    if( p1Root )
    __Z( p1Root ) ;
    ZE( countT , cbAll ) ;
    ZE( byteT* , pbAll ) ;
    // BUILD THE AGGREGATE

    }
        }
            psttc1rp += CSpREFIX + psttc1rp->idAdam ;

            if( p1c ) { boxGetShadowF( tinP , p1c->pbd , p1c->cbd , psttc1 ) ; ___( p1c->pbd ) ; }

            }
                p1c = p1c->pR ;
                p1c->pR->pL = p1c ;
                p1c->pR = new( 0 , tinP , LF ) _1S( tinP , *this , p1Root ) ; ___( p1c->pR ) ;
                while( p1c && p1c->pR ) p1c = p1c->pR ;
                p1c = p1Root ;
            {
            else
            }
                p1c = p1Root = new( 0 , tinP , LF ) _1S( tinP , *this , p1Root ) ; ___( p1Root ) ;
            {
            if( !p1Root )
            ZE( _1S* , p1c ) ;

            strFuseF( tinP , psttList , psttc1rp ) ; ___( psttList ) ;
            else         fPrior = 1 ;
            if( fPrior ) { strFuseF( tinP , psttList , T(" ") ) ; ___( psttList ) ; }

            cFiles ++ ;
            if( POOP ) break ;
        {
        FORsTRINGSiN1( (strokeS*)pstt1LocalP )
        const strokeS* psttc1rp = pstt1RemoteP + CSpREFIX ;
        ZE( boolT , fPrior ) ;
        ZE( countT , cFiles ) ;
        strFuseF( tinP , psttList , tSuck ) ; ___( psttList ) ;
        strFuseF( tinP , psttList , psttHostP , 0 , 0 , strokeS() , 0 , 0 ,/*U::SOUL?*/ pstt1RemoteP->idAdam + tSuck.csF( tinP ) + pstt1LocalP->idAdam ) ; ___( psttList ) ;
        TN( tSuck , "//box.sucker/" ) ;
    {
    ZE( _1S* , p1Root ) ;
    ZE( strokeS* , psttList ) ;
    // COUNT THE FILES, BUILD THE LIST, COLLECT THE DATA
    _INoLD_

    }
        if( POOP ) return ;
        __Z( pstt1LocalP ) ;
        __Z( pstt1RemoteP ) ;
        __Z( psttHostP ) ;
        if( POOP ) return ;
    {
    IFbEcAREFUL
    SCOOP
{
/*1*/voidT etherC::diskFilePourF( tinS& tinP , const strokeS* const psttHostP , const strokeS* const pstt1RemoteP , const strokeS* const pstt1LocalP )/*1*/

// PARAMETERS 1 AND 2 ARE FILE NAMES SEPARATED BY SINGLE BLANKS

/**/
*/
 pstt1LocalP
 pstt1RemoteP
 psttHostP
arguments
it is illegal to refer to this symbol in the definition of an adam
\<A HREF=\"5.103009c.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$diskFilePourF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

