
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return idFile2 ;

    //OUT
    }
        if( off < cFiles ) idFile2 = pcFile[ ( off << 1 ) + 1 ] ;
            off ++ ;
        while( off < cFiles && idi != pcFile[ off << 1 ] )
        ZE( countT , off ) ;

        countT idi = thirdC::c_atoiIF( tinP , postIdi ) ;

        const osTextT postIdi[] = { posti[ 0x5 ] , posti[ 0x6 ] , posti[ 0x7 ] , posti[ 0x8 ] , posti[ 0x9 ] , posti[ 0xa ] , posti[ 0xb ] , 0 } ;

        #endif
            posti ++ ;
        #if defined( __OS2__ )
    {
    if( posti && !POOP )
    //IN
    //THE IN, OUT LINES HERE CAN BE ENABLED IF NEEDED.  THEY ARE COMMENTED OUT ONLY FOR COSMETIC REASONS (TO IMPROVE THE READABILITY OF THE TRACE INFORMATION IN tinS)
    //IN, OUT ARE SUPPRESSED SO THAT THIS FUNCTION DOES NOT APPEAR IN tinP'S TRACE FOR THIS THREAD

    #endif
        posti = (osTextT*)postFileP ;
    #elif defined( __NT__ )
        posti = thirdC::c_strstrIF( tinP , postFileP , "." ) ; //U: CONJ: THIS IS WRONGO: ASSUME: FILE NUMBER (E.G. "1000104" IS AFTER THE FIRST PERIOD IN THE FULLY QUATAG( TAGiDnULL )ED NAME
    #if defined( __OS2__ )

    ZE( osTextT* , posti ) ;
    ZE( countT , idFile2 ) ;

    //U: conj: ON OS/2 THIS FUNCTION GETS FULLY QUAL NAME.  (ON WINDOWS, IT GETS A NAME LIKE "eb30104.cpp"

    }
        if( POOP ) return 0 ;
    {
    IFbEcAREFUL
{
/*1*/countT sourceC::idFileF( tinS& tinP , const osTextT* const postFileP ) const/*1*/

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

