
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


//VISIBLE

REST
etThread.osProcessIdPhaseAdamF( tinP , ifcIDpHASEhANDOFFoLD_SHUTTINGdOWN ) ;

}
    }
        idHourA = idHourB ;

        etThread.delF( tinP , postr ) ;
        etThread.strokeF( tinP , T("aok.\r\n") ) ;
        etThread.boxPutF( tinP , T("///ideafarm/ephemeral/domains/com/ideafarm/5110104/")+(idHourA==idHourB?T("tick."):T("hour."))+(bFail?T("fail."):T("pass."))+TF1(idTickB)+(bNoNotice?T(".pleaseNotify"):T("")) , postr , costr ) ;
        etThread.strokeF( tinP , T("  writing report to disk:") ) ;
        etThread.delF( tinP , psttr ) ;

        }
            }
                etThread.strokeF( tinP , T("could not mail.") ) ;
                etThread = 0 ;
                bNoNotice = 1 ;
            {
            if( etThread )
            etThread.delF( tinP , postNotice ) ;
            etThread.strokeF( tinP , T("mailed aok.") ) ;
            etThread.boxPutF( tinP , (bHour?tToHourPass:tToTickPass) , postNotice , costNotice , 1 ) ;
            etThread.strokeF( tinP , T(" mailing PASS notice:") ) ;
            countT costNotice = etThread.strMakeF( tinP , postNotice , T("Subject: UP www.ideafarm.com UP\r\n\r\n")+T(psttr) ) ; ___( postNotice ) ;
            ZE( osTextT* , postNotice ) ;
        {
        else
        }
            }
                etThread.strokeF( tinP , T("could not mail.") ) ;
                etThread = 0 ;
                bNoNotice = 1 ;
            {
            if( etThread )
            etThread.delF( tinP , postNotice ) ;
            etThread.strokeF( tinP , T("mailed aok.") ) ;
            etThread.boxPutF( tinP , (bHour?tToHourFail:tToTickFail) , postNotice , costNotice , 1 ) ;
            etThread.strokeF( tinP , T(" mailing FAIL notice:") ) ;
            countT costNotice = etThread.strMakeF( tinP , postNotice , T("Subject: DOWN www.ideafarm.com DOWN\r\n\r\n")+T(psttr) ) ; ___( postNotice ) ;
            ZE( osTextT* , postNotice ) ;
        {
        if( bFail )

        ZE( boolT , bNoNotice ) ;
        boolT bFail = bFail1 && bFail2 && bFail3 ; //U: GET N RELIABLE SERVERS. THEN DECIDE FAIL IF m<N OF THEM FAILED

        countT costr = etThread.strMakeF( tinP , postr , psttr ) ; ___( postr ) ;
        ZE( osTextT* , postr ) ;
        etThread.delF( tinP , psttb3 ) ;
        etThread.delF( tinP , psttb2 ) ;
        etThread.delF( tinP , psttb1 ) ;
        etThread.strMakeF( tinP , psttr , TT(timeB1,timeB2)+T("    IdeaFarm " "(tm) City / Report / Visibility of Root Host\r\nwww.ideafarm.com\r\n" ifcEMAIL_WEBsITEcONTACT "\r\n\r\nHost www.ideafarm.com is visible on the Internet as follows.  The following is a\r\nconcatenation of a current traceroute report from each of three\r\nother hosts on the Internet.\r\n\r\n")+T(psttb1)+T("\r\n\r\n")+T(psttb2)+T("\r\n\r\n")+T(psttb3)+T("\r\n\r\n[END]") ) ; ___( psttr ) ;
        ZE( strokeS* , psttr ) ;

        }
            etThread.strokeF( tinP , (bFail3?T(" FAIL"):T(" pass"))+T(" making report.") ) ;
            parseF( tinP , etThread , psttb3 , bFail3 , T("wwwcs.cern.ch//http//cgi-bin/iptraceroute.pl?Name="     )+tHost , T("</PRE>") ) ; ___( psttb3 ) ;
            etThread.strokeF( tinP , (bFail2?T(" FAIL"):T(" pass"))+T(" 3:") ) ;
            parseF( tinP , etThread , psttb2 , bFail2 , T("www.dimensional.com//http//cgi-bin/nph-traceroute?"     )+tHost , T("</pre>") ) ; ___( psttb2 ) ;
            etThread.strokeF( tinP , T(" 2:") ) ;
        {
        if( bHour || bFail1 )
        etThread.strokeF( tinP , (bFail1?T(" FAIL"):T(" pass")) ) ;

        parseF( tinP , etThread , psttb1 , bFail1 , T("www.vineyard.net//http//cgi-bin/traceroute?")+tHost                  , T("</PRE>") ) ; ___( psttb1 ) ;
        //B:parseF( tinP , etThread , psttb1 , bFail1 , T("net.yahoo.com//http//cgi-bin/trace.sh?")+tHost                              ) ; ___( psttb1 ) ;
        //B:parseF( tinP , etThread , psttb1 , bFail1 , T("www.slac.stanford.edu//http//cgi-bin/nph-traceroute.pl?")+tHost             ) ; ___( psttb1 ) ;
        etThread.strokeF( tinP , T(" 1:") ) ;
        ZE( strokeS* , psttb3 ) ; ZE( boolT , bFail3 ) ;
        ZE( strokeS* , psttb2 ) ; ZE( boolT , bFail2 ) ;
        ZE( strokeS* , psttb1 ) ; ZE( boolT , bFail1 ) ;

        idTickA = idTickB ;
        timeA2 = timeB2 ;
        timeA1 = timeB1 ;

        etThread.strokeF( tinP , TF1(idHourB) ) ;
        if( !( cLines ++ % 0x10 ) ) etThread.strokeF( tinP , T("\f") ) ;

        if( idTickB == idTickA ) continue ;    
        boolT bHour = idHourB != idHourA ;
        countT idHourB = timeB2 << 4 | timeB1 >> 28 ;
        countT idTickB = timeB2 << 8 | timeB1 >> 24 ;
        etThread.paperTitleF( tinP , TT4(timeB1,timeB2,3,5)+T(" sitemonitor") ) ;
        etThread.osTimeNowF( tinP , timeB1 , timeB2 ) ;
        ZE( sCountT , timeB2 ) ;
        ZE( countT  , timeB1 ) ;
    {
    if( !ether )
    ether.osSleepF( tinP , TOCK ) ;
{
while( !ether )
TN( tToTickPass , "ideafarm.com//smtp/" ifcEMAIL_OLDfROM "/" ifcEMAIL_OLDfROM "" ) ;
TN( tToTickFail , "ideafarm.com//smtp/" ifcEMAIL_OLDfROM "/" ifcEMAIL_OLDfROM "" ) ;
TN( tToHourPass , "ideafarm.com//smtp/" ifcEMAIL_OLDfROM "/" ifcEMAIL_OLDfROM "" ) ;
TN( tToHourFail , "ideafarm.com//smtp/")+TF1(DDNUMB)+T("/support@bayarea.net//" ifcEMAIL_OLDfROM "" ) ;

countT idHourA = timeA2 << 4 | timeA1 >> 28 ;
countT idTickA = timeA2 << 8 | timeA1 >> 24 ;
etThread.osTimeNowF( tinP , timeA1 , timeA2 ) ;
ZE( sCountT , timeA2 ) ;
ZE( countT  , timeA1 ) ;

TN( tHost , "www.ideafarm.com" ) ;
ZE( countT , cLines ) ;

TODO

}
    etThread.delF( tinP , psttBody ) ;

    }
        etThread.strMakeF( tinP , psttP , T(psttBoxP)+T("\r\n\r\n")+(bFailP?T("**** FAIL ****"):T("**** PASS ****"))+T("\r\n\r\n")+T(psttBody)+T("\r\n") ) ;
        bFailP = !etThread.strIdF( tinP , idf , sttq , T("(209.128.90.230)") , psttBody ) ;
        //sttq = ze ;
        idf = 1 ;
    {
    else
    }
        etThread.strMakeF( tinP , psttP , T(psttBoxP)+T("\r\n\r\nTraceroute information could not be obtained.\r\n") ) ;
        etThread = 0 ;
    {
    if( etThread || !psttBody || !psttBody->idAdam )

    etThread.strReplaceF( tinP , psttBody , 0 , T("\n") , T("\r\n") , 0 , flSTRrEPLACE_IGNOREqUOTES ) ;

    etThread.delF( tinP , psttBodyFoot ) ;
    else            { etThread.strMakeF( tinP , psttBody , psttBodyFoot )                               ; ___( psttBody ) ; }
    if( psttFootP ) { etThread.strSubstringF( tinP , psttBody , idf , sttq , psttFootP , psttBodyFoot ) ; ___( psttBody ) ; }
    ZE( strokeS* , psttBody ) ;
    //sttq = ze ;
    idf = 1 ;

    etThread.delF( tinP , psttRaw ) ;
    etThread.strSubstringF( tinP , psttBodyFoot , idf , idl , psttRaw ) ; ___( psttBodyFoot ) ;
    ZE( countT , idl ) ;
    ZE( strokeS* , psttBodyFoot ) ;

    if( !etThread ) idf -= 2 ;
    __Z( idAt ) ;
    countT idAt = etThread.strIdF( tinP , idf , sttq , T("\n 1") , psttRaw ) ;
    countT idf = 1 ;
    strokeS sttq( (countT)0 , sc_IGNOREqUOTES ) ;

    }
        etThread.strMakeF( tinP , psttRaw , T(pbi) ) ; ___( psttRaw ) ;    
        etThread.boxGetShadowF( tinP , pbi , cbi , psttBoxP ) ; ___( pbi ) ;
        ZE( countT , cbi ) ;
        ZE( byteT* , pbi ) ;
    {
    ZE( strokeS* , psttRaw ) ;
{
voidT parseF( tinS& tinP , etherC& etThread , strokeS*& psttP , boolT& bFailP , const strokeS* const psttBoxP , const strokeS* const psttFootP = 0 )

/*1*/WAKEhIDE( "city.traceroute.monitor" )/*1*/
/**/
*/
if a fail is detected, the report is emailed to support@bayarea.net and copied to " ifcEMAIL_OLDfROM "
the results are parsed to detect pass/fail
all results for each tick are written to a single report file
at the start of each tick, i request a traceroute report from each of three sites
\<A HREF=\"5.5110104.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

