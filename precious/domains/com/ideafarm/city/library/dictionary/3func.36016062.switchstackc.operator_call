
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return ids ;
    _OUT_
    if( pBaton ) pBaton->ungrabF( tinP ) ;
    if( pStack ) ids = (*pStack)( pbP , pSubtractFP , subtractionParmP ) ;
    ZE( countT , ids ) ;
    stackC* pStack = (stackC*)( bTinHasLeverP ? swMe.forIfcThreadF( tinP ) : (countT)swMe ) ;
    _INoLD_
    else if( osTidOwner != tinP.osTid && !bDying && !( F(flagsSwitch) & flSTACKc_ALLOWmULTIPLEuNSERIALIZED ) ) BLAMMO ;
    else if( !osTidOwner ) osTidOwner = tinP.osTid ;
    if( pBaton ) pBaton->grabF( tinP , TAG( TAGiDnULL ) ) ;

    }
        if( third ) return 0 ;
    {
    IFbEcAREFUL    

    SCOOP
    TINSL
{
/*1*/countT switchStackC::operator () ( const byteT* const pbP , ifc4FT pSubtractFP , const countT subtractionParmP , const boolT bTinHasLeverP )/*1*/

/**/
*/
 pbP
arguments
 the search begins at the top, and the first encounter with pbP determines the result and terminates the search
 if the value is found at the top, this evaluates to 1
evaluates to the id of the slot in which a value matching pbP is found, in the stack for the current lever value (or current thread)
\<A HREF=\"5.1210065.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

