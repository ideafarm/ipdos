
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

}
    fooF( tinP , etThread ) ;
    staticC uu( tinP ) ;

    (countT&)aa = 0x11111111 ;
    staticC aa( tinP , "aa" , "gg" ) ;
{

TODO

}
    etThread.strokeF( tinP , T("value of aa is: ")+TF1((countT&)aa)+T("\r\n") ) ;
    staticC aa( tinP , "aa" , "gg" ) ;
{
voidT fooF( tinS& tinP , etherC& etThread )

/*1*/WAKEhIDE( "example.simplest.snip.00300a9.staticC" )/*1*/
/**/
*/
 for staticC objects, multiple name spaces can be created by specifying a group name
  staticC objects can be used at any time, including at almost the very beginning and almost the very end of process execution
  unnamed objects are useful as a speedy alternative to obtaining an allocation from a poolC object
  unnamed objects cannot be used to share data across stack frames
 staticC objects can be unnamed
 the staticC objects cannot be seen by other threads
on a given thread, the behavior of staticC and static objects is similar but not the same
the staticC class provides a kind of storage class not supported in the C++ language
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

