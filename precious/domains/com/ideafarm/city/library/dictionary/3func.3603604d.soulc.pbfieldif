
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return (byteT*)pbc ;

    }
        cbP = cbf ;

        flagsP     = *(flagsT*)pbc                        ; pbc += sizeof( flagsT ) ;
        idTypeP    = *(countT*)pbc                        ; pbc += sizeof( countT ) ;
        countT cbf = *(countT*)pbc - 2 * sizeof( countT ) ; pbc += sizeof( countT ) ; //U::20210207@1739: SUBTRACT "" TO MAKE THE LENGTH CORRECT, W/O ANALYSIS
    {
    else
    if( pbc >= pbe ) pbc = 0 ;

    while( pbc < pbe && -- idFieldP ) pbc += sizeof( countT ) + *(countT*)pbc ;
    
    pbc += sizeof( countT ) ; //MOVE TO WO'TH LENGTH PREFIXED FIELD
    const byteT* const pbe = pbc + sizeof( countT ) + *(countT*)pbc ;

    }
        idFormat = *(countT*)pbc ; pbc += sizeof( countT ) ;
                                   pbc += sizeof( countT ) ;
    {
    if( pbc && getNegAM( *(countT*)pbc ) == FINGERnEG_SOULc )
    ZE( countT , idFormat ) ;

    const byteT* pbc = pbsP ;

    _IO_

    }
        if( !!idTypeP || !!flagsP || !!cbP || !idFieldP ) return 0 ;
    {
    IFbEcAREFUL    
{
/*1*/byteT* soulC::pbFieldIF( tinS& tinP , countT& idTypeP , flagsT& flagsP , countT& cbP , countT idFieldP , const byteT* const pbsP )/*1*/

/**/
*/
   e.g. must be obtained by casting a soulC object to byteT*
  must point to a backing image of a soulC object
 pbsP
  if this value is greater than the number of fields present, i evaluate to 0, cbP and bNumericP remain 0 and impotence does not occur
  1 refers to the wo'th field in the soul
  must not be 0
 idFieldP
  must be 0
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/1snip.0010113.flSOULiTEM!||
 flagsP
  must be 0
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/1snip.112000c0.ifcIDtYPEsOULiTEM!||
 idTypeP
  must be 0
 cbP
 tinP
arguments
warning: do not use this byteT* value after calling any function that removes or adds objects to the soulC object
warning: do not ever d elete the byteT* value that i evaluate to
  for example, a byteT* field begins with a flags byte that is used to distinguish between a null pointer and a pointer to 0 bytes
 for some field types, the cbP bytes begin with a flags byte that must not receive an invalid value
 take care to avoid writing more than cbP bytes
my return value can be used to modify the field
 a numeric sort treats the bytes as in order of increasing significance
returns the address and length of a field in the soulC object's image, and whether these bytes are to be sorted numerically
\<A HREF=\"5.14e0017.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$pbFieldF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//

