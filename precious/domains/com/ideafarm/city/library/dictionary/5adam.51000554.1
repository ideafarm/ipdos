
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etThread.strokeF( tinP , T("thank you, Jesus, for coming to teach us how to live!") ) ;

}
    etThread.strokeF( tinP , tvvy+TF1(c2s.c1)+tComma+TF1(c2s.c2)+tc ) ;
    sty >> pb_c2s ;
    byteT* pb_c2s = (byteT*)&c2s ; 
    count2S c2s ;
{
while( sty )

}
    etThread.strokeF( tinP , tvvx+TF1(vv)+tc ) ;
    stx >> vv ;
    ZE( countT , vv ) ;
{
while( stx )

TN( tComma , " , " ) ;
TN( tc , "\r\n" ) ;
TN( tvvy , "y: " ) ;
TN( tvvx , "x: " ) ;

//sty << sSnapy ;
//sty.purgeF( tinP ) ;

stx << sSnapx ;
stx.purgeF( tinP ) ;

}
    sty << (byteT*)&c2s ;
    stx << ii ;
    count2S c2s( ii << 0x10 , ii << 0x18 ) ;
{
for( ; ii <= 0x10 ; ii ++ )

sty >> sSnapy ;
stx >> sSnapx ;

}
    sty << (byteT*)&c2s ;
    stx << ii ;
    count2S c2s( ii , ii << 8 ) ;
{
for( countT ii = 1 ; ii <= 8 ; ii ++ )

stackC sty( tinP , etThread , TAG( TAGiDnULL ) , flSTACKc_BLOB|flSTACKc_FIFO , sizeof( count2S ) ) ;
stackC stx( tinP , etThread , TAG( TAGiDnULL ) , flSTACKc_FIFO ) ;
soulC sSnapy( tinP , TAG( TAGiDnULL ) ) ;
soulC sSnapx( tinP , TAG( TAGiDnULL ) ) ;

TODO

/*1*/WAKEhIDE( "example.other.func.115003d.stackC.operator_shiftRight" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

