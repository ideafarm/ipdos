
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


;
}
 friend class paperOldC ;
 friend class windowOldC ;

 inline countT colorF( voidT ) { return stqr_color ? ((count3S*)&stqr_color[ 1 ])->c3 : ifcRGB_W4 ; }
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34002.winPulpOldC.winPulpOldC!||
 winPulpOldC( tinS& tinP , etherC& etherP , paperOldC& paperP , backOldC& backP , handleC& hDrawWindowP , paperToBackCBFT pPaperToBackCBFP , countT cPaperToBackArgP ) ;
 //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34001.winPulpOldC.dt_winPulpOldC!||
 ~winPulpOldC( voidT ) ;

    inline operator handleC&( voidT ) { return *pHndDrawBitmap ; } //U::FOR CONVENIENCE DURING MIGRATION TO NEW PRESENTATION SUBSYSTEM ; REMOVE IN PRODUCTION

    public :

    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34006.winPulpOldC.positionStrokingFrameIfF!||
    voidT positionStrokingFrameIfF( tinS& tinP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34005.winPulpOldC.cacheF!||
    voidT cacheF( tinS& tinP , const countT idCasteP ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34004.winPulpOldC.purgeF!||
    voidT purgeF( tinS& tinP , etherC& etherP , const flagsT flagsP = flPAPERrESET_null ) ;
    //||!kt|///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/3func.34003.winPulpOldC.snapF!||
    voidT snapF( tinS& tinP , etherC& etherP , const boolT bRestoreP = 0 , countT* const pczIdAdamP = 0 ) ;
    inline voidT selectScratchBitmapF( voidT ) { if( stqBitmapScratch ) pHndDrawBitmap = &(handleC&)*(bitmapOldC*)&stqBitmapScratch[ 1 ] ; }
    inline voidT selectNullBitmapF( voidT )    { pHndDrawBitmap = &(handleC&)bitmapNull   ; }
    inline voidT selectNormalBitmapF( voidT )  { pHndDrawBitmap = &(handleC&)bitmapNormal ; }

    countT snapStaqsEndNU ; //@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    staqC stqr_mRowShear3        ; staqC stqr_mRowShear3_A        ; staqC stqr_mRowShear3_B        ; staqC stqr_mRowShear3_C        ; staqC stqr_mRowShear3_D        ;
    staqC stqr_mRowShear2        ; staqC stqr_mRowShear2_A        ; staqC stqr_mRowShear2_B        ; staqC stqr_mRowShear2_C        ; staqC stqr_mRowShear2_D        ;
    staqC stqr_mRowShear1        ; staqC stqr_mRowShear1_A        ; staqC stqr_mRowShear1_B        ; staqC stqr_mRowShear1_C        ; staqC stqr_mRowShear1_D        ;
    staqC stqr_mColShear3        ; staqC stqr_mColShear3_A        ; staqC stqr_mColShear3_B        ; staqC stqr_mColShear3_C        ; staqC stqr_mColShear3_D        ;
    staqC stqr_mColShear2        ; staqC stqr_mColShear2_A        ; staqC stqr_mColShear2_B        ; staqC stqr_mColShear2_C        ; staqC stqr_mColShear2_D        ;
    staqC stqr_mColShear1        ; staqC stqr_mColShear1_A        ; staqC stqr_mColShear1_B        ; staqC stqr_mColShear1_C        ; staqC stqr_mColShear1_D        ;
    staqC stqr_mRowScale         ; staqC stqr_mRowScale_A         ; staqC stqr_mRowScale_B         ; staqC stqr_mRowScale_C         ; staqC stqr_mRowScale_D         ;
    staqC stqr_mColScale         ; staqC stqr_mColScale_A         ; staqC stqr_mColScale_B         ; staqC stqr_mColScale_C         ; staqC stqr_mColScale_D         ;
    staqC stqr_mSinMirrorAngle   ;
    staqC stqr_mCosMirrorAngle   ; staqC stqr_mMirrorAngle_A      ; staqC stqr_mMirrorAngle_B      ; staqC stqr_mMirrorAngle_C      ; staqC stqr_mMirrorAngle_D      ;
    staqC stqr_m01RowMirrorPoint ; staqC stqr_m01RowMirrorPoint_A ; staqC stqr_m01RowMirrorPoint_B ; staqC stqr_m01RowMirrorPoint_C ; staqC stqr_m01RowMirrorPoint_D ;
    staqC stqr_m01ColMirrorPoint ; staqC stqr_m01ColMirrorPoint_A ; staqC stqr_m01ColMirrorPoint_B ; staqC stqr_m01ColMirrorPoint_C ; staqC stqr_m01ColMirrorPoint_D ;
    staqC stqr_mSinHotAngle      ;
    staqC stqr_mCosHotAngle      ; staqC stqr_mHotAngle_A         ; staqC stqr_mHotAngle_B         ; staqC stqr_mHotAngle_C         ; staqC stqr_mHotAngle_D         ;
    staqC stqr_m01RowHotPoint    ; staqC stqr_m01RowHotPoint_A    ; staqC stqr_m01RowHotPoint_B    ; staqC stqr_m01RowHotPoint_C    ; staqC stqr_m01RowHotPoint_D    ;
    staqC stqr_m01ColHotPoint    ; staqC stqr_m01ColHotPoint_A    ; staqC stqr_m01ColHotPoint_B    ; staqC stqr_m01ColHotPoint_C    ; staqC stqr_m01ColHotPoint_D    ;
    staqC stqr_m01FloatUp        ; staqC stqr_m01FloatUp_A        ; staqC stqr_m01FloatUp_B        ; staqC stqr_m01FloatUp_C        ; staqC stqr_m01FloatUp_D        ;
    staqC stqr_m01FloatRight     ; staqC stqr_m01FloatRight_A     ; staqC stqr_m01FloatRight_B     ; staqC stqr_m01FloatRight_C     ; staqC stqr_m01FloatRight_D     ;
    /* CYCLED RENDERING VALUES: CURRENT STROKE */
    staqC  stqr_color ;
    countT snapStaqsBeginNU ; //@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
    //ONLY staqC OBJECTS ARE ALLOWED IN THIS SECTION OF THE INSTANCE (SEE snapF)

    handleC        hBrush ;
    handleC        hPen ;
    handleC        hFont ;
    handleC*       pHndDrawBitmap ;

    staqC          stqBitmapScratch ;

    bitmapOldC        bitmapNull ;
    bitmapOldC        bitmapNormal ;
{
/*1*/class winPulpOldC : public pulpOldC/*1*/

/**/

*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

