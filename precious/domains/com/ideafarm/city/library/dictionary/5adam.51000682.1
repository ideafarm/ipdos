
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

}
    etThread.delF( tinP , psttName ) ;    
    strokeS*& psttName = *(strokeS**)&(countT&)swShortOnHey ;
    psttzHey = (strokeS*)swShortOnHey.leverF( tinP , idf ) ;
    if( !( idf % TUCK ) ) { CONoUTrAW3( "\r        \r" , idf , "" ) }
{
for( countT idf = 1 ; idf <= cFlavors ; idf ++ )
countT cFlavors = swShortOnHey.cFlavorsF( tinP ) ;

etThread.delF( tinP , posto ) ;
etThread.boxPutF( tinP , T("///d/ideafarm.work/txt/index.soil.after") , posto , costo ) ;

etThread.delF( tinP , psttOut ) ;
countT costo = etThread.strMakeF( tinP , posto , psttOut ) ; ___( posto ) ;
ZE( osTextT* , posto ) ;

}
    }
        }
            etThread.delF( tinP , psttHey ) ;
            }
                etThread.strFuseF( tinP , psttOut , te    ) ;                                                           // OUT TO E
                etThread.strFuseF( tinP , psttOut , psttName ) ;                                                        // OUT TO D (NEW NAME)
            {        
            if( psttName )
            strokeS*& psttName = *(strokeS**)&(countT&)swShortOnHey ;
            psttzHey = psttHey ;
        
            tinP.pEther->strSubstringF( tinP , psttHey , idf2 , countTC() , psttp ) ; ___( psttHey ) ;
            ZE( strokeS* , psttHey ) ;
        {
        else
        }
            etThread.delF( tinP , psttp ) ;
            etThread.strFuseF( tinP , psttOut , te    ) ;                                                               // OUT TO E
            etThread.strFuseF( tinP , psttOut , psttp ) ;                                                               // OUT TO D
            etThread.strFuseF( tinP , psttOut , tPrefix3 ) ;                                                            // OUT TO B
        {
        if( !etThread.strIdF( tinP , idf2 , sttq , tHey , psttp ) || !idf2 )
        countT idf2 = 1 ;

        etThread.strSubstringF( tinP , psttp , idf , sttq , te , tIn ) ; ___( psttp ) ;                                 // idf -> F
    {
    if( idf )

    etThread.delF( tinP , psttp ) ;
    etThread.strFuseF( tinP , psttOut , psttp ) ;                                                                       // OUT TO A
    etThread.strSubstringF( tinP , psttp , idf , sttq , tPrefix3 , tIn ) ; ___( psttp ) ;                               // idf -> C
    ZE( strokeS* , psttp ) ;
{
while( idf )
TN( te       , "\\" ) ;
TN( tPrefix3 , "!ideafarm.3." ) ;
ZE( countT , idl ) ;
countT idf = 1 ;

//
//        A           BC                                                          DEF
//       \i!ideafarm.3.000b36b2.984b17e4.2f9afda7.editor.!.aladdin.logo.223x100.jpg\i
//
//
// REPLACE FORMAT 3 FILE NAMES WITH FORMAT 4 FILE NAMES

etThread.strMakeF( tinP , psttOut , 0 , tIn.csF( tinP ) << 1 ) ; ___( psttOut ) ;
ZE( strokeS* , psttOut ) ;

}
    etThread.delF( tinP , posti ) ;
    tIn = T(posti) ;
    etThread.boxGetShadowF( tinP , posti , costi , T("///d/ideafarm.work/txt/index.soil") ) ; ___( posti ) ;
    ZE( countT   , costi ) ;
    ZE( osTextT* , posti ) ;
{
TN( tIn , "" ) ;

etThread.diskWalkF( tinP , cDirs , cFiles , T("///d/ideafarm.home.101/IdeaFarm (tm)/Drop Files Here To Archive/") , (boolT&)(const boolT&)ether , diskWalkScanArchiveCBF , pcArg ) ;

countT pcArg[] = { (countT)&tcr ,  (countT)&tHey ,  (countT)&tArc , (countT)&sttq , (countT)&psttzHey , (countT)&swShortOnHey } ;
switchC swShortOnHey( tinP , etThread , TAG( TAGiDnULL ) , flSTACKc_DOnOTsERIALIZE , psttzHey ) ;
ZE( strokeS* , psttzHey ) ;
strokeS sttq( 0 , sc_IGNOREqUOTES ) ;
TN( tArc , "\\Drop Files Here To Archive\\" ) ;
TN( tHey , ".!." ) ;
TN( tcr , "\r\n" ) ;
ZE( countT , cFiles ) ;
ZE( countT , cDirs ) ;

TODO

}
    return 1 ;

    }
        if( !( cFilesP % TUCK ) ) { CONoUTrAW3( "\r        \r" , cFilesP , "" ) }

        }
            tinP.pEther->delF( tinP , psttHey ) ;

            tinP.pEther->strMakeF( tinP , psttShort , tShort ) ; ___( psttShort ) ;
            if( psttShort ) tinP.pEther->delF( tinP , psttShort ) ;
            strokeS*& psttShort = *(strokeS**)&(countT&)swShortOnHeyP ;
            psttzHeyP = psttHey ;

            tinP.pEther->strSubstringF( tinP , psttHey , idf , countTC() , tShort ) ; ___( psttHey ) ;
            ZE( strokeS* , psttHey ) ;
        {
        if( tinP.pEther->strIdF( tinP , idf , sttqP , tHeyP , tShort ) )
        countT idf = 1 ;

        }
            }
                tinP.pEther->delF( tinP , psttp ) ;
                tShort = T(psttp) ;                
                tinP.pEther->strSubstringF( tinP , psttp , idf , countTC() , tName ) ; ___( psttp ) ;
            {
            if( idf )
            tinP.pEther->delF( tinP , psttp ) ;
            tinP.pEther->strSubstringF( tinP , psttp , idf , sttqP , tArcP , tName ) ; ___( psttp ) ;
            countT idf = 1 ;
            ZE( strokeS* , psttp ) ;
            TN( tName , postNameP ) ;
        {
        TN( tShort , "" ) ;

        switchC&  swShortOnHeyP =  *(switchC*)pcArgP[ 5 ] ;
        strokeS*& psttzHeyP     = *(strokeS**)pcArgP[ 4 ] ;
        strokeS&  sttqP         =  *(strokeS*)pcArgP[ 3 ] ;
        textC&    tArcP         =    *(textC*)pcArgP[ 2 ] ;
        textC&    tHeyP         =    *(textC*)pcArgP[ 1 ] ;
        textC&    tcrP          =    *(textC*)pcArgP[ 0 ] ;
    {
    else
    }
    {
    if( bDir )

    boolT  bDir = postNameP[ costLike - 1 ] == '\\' ;
    countT costLike = tinP.brcRaw ;

    BOSdOnOTtEST( WHATgbo , strlen( postNameP ) )
{
boolT diskWalkScanArchiveCBF( tinS& tinP , countT& cDirsP , countT& cFilesP , boolT& bQuitP , const osTextT* const postNameP , countT* const pcArgP , const countT* const pModuloFilesP , const countT* const pModuloDirsP )

/*1*/WAKEsHOWtEXT( "tool.migration.format.3.to.format.4.in.index.soil" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

