
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return bGrabbed ;
    _OUTsTACKc_

    }
        waitF( tinP ) ;
        bGrabbed = 0 ;
        ungrabF( tinP ) ;
        if( cPlates < cPlatesLimitP ) break ;
        bGrabbed = 1 ;
        grabF( tinP , TAG( TAGiDnULL ) ) ;
    {
    while( !third && !bQuitP )
    ZE( boolT , bGrabbed ) ;

    _INsTACKc_

    if( third ) return 0 ;
    __Z( pSgnEvent ) ;
    __( !( F(flags) & flSTACKc_GIVEsIGNdELpLATE ) ) ;
    if( third ) return 0 ;
    SCOOP
{
/*1*/boolT stackC::waitGrabF( tinS& tinP , const countT cPlatesLimitP , const boolT& bQuitP )/*1*/
/**/

*/
*this must be constructed with flSTACKc_GIVEsIGNdELpLATE
caller is responsible for calling ungrabF after i return
when i return, *this is grabbed by the caller thread
i return when cPlates is below the specified limit
i evaluate to bGrabbed (1 iff i did grab *this)
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

