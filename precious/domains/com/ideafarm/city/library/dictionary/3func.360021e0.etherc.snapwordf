
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    }
        return cWord ;
        unwrapCircleIF( tinP , (byteT*)pcWordP , cbBody , pbBody , cbBody , bkWord.cbUsedF() ) ;
    {
    else
    if( POOP ) return 0 ;

    __Z( pcWordP ) ;
    newF( tinP , LF , pcWordP , cWord ) ; ___( pcWordP ) ;

    if( cWord * sizeof( countT ) != cbBody ) { BLAMMO ; }

    const countT       cWord  = cbBody / sizeof( countT ) ;
    const countT       cbBody = bkWord.cbBodyF() ;
    const byteT* const pbBody = bkWord.pbBodyF() ;

    bookC& bkWord = processGlobal4S::_processGlobal4I_IF().bksWord.bookNowF() ; //A:ASSUME: bksWords.cKeepInactive IS 0 SO THE CURRENT BOOK WILL REMAIN OPEN

    }
        if( POOP ) return 0 ;
        __NZ( pcWordP ) ;
        if( POOP ) return 0 ;
    {
    IFbEcAREFUL
{
/*1*/countT etherC::snapWordF( tinS& tinP , countT*& pcWordP )/*1*/

/**/
*/
  calling code should use pcWordP (singular) when calling me and pcWordsP (plural) when calling snapWordsF
 pcWordP
 tinP
arguments
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//

