
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return bExisted ;

    _OUT_
    }
        }
            bExisted = diskMakeDirStupidlyF( tinP , psttP ) ;
            delF( tinP , pstt ) ;
            diskMakeDirF( tinP , pstt ) ;
            strSubstringF( tinP , pstt , idf , id , psttP ) ; ___( pstt ) ;
            countT idf = 1 ;
            ZE( strokeS* , pstt ) ;
            }
                __1
                LOGcALLnEST( "diskMakeDirF" )
                LOGrAW( tSay ) ;
                CONoUTrAW( tSay ) ;
                TN( tSay , "" ) ; tSay = T("diskMakeDirF/lath prior slash is at position less than 4: \"")+T(psttP)+T("\"\r\n") ;
            {
            if( id < 4 )
            countT id = strIdF( tinP , countTC( 1 ) , sttq , S1C('/') , psttP , psttP->idAdam - 1 , - 1 ) ;
            strokeS sttq( (countT)0 , sc_IGNOREqUOTES ) ;
            SCOOPSdEL
            POOPR
        {
        else
        if( !POOP ) SCOOPSdEL
        bExisted = tinP.pEtScratch->diskMakeDirStupidlyF( tinP , psttP ) ;
        SCOOPSnEW
    {
    IFsCRATCH
    ZE( boolT , bExisted ) ;
    _INoLD_

    }
        if( POOP ) return 0 ;
        __( psttP[ CSpREFIX - 1 + psttP->idAdam ].idAdam - '/' ) ;
        if( POOP ) return 0 ;
        __Z( psttP ) ;
        if( POOP ) return 0 ;
    {
    IFbEcAREFUL
    
        SCOOP
{
/*1*/boolT etherC::diskMakeDirF( tinS& tinP , const strokeS* const psttP )/*1*/

/**/
*/
   it will be created if needed, along with d11 and d111 before making d1111
   in this example, directory T("///c" "/d1/") need not exist
  example: T("///c" "/d1/d11/d111/d1111/")
  example: T("///ideafarm/ephemeral/1030021/d1/d11/d111/d1111/")
   file names cannot end with '/'
   directory names must end with '/'
  must end with '/'
  the name of the directory to create
 psttP
arguments
once a success is made, the recursion unwinds, creating all of the necessary kids
makes a directory by recursively calling itself if a failure occurs, eliminating the youngest directory each time
  \<A HREF=\"5.f210104.1.1.0.html\"\>f210104:  WAKEsHOW( "example.simplest.func.1030021.etherC.diskMakeDirF" )\</A\>
 simplest
examples
\<A HREF=\"5.1030021.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$diskMakeDirF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

