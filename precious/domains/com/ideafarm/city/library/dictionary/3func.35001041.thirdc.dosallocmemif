
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    _OUT_
    osTraceWrongNodeIF( tinP , (byteT*)pvP , "dosAllocMemIF: pvP" ) ;
    #endif
        pvP = (voidT*)tinP.brcRaw ;
        BOSpOOP
        BOS( WHATgbo , BOSoK , GlobalAlloc( 0 , cbP ) )
    #elif defined( __NT__ )
        if( POOP ) pvP = 0 ;
        BOSpOOP
        BOSI( WHATgbo , BOSfAIL , DosAllocMem( &pvP , cbP , PAG_COMMIT | PAG_EXECUTE | PAG_READ | PAG_WRITE ) )
    #ifdef __OS2__
    _INoLD_

    }
        if( POOP ) return ;
        __Z( cbP ) ;
        __NZ( pvP ) ;
        if( POOP ) return ;
    {
    IFbEcAREFUL
{
/**//*1*/voidT thirdC::dosAllocMemIF( tinS& tinP , voidT*& pvP , const countT cbP )/*1*/
*/
    this example specifies that the memory must be exactly large enough to hold 0x1000 countT objects
   example: 0x1000 * sizeof( countT )
  specify the number of bytes desired
  must not be 0
 cbP
  must be 0
 pvP
arguments
  \<A HREF=\"5.4f00104.1.1.0.html\"\>4f00104:  WAKEsHOW( "example.simplest.func.1020046.thirdC.dosAllocMemIF" )\</A\>
 simplest
examples
\<A HREF=\"5.1020046.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$dosAllocMemIF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

