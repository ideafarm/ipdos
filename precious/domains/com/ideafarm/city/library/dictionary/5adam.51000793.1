
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//

                            
REST

etherC::loafIF( tinP ) ;
etThread.traceF( tinP , T("ok") ) ;

}
    while( !ether && ~hFind && !POOP ) ;
    }
        DEL( pInfo ) ;
        }
            //etThread.traceF( tinP , T("host [nnPeer,name]:    ")+T(nnPeer)+tb4+tHost ) ;

            }
                }
                    etThread.delF( tinP , pNicName ) ;
                    }
                        }
                            }
                                }
                                    tinP.pEtScratch->boxZapF( tinP , T(psttc1)+T(fn) , 1 ) ;
                                    SCOOPS
                                {
                                IFsCRATCH
                                etThread.boxPutF( tinP , T(psttc2)+T(fn) , tHost , tHost.csF( tinP ) ) ;
                            {
                            FORsTRINGSiN2( psttzListWhite )
                        {
                        else for( countT offn = 0 ; offn < cNicName ; offn ++ )
                        if( !bWhite ) etThread.traceF( tinP , tHost+T("    VERIFIED: blocked pending human inspection of web site") ) ;

                        }
                            }
                                break ;
                                //etThread.traceF( tinP , T("================================================ White Bot found! [tHost]:    ")+tHost ) ;
                                bWhite = 1 ;
                            {
                            if( idHit && idHit - 1 + pptWhite[ offw ]->csF( tinP ) == tHost.csF( tinP ) )
                            countT idHit = etThread.strIdF( tinP , *pptWhite[ offw ] , tHost , 1 ) ;
                        {
                        for( countT offw = 0 ; offw < sizeof pptWhite / sizeof pptWhite[ 0 ] ; offw ++ )
                        ZE( boolT , bWhite ) ;
                    {
                    if( bVerified )

                    }
                        }
                            break ;
                            bVerified = 1 ;
                        {
                        if( nnPeer == pNicName[ offn ] )
                    {
                    for( countT offn = 0 ; offn < cNicName ; offn ++ )
                    ZE( boolT , bVerified ) ;

                    etThread.sockNicNameF( tinP , pNicName , cNicName , tHost ) ;
                    ZE( countT    , cNicName ) ;
                    ZE( nicNameC* , pNicName ) ;
                {
                if( !bBlack )

                }
                    }
                        break ;
                        bBlack = 1 ;
                    {
                    if( idHit && idHit - 1 + pptBlack[ offw ]->csF( tinP ) == tHost.csF( tinP ) )
                    countT idHit = etThread.strIdF( tinP , *pptBlack[ offw ] , tHost , 1 ) ;
                {
                for( countT offw = 0 ; offw < sizeof pptBlack / sizeof pptBlack[ 0 ] ; offw ++ )
                ZE( boolT , bBlack ) ;
            {
            if( tHost.csF( tinP ) )

            }
                etThread.delF( tinP , psttHost ) ;
                tHost = T(psttHost) ;
                etThread.sockPsttHostF( tinP , psttHost , nnPeer ) ; ___( psttHost ) ;
                ZE( strokeS* , psttHost ) ;
            {
            TN( tHost , "" ) ;

            nicNameC nnPeer = etThread.strDigitsToNicNameF( tinP , fn , 0 , 0 ) ;

            fileNameC fn( tinP , etThread , pInfo->psttIfoName ) ;
        {
        else
        }
            break ;
            DEL( pInfo ) ;
        {
        if( !pInfo || !pInfo->psttIfoName )

        etThread.diskFindFileOrDirF( tinP , pInfo , hFind , psttc1 ) ;
        ZE( infoFileS* , pInfo ) ;
    {
    do
    handleC hFind( tinP , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_FILEfIND ) ;
{
FORsTRINGSiN1( psttzListBlock )

strokeS* psttzListWhite = tListBlock ;
tListWhite += T("////factory5/d/ideafarm.home.102/ephemeral/domains/com/ideafarm/ipdos/attackers/white/") ;
tListWhite += T("////factory4/d/ideafarm.home.102/ephemeral/domains/com/ideafarm/ipdos/attackers/white/") ;
tListWhite += T("////factory3/d/ideafarm.home.102/ephemeral/domains/com/ideafarm/ipdos/attackers/white/") ;
TlIST( tListWhite )

strokeS* psttzListBlock = tListBlock ;
tListBlock += T("////factory5/d/ideafarm.home.102/ephemeral/domains/com/ideafarm/ipdos/attackers/block/") ;
tListBlock += T("////factory4/d/ideafarm.home.102/ephemeral/domains/com/ideafarm/ipdos/attackers/block/") ;
tListBlock += T("////factory3/d/ideafarm.home.102/ephemeral/domains/com/ideafarm/ipdos/attackers/block/") ;
TlIST( tListBlock ) ;

TN( tAnonymous , "**** ANONYMOUS ****" ) ;

} ;

    &sSuffix2020073115090004             ,
    &sSuffix2020073115090003             ,
    &sSuffix2020073115090002             ,
    &sSuffix2020073115090001             ,

    &sSuffix2020073018310002             ,
    &sSuffix2020073018310001             ,

    &sSuffix2020073011590003             ,
    &sSuffix2020073011590002             ,
    &sSuffix2020073011590001             ,

    &sSuffix2020072914270008             ,
    &tSuffix2020072914270007             ,
    &tSuffix2020072914270006             ,
    &tSuffix2020072914270005             ,
    &tSuffix2020072914270004             ,
    &tSuffix2020072914270003             ,
    &tSuffix2020072914270002             ,
    &tSuffix2020072914270001             ,

    &tSuffix202007291425001c             ,
    &tSuffix202007291425001b             ,
    &tSuffix202007291425001a             ,
    &tSuffix2020072914250019             ,
    &tSuffix2020072914250018             ,
    &tSuffix2020072914250017             ,
    &tSuffix2020072914250016             ,
    &tSuffix2020072914250015             ,
    &tSuffix2020072914250014             ,
    &tSuffix2020072914250013             ,
    &tSuffix2020072914250012             ,
    &tSuffix2020072914250011             ,
    &tSuffix2020072914250010             ,
    &tSuffix202007291425000f             ,
    &tSuffix202007291425000e             ,
    &tSuffix202007291425000d             ,
    &tSuffix202007291425000c             ,
    &tSuffix202007291425000b             ,
    &tSuffix202007291425000a             ,
    &tSuffix2020072914250009             ,
    &tSuffix2020072914250008             ,
    &tSuffix2020072914250007             ,
    &tSuffix2020072914250006             ,
    &tSuffix2020072914250005             ,
    &tSuffix2020072914250004             ,
    &tSuffix2020072914250003             ,
    &tSuffix2020072914250002             ,
    &tSuffix2020072914250001             ,
{
textC* pptBlack[] =



TN( sSuffix2020073115090004             , ".sbcglobal.net" ) ;
TN( sSuffix2020073115090003             , "analyzation-00008.xyz" ) ;        //NO DOT IS INTENTIONAL
TN( sSuffix2020073115090002             , ".com.sg" ) ;
TN( sSuffix2020073115090001             , ".ivo.net" ) ;

TN( sSuffix2020073018310002             , ".righton.ru" ) ;
TN( sSuffix2020073018310001             , ".ip-51-254-149.eu" ) ;

TN( sSuffix2020073011590003             , ".tum.de" ) ;
TN( sSuffix2020073011590002             , ".ipip.net" ) ;               //GRAY           //U:: THIS WO IS INTERESTING, PROVIDES API TO OBTAIN LOCATION OF IP
TN( sSuffix2020073011590001             , ".shodan.io" ) ;               //GRAY

TN( sSuffix2020072914270008             , ".uni-bonn.de" ) ;
TN( tSuffix2020072914270007             , ".shadowserver.org" ) ;
TN( tSuffix2020072914270006             , ".semrush.com" ) ;
TN( tSuffix2020072914270005             , ".ptd.net" ) ;
TN( tSuffix2020072914270004             , ".med.ec" ) ;
TN( tSuffix2020072914270003             , ".comcast.net" ) ;
TN( tSuffix2020072914270002             , ".censys-scanner.com" ) ;
TN( tSuffix2020072914270001             , ".carilion.com" ) ;

TN( tSuffix202007291425001c             , ".vnpt.vn" ) ;
TN( tSuffix202007291425001b             , ".verizon.net" ) ;
TN( tSuffix202007291425001a             , ".triolan.net" ) ;
TN( tSuffix2020072914250019             , ".tis-dialog.ru" ) ;
TN( tSuffix2020072914250018             , ".telecomitalia.it" ) ;
TN( tSuffix2020072914250017             , ".systel.pl" ) ;
TN( tSuffix2020072914250016             , ".swimleylaw.com" ) ;
TN( tSuffix2020072914250015             , ".ovo.sc" ) ;
TN( tSuffix2020072914250014             , ".oraclecloud.com" ) ;
TN( tSuffix2020072914250013             , ".netsystemsresearch.com" ) ;         //GRAY
TN( tSuffix2020072914250012             , ".net.uy" ) ;
TN( tSuffix2020072914250011             , ".net.ma" ) ;
TN( tSuffix2020072914250010             , ".net.in" ) ;
TN( tSuffix202007291425000f             , ".mediaworks.rs" ) ;
TN( tSuffix202007291425000e             , ".ip-144-217-12.net" ) ;
TN( tSuffix202007291425000d             , ".intrinsec.com" ) ;
TN( tSuffix202007291425000c             , ".internet-census.org" ) ;         //GRAY
TN( tSuffix202007291425000b             , ".imsbiz.com" ) ;
TN( tSuffix202007291425000a             , ".hinet.net" ) ;
TN( tSuffix2020072914250009             , ".gapsmedia.com" ) ;
TN( tSuffix2020072914250008             , ".corbina.ru" ) ;
TN( tSuffix2020072914250007             , ".contaboserver.net" ) ;
TN( tSuffix2020072914250006             , ".comnet.bg" ) ;
TN( tSuffix2020072914250005             , ".com.tw" ) ;
TN( tSuffix2020072914250004             , ".com.br" ) ;
TN( tSuffix2020072914250003             , ".com.au" ) ;
TN( tSuffix2020072914250002             , ".cloudsystemnetworks.com" ) ;
TN( tSuffix2020072914250001             , ".amazonaws.com" ) ;


/**********************************************************************************************************************************************/
/**********************************************************************************************************************************************/
/****                                                                                                                                      ****/
/****  BLACK (AND GRAY) LIST                                                                                                               ****/
/****                                                                                                                                      ****/
/**********************************************************************************************************************************************/
/**********************************************************************************************************************************************/


} ;
    &tSuffixYandex            ,
    &tSuffixSogou             ,
    &tSuffixMsn               ,
    &tSuffixGoogleUserContent ,
    &tSuffixGoogleBot         ,
    &tSuffixGoogle            ,
    &tSuffixBaidu             ,
{
textC* pptWhite[] =

TN( tSuffixYandex            , ".yandex.com" ) ;
TN( tSuffixSogou             , ".sogou.com" ) ;
TN( tSuffixMsn               , ".msn.com" ) ;
TN( tSuffixGoogleUserContent , ".googleusercontent.com" ) ;
TN( tSuffixGoogleBot         , ".googlebot.com" ) ;
TN( tSuffixGoogle            , ".google.com" ) ;
TN( tSuffixBaidu             , ".baidu.com" ) ;

/**********************************************************************************************************************************************/
/**********************************************************************************************************************************************/
/****                                                                                                                                      ****/
/****  WHITE LIST                                                                                                                          ****/
/****                                                                                                                                      ****/
/**********************************************************************************************************************************************/
/**********************************************************************************************************************************************/

}
    etThread.delF( tinP , pNicName ) ;
    }
        etThread.traceF( tinP , T(pNicName[offn])+tb4+tName ) ;
    {
    for( countT offn = 0 ; offn < cNicName ; offn ++ )
    etThread.sockNicNameF( tinP , pNicName , cNicName , tName ) ;
    ZE( countT    , cNicName ) ;
    ZE( nicNameC* , pNicName ) ;
    TN( tName , "ideafarm.com" ) ;
{
TN( tb4 , "    " ) ;

TODO

/*1*/WAKEsHOWtEXT( "tool.http.whitelist.updater" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
