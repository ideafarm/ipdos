
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return sgn ;

    }
        if( !sgn ) sgn = sttWoth1.idAdam - sttWoth2.idAdam ;

        }
            }
                cToDo  -= csImage1      ; // THIS IS SAFE BECAUSE IF THE IMAGE SIZES ARE NOT THE SAME SIZE THEN sgn IS NONZE SO WILL NOT ITERATE AGAIN
                offbi2 += cbImage2 * SB ;
                offbi1 += cbImage1 * SB ;

                if( !sgn ) sgn = cbImage1 - cbImage2 ;
                sgn = thirdC::c_memcmpIF( tinP , pb1P + offbi1 / SB , pb2P + offbi2 / SB , cbImageMin ) ;

                ;
                    : cbImage2
                    ? cbImage1
                countT cbImageMin = cbImage1 < cbImage2

                countT cbImage2 = csImage2 * sizeof( strokeS ) ;
                countT cbImage1 = csImage1 * sizeof( strokeS ) ;
                countT csImage2 = stti2.idAdam ;
                countT csImage1 = stti1.idAdam ;

                valueInF( pb2P , offbi2 , ( SB - offbi2 ) % SB ) ;
                valueInF( pb1P , offbi1 , ( SB - offbi1 ) % SB ) ;
            {
            if( !sgn && stti1.idCaste == sc_cADAMeXPORT )     // EITHER stti1 OR stti2 CAN BE INSPECTED SINCE BOTH MUST BE IDENTICAL

            if( !sgn ) sgn = stti1.cNote   - stti2.cNote   ;
            if( !sgn ) sgn = stti1.idAdam  - stti2.idAdam  ;
                       sgn = stti1.idCaste - stti2.idCaste ;
            getStrokeS( stti2 , pb2P , offbi2 ) ;
            getStrokeS( stti1 , pb1P , offbi1 ) ;
            strokeS stti2 ;
            strokeS stti1 ;
        {
        while( !sgn && cToDo -- )

        ;
            : sttWoth2.idAdam
            ? sttWoth1.idAdam
        countT cToDo = sttWoth1.idAdam < sttWoth2.idAdam
    {
    if( !POOP)
    ZE( sCountT , sgn ) ;

    }
        }
            }
                case 2 : { __( stti.idCaste - sc_PREFIXeXTRA   )                             ; break ; }
                case 1 : { __( stti.idCaste - sc_PREFIXuTILITY )                             ; break ; }
                case 0 : { __( stti.idCaste - sc_PREFIXlENGTH  ) ; *ppsttWoth[ offs ] = stti ; break ; }
            {
            switch( offi ) //CS:CODEsYNC: strCompareEncodedF 11200035

            getStrokeS( stti , ppb[ offs ] , *pOffbi[ offs ] ) ;
            strokeS stti ;
        {
        for( countT offi = 0 ; offi < CSpREFIX ; offi ++ )

        }
            valueInF( ppb[ offs ] , *pOffbi[ offs ] , sizeof( countT ) * SB ) ;
            __( finger != FINGERnEG_STReNCODEf && finger != FINGERnEGoLD_strEncodeF ) ;
            countT finger = valueInF( ppb[ offs ] , *pOffbi[ offs ] , sizeof( countT ) * SB ) ;
        {
    {
    for( countT offs = 0 ; offs < sizeof ppb / sizeof ppb[ 0 ] ; offs ++ )

    strokeS* ppsttWoth[] = { &sttWoth1 , &sttWoth2 } ;
    strokeS sttWoth2 ;
    strokeS sttWoth1 ;

    countT* pOffbi[] = { &offbi1 , &offbi2 } ;
    ZE( countT , offbi2 ) ; //BIT OFFSET OF NEXT READ
    ZE( countT , offbi1 ) ; //BIT OFFSET OF NEXT READ

    const byteT* ppb[] = { pb1P , pb2P } ;

    }
        if( POOP ) return 0 ;
        __( !((countT*)pb2P)[ 1 ] ) ;
        __( !((countT*)pb1P)[ 1 ] ) ;
        __( ((countT*)pb2P)[ 0 ] != FINGERnEG_STReNCODEf && ((countT*)pb2P)[ 0 ] != FINGERnEGoLD_strEncodeF ) ;
        __( ((countT*)pb1P)[ 0 ] != FINGERnEG_STReNCODEf && ((countT*)pb1P)[ 0 ] != FINGERnEGoLD_strEncodeF ) ;
        if( POOP ) return 0 ;
        __Z( pb2P ) ;
        __Z( pb1P ) ;
        if( POOP ) return 0 ;
    {
    IFbEcAREFUL
{
/*1*/sCountT etherC::strCompareEncodedF( tinS& tinP , const byteT* const pb1P , const byteT* const pb2P )/*1*/

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

