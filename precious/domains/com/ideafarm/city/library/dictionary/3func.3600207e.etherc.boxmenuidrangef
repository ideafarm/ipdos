
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    _OUT_
    FORsTRINGSiNsPANNEDcOMBINEDtAIL1
    }
        if( idMaxP < idFile            ) idMaxP = idFile ;
        if( idMinP > idFile || !idMinP ) idMinP = idFile ;
        delF( tinP , psttw ) ;
        else idFile = strDigitsToSCountF( tinP , psttw , 0 , 1 ) ;
        }
            delF( tinP , psttw2 ) ;
            idFile = strDigitsToSCountF( tinP , psttw2 , 0 , 1 ) ;
            strWordF( tinP , psttw2 , psttw , sttq , S1C('.') , 2 ) ; ___( psttw2 ) ;
            //sttq = ze ;
            ZE( strokeS* , psttw2 ) ;
        {
        if( sttDelimiterP == S1C('/') )
        ZE( countT , idFile ) ;
        strWordF( tinP , psttw , psttc1 , sttq , sttDelimiterP , - 1 ) ; ___( psttw ) ;
        strokeS sttq( (countT)0 , sc_IGNOREqUOTES ) ;
        ZE( strokeS* , psttw ) ;

        if( bSkip ) continue ;
        }
            delF( tinP , psttw ) ;
            bSkip = psttw && !strCompareF( tinP , tTag , psttw ) ;
            strWordF( tinP , psttw , psttc1 , sttq , S1C('.') , - 4 ) ; ___( psttw ) ;
            strokeS sttq( (countT)0 , sc_IGNOREqUOTES ) ;
            ZE( strokeS* , psttw ) ;
        {
        ZE( boolT , bSkip ) ;

        if( POOP ) break ;
    {
    FORsTRINGSiNsPANNEDcOMBINEDhEAD1( soulm )
    TN( tTag , "!writing" ) ;
    countT cItemsNU = box.menuF( tinP , soulm ) ;
    soulC soulm( tinP , TAG( TAGiDnULL ) ) ;
    boxC box( tinP , *this , psttLikeP ) ;

    if( !sttDelimiterP ) sttDelimiterP = S1C('.') ;
    _INoLD_

    }
        if( POOP ) return ;
        __( !( psttLikeP->idCaste == sc_PREFIXlENGTH ) ) ;
        if( POOP ) return ;
        __Z( psttLikeP ) ;
        __NZ( idMaxP ) ;
        __NZ( idMinP ) ;
        if( POOP ) return ;
    {
    IFbEcAREFUL
    SCOOP
{
/**//*1*/voidT etherC::boxMenuIdRangeF( tinS& tinP , countT& idMinP , countT& idMaxP , const strokeS* psttLikeP , const countT csttEstimateP , strokeS sttDelimiterP )/*1*/

//U::REWRITE THIS TO ELIMINATE CAPACITY LIMIT

*/
  if 0 then S1C('.') is used
  can be 0
 sttDelimiterP
 csttEstimateP
  any name pattern that is legal for boxC::menuF
 psttLikeP
  must be 0
 idMaxP
  must be 0
 idMinP
arguments
reports the minimum and maximum value
   U: fix this by fixing strDigitsToSCountF (after rewriting it to use IFC digit order rather than foreign digit order)
  this kluge is present because strDigitsToSCountF can no longer handle strings that begin with valid digits but also contain strokes that are not valid in numbers
   iow, if S1C('/') then a second parsing takes place
   else the last word is assumed to be a valid number in foreign digit order
   if sttDelimiterP is S1C('/') then the last word is parsed again to get the -second- word delimited by S1C('.'), which is assumed to be a valid number
  the way that it really works is a cluge
 U: WARNING: this function does not yet work according to these comments
   example: the file name T("///ideafarm/ephemeral/tmp/103008c/cdefghi.fooey") would be converted to the value cdef
   example: the file name T("///ideafarm/ephemeral/tmp/103008c/10_9.fooey") would be converted to the value a
   example: the file name T("///ideafarm/ephemeral/tmp/103008c/10.fooey") would be converted to the value 10
  examples using S1C('/') as the delimiter
   example: the file name T("///ideafarm/ephemeral/tmp/103008c.fooey.cdefghi") would be converted to the value cdef
   example: the file name T("///ideafarm/ephemeral/tmp/103008c.fooey.10_9") would be converted to the value a
   example: the file name T("///ideafarm/ephemeral/tmp/103008c.fooey.10") would be converted to the value 10
  examples using S1C('.') as the delimiter
 these digits are assumed to be base 16 unless an explicit base indicator is found
 the last "word", delimited by S1C('/'), in each box name is interpreted as countT digits
converts a menu of box names into a list of countT values
  \<A HREF=\"5.f710104.1.1.0.html\"\>f710104:  WAKEsHOW( "example.simplest.func.103008c.etherC.boxMenuIdRangeF" )\</A\>
 simplest
examples
\<A HREF=\"5.103008c.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$boxMenuIdRangeF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

