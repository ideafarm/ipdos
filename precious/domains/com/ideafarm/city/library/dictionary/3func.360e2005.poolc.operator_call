
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    _OUT_

#endif
    }
        }
            }
                break ;
                //if( !*guts.ppSlots[ offs ] ) { DELzOMBIE( guts.ppSlots[ offs ] ) ; }
            {
            if( !pbP )
            (*guts.ppSlots[ offs ])( tinP , pbP ) ;
        {
        if( guts.ppSlots[ offs ] )
    {
    for( countT offs = guts.expCbSlotMin ; offs <= guts.expCbSlotMax ; offs ++ )
#if defined( NEVERdEFINED )
//U:: OBSOLETED BY ADDITION OF DROP HEADER

    }
        if( pbP ) { BLAMMO ; }
        (*guts.ppSlots[ offs ])( tinP , pbP ) ;

        //if( offs == 0x18 ) tinP.pEther->traceF( tinP , T("-------- DELETE") ) ; //U::20140808@1936: TO FIND A BUG

        if( !guts.ppSlots[ offs ] ) { BLAMMO ; }

        countT offs = guts.expCbSlotMin + ( dropHeader & mask ) ;
        countT mask = ( 1 << guts.cBitsExpCbSlot ) - 1 ;
        countT& dropHeader = ((countT*)pbP)[ - 1 ] ;
    {
    if( pbP )

    if( processGlobal0I.pbHeap < pbP && pbP < processGlobal0I.pbHeapEnd ) processGlobal3I.heap.delF( tinP , pbP ) ;

    if( F(guts.flagsCt) & flPOOLc_READoNLY ) { BLAMMO ; }

    _INoLD_
{
/*1*/voidT poolC::operator ()( tinS& tinP , byteT*& pbP )/*1*/

/**/

*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

