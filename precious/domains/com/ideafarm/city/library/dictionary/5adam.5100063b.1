
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

}
etThread.delF( tinP , psttw ) ;
LOGrAW( T("[tStr,aBad]: \"")+tStr+T("\" ")+T(psttw)+T("\r\n") ) ;
etThread.strFromF( tinP , psttw , aBad , flFORMAT_EXPONENT , 0/*cs*/ , 0/*idcpoint*/ , 0/*cPrecisionP*/ , 0/*radixP*/ , 0/*csttExtraP*/ ) ; ___( psttw ) ;
ZE( strokeS* , psttw ) ;
{

aBad += PI / ( TUCK << 0 ) ;

}
etThread.delF( tinP , psttw ) ;
LOGrAW( T("[tStr,aBad]: \"")+tStr+T("\" ")+T(psttw)+T("\r\n") ) ;
etThread.strFromF( tinP , psttw , aBad , flFORMAT_EXPONENT , 0/*cs*/ , 0/*idcpoint*/ , 0/*cPrecisionP*/ , 0/*radixP*/ , 0/*csttExtraP*/ ) ; ___( psttw ) ;
ZE( strokeS* , psttw ) ;
{

measureT aBad = etThread.strDigitsToMeasureF( tinP , tStr , 0 , 0 ) ;
TN( tStr , "100+^7383f1." ) ;

TODO

/*1*/WAKEsHOWtEXT( "doodle.floating.point.exact" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

