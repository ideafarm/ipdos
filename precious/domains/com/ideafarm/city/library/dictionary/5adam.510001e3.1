
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


//VISIBLE

REST
etThread.osProcessIdPhaseAdamF( tinP , ifcIDpHASEhANDOFFoLD_SHUTTINGdOWN ) ;

lever = 0x0 ; value = sw ; etThread.strokeF( tinP , T("when lever=")+TF1(lever)+T("  sw=")+TF1(value)+T("\r\n") ) ;
lever = 0x1 ; value = sw ; etThread.strokeF( tinP , T("when lever=")+TF1(lever)+T("  sw=")+TF1(value)+T("\r\n") ) ;
lever = 0x2 ; value = sw ; etThread.strokeF( tinP , T("when lever=")+TF1(lever)+T("  sw=")+TF1(value)+T("\r\n") ) ;
lever = 0x3 ; value = sw ; etThread.strokeF( tinP , T("when lever=")+TF1(lever)+T("  sw=")+TF1(value)+T("\r\n") ) ;
lever = 0x4 ; value = sw ; etThread.strokeF( tinP , T("when lever=")+TF1(lever)+T("  sw=")+TF1(value)+T("\r\n") ) ;
lever = 0x5 ; value = sw ; etThread.strokeF( tinP , T("when lever=")+TF1(lever)+T("  sw=")+TF1(value)+T("\r\n") ) ;
lever = 0x6 ; value = sw ; etThread.strokeF( tinP , T("when lever=")+TF1(lever)+T("  sw=")+TF1(value)+T("\r\n") ) ;
lever = 0x7 ; value = sw ; etThread.strokeF( tinP , T("when lever=")+TF1(lever)+T("  sw=")+TF1(value)+T("\r\n") ) ;
lever = 0x6 ; value = sw ; etThread.strokeF( tinP , T("when lever=")+TF1(lever)+T("  sw=")+TF1(value)+T("\r\n") ) ;
lever = 0x5 ; value = sw ; etThread.strokeF( tinP , T("when lever=")+TF1(lever)+T("  sw=")+TF1(value)+T("\r\n") ) ;
lever = 0x4 ; value = sw ; etThread.strokeF( tinP , T("when lever=")+TF1(lever)+T("  sw=")+TF1(value)+T("\r\n") ) ;
lever = 0x3 ; value = sw ; etThread.strokeF( tinP , T("when lever=")+TF1(lever)+T("  sw=")+TF1(value)+T("\r\n") ) ;
lever = 0x2 ; value = sw ; etThread.strokeF( tinP , T("when lever=")+TF1(lever)+T("  sw=")+TF1(value)+T("\r\n") ) ;
lever = 0x1 ; value = sw ; etThread.strokeF( tinP , T("when lever=")+TF1(lever)+T("  sw=")+TF1(value)+T("\r\n") ) ;
lever = 0x0 ; value = sw ; etThread.strokeF( tinP , T("when lever=")+TF1(lever)+T("  sw=")+TF1(value)+T("\r\n") ) ;

ZE( countT , value ) ;

lever = 0x5 ; sw = lever * 0x100 ;
lever = 0x4 ; sw = lever * 0x100 ;
lever = 0x3 ; sw = lever * 0x100 ;
lever = 0x2 ; sw = lever * 0x100 ;

switchC sw( tinP , ether , TAG( TAGiDnULL ) , flSTACKc_null , lever ) ;
ZE( countT , lever ) ;

TODO

/*1*/WAKEhIDE( "example.simplest.func.1200002.switchC.switchC" )/*1*/
/**/
*/
\<A HREF=\"5.5e10104.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

