
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//

                            
REST

etherC::loafIF( tinP ) ;
etThread.traceF( tinP , T("ok") ) ;

}
    etThread.traceF( tinP , T("[foo]:    ")+TF2(foo,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ;
    sRpt2 >> foo ;
    ZE( countT , foo ) ;
{
while( sRpt2 )

etThread.traceF( tinP , T("sRpt2 [cPlates]:    ")+TF2((countT)sRpt2,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ;
sRpts >> sRpt2 ;

soulC sRpt2( tinP , TAG( TAGiDnULL ) , flSOUL_null , "soul.report.hooey" ) ;

//G:soulC sRpt2( tinP , TAG( TAGiDnULL ) , flSOUL_null , "soul.report.hooey" ) ;
//G:soulC sRpt2( tinP , TAG( TAGiDnULL ) ) ;

etThread.traceF( tinP , T("sRpts [cPlates]:    ")+TF2((countT)sRpts,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ;

}
    sRpts << sRpt ;

    etThread.traceF( tinP , T("sRpt [cPlates]:    ")+TF2((countT)sRpt,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ;

    }
        sRpt << ii ;
    {
    for( countT ii = 0x11111111 ; ii <= 0x88888888 ; ii += 0x11111111 )

    soulC sRpt( tinP , TAG( TAGiDnULL ) , flSOUL_null , "soul.report.gooey" ) ;

    //G: soulC sRpt( tinP , TAG( TAGiDnULL ) , flSOUL_null , "soul.report.gooey" ) ;
    //G: soulC sRpt( tinP , TAG( TAGiDnULL ) ) ;
{
soulC sRpts( tinP , TAG( TAGiDnULL ) ) ;

TODO

/*1*/WAKEsHOWtEXT( "test.soulC.with.jot.shifting.soulC" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

