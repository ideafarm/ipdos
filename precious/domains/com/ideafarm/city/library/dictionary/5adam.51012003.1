
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//

                            
REST

etherC::loafIF( tinP ) ;
etThread.traceF( tinP , T("ok") ) ;

while( !ether && ~hFind && !POOP ) ;
}
    DEL( pInfo ) ;
    }
        etThread.traceF( tinP , T("host [nnPeer,name]:    ")+T(nnPeer)+tb4+tHost ) ;
        }
            etThread.delF( tinP , psttHost ) ;
            tHost = T(psttHost) ;
            etThread.sockPsttHostF( tinP , psttHost , nnPeer ) ; ___( psttHost ) ;
            ZE( strokeS* , psttHost ) ;
        {
        TN( tHost , "" ) ;

        nicNameC nnPeer = etThread.strDigitsToNicNameF( tinP , fn , 0 , 0 ) ;

        //etThread.traceF( tinP , T("found 1:    ")+T(fn) ) ;
        fileNameC fn( tinP , etThread , pInfo->psttIfoName ) ;
    {
    else
    }
        break ;
        DEL( pInfo ) ;
    {
    if( !pInfo || !pInfo->psttIfoName )

    etThread.diskFindFileOrDirF( tinP , pInfo , hFind , tPath ) ;
    ZE( infoFileS* , pInfo ) ;
{
do
handleC hFind( tinP , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_FILEfIND ) ;
TN( tPath , "////factory3/d/ideafarm.home.102/ephemeral/domains/com/ideafarm/ipdos/attackers/allowWoMore/" ) ;
//TN( tPath , "////factory3/d/ideafarm.home.102/ephemeral/domains/com/ideafarm/ipdos/attackers/human/" ) ;
TN( tb4 , "    " ) ;

// \\Factory3\d\ideafarm.home.102\ephemeral\domains\com\ideafarm\ipdos\attackers\human

TODO

/*1*/WAKEsHOWtEXT( "scratch.3.base04.doodle" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
