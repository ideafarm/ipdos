
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//

                            
REST

ether.loafIF( tinP ) ;
etThread.traceF( tinP , T("ok") ) ;

etThread.delF( tinP , pbi ) ;
}
    }
        etThread.traceF( tinP , T("failed gently") ) ;
        POOPRqUIET
    {
    if( POOP )

    tinP.pEtScratch->boxGetShadowF( tinP , pbi , cbi , psttf ) ; ___( pbi ) ;

    SCOOPS
{
IFsCRATCH
ZE( countT , cbi ) ;
ZE( byteT* , pbi ) ;

strokeS* psttf = tNotExist ;
TN( tNotExist , "////factory99/d/foo.ttt" ) ;

CloseHandle( oshThread ) ;

}
    etThread.traceF( tinP , T("[rc]:    ")+TF2(rc,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ;
    static countT rc = GetLastError() ;
{
else
if( bOk ) etThread.traceF( tinP , TF2((countT)cCycles,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED) ) ;

static BOOL bOk = QueryThreadCycleTime( oshThread ,  &cCycles ) ;
static ZE( ULONG64 , cCycles ) ;

static HANDLE oshThread = OpenThread( PROCESS_QUERY_INFORMATION , 0 , tinP.osTid ) ;
//B:static HANDLE oshThread = OpenThread( PROCESS_QUERY_LIMITED_INFORMATION , 0 , tinP.osTid ) ;


TODO





/*1*/WAKEsHOWtEXT( "scratch.3.test.boxGetShadowF.nonexistent.network.file" )/*1*/
/**/
*/
 this is done by extracting and resinking items
i demonstrate how to use stackC to maintain a list of most recently used blobs
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
