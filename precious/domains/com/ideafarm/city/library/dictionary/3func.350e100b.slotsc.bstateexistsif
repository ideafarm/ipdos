
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return bExists ;
    }
        bExists = sexC::bStateExistsIF( tinP , ostoName , expCbDropP , offs , idStateSpaceP ) ;
            
        OStEXTCF( ostoName , offs , '0' ) ;
        OStEXTAK( ostoName , ".slotsC.sex." ) ;
        OStEXTA(  ostoName , postNameP ) ;
        OStEXT(   ostoName , TUCK << 2 )
    {
    if( bStateExists ) for( countT offs = 0 ; !bExists && offs < CsLOTeXTENTS ; offs ++ )

    THREADmODE1rESTORE
    ;
        : tinP.pEther->diskFileExistsF( tinP , T("///ideafarm/ephemeral/backed.up.daily/domains/com/ideafarm/ipdos/memorySpaces/")+T(thirdC::postUserNameIF())+T("/")+TF2(tinP.pAdamGlobal1->idMemorySpace,flFORMAT_UNSIGNED|flFORMAT_NObIGITvALUES)+T("/stateSpaces/")+TF2(idStateSpaceP,flFORMAT_UNSIGNED|flFORMAT_NObIGITvALUES)+T("/")+T(postNameP)+T(".slotsC.sex.*") )
        ? 0
    boolT bStateExists = !idStateSpaceP
    THREADmODE1oN( flTHREADmODE1_ALLOWsTOPwHILEgRABBING )

    ZE( boolT , bExists ) ;
    puseC puse( tinP , ifcIDpOOL_ADAMtEMP ) ;
    _IO_
{
/*1*/boolT slotsC::bStateExistsIF( tinS& tinP , const osTextT* const postNameP , const countT expCbDropP , const countT idStateSpaceP )/*1*/

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

