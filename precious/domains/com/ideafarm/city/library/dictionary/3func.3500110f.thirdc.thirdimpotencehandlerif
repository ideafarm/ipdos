
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    _OUT_
    tinP.pAdamGlobal1->_thirdC_.ifcImpotenceHandlerArg = ifcImpotenceHandlerArgIP ;
    tinP.pAdamGlobal1->_thirdC_.pifcImpotenceHandlerF = pifcImpotenceHandlerFIP ;
    _INoLD_

    }
        if( POOP ) return ;
    {
    IFbEcAREFUL
{
/*1*/voidT thirdC::thirdImpotenceHandlerIF( tinS& tinP , const ifcImpotenceHandlerFT pifcImpotenceHandlerFIP , const countT ifcImpotenceHandlerArgIP )/*1*/

/**/
*/
 pifcImpotenceHandlerFIP
 ifcImpotenceHandlerArgIP
 tinP
arguments
 ensure that any object pointed to by the argument will still exist when the handler is called
 you do not know which threads will call the handler, or when
warning: if ifcImpotenceHandlerArgIP contains a pointer, be careful
  if the handler serializes, be aware that other threads might have already entered the old handler and are blocked
 however, the old handler address must continue to be valid since the old handler can be called after it has been deregistered
i can be used to replace or unregister a handler
  if this is an issue, the handler can serialize itself and use a static countT object to maintain an idEntry value
  a handler might be called wo or more times soon after it is deregistered
 if only the woth occurance need be detected, the handler can deregister itself
   this can be done by defining a local static grabC object and grabbing it
  if these calls must be serialized, the handler definition must serialize itself
 the handler will be called simultaneously by several threads when thPrime becomes impotent
 if only asynch impotence is to be detected, the handler must compare thirdP with thPrime
serialization and filtering is the responsibility of the handler definition
this is fyi only; the handler cannot modify the behavior of thirdC::operator countT&()
the handler receives a reference to the thirdC object that is being evaluated into a countT&
by doing so, an adam definition can detect an impending impotence and perform work before the impotence is seen
i register a handler function that will be called each time thirdC::operator countT&() is about to return a nonze value
\<A HREF=\"5.1020146.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$thirdImpotenceHandlerIF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

