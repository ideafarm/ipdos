
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return lever ;

    if( pBaton ) pBaton->ungrabF( tinP ) ;

    countT lever = pbLB ? *(countT*)pbLB : 0 ;
    byteT* pbLB = (byteT*)&stackk[ idP ] ;

    _IO_

    else if( osTidOwner != tinP.osTid && !bDying && !( F(stackk.flagsF(tinP)) & flSTACKc_ALLOWmULTIPLEuNSERIALIZED ) ) BLAMMO ;
    else if( !osTidOwner ) osTidOwner = tinP.osTid ;
    if( pBaton ) pBaton->grabF( tinP , TAG( TAGiDnULL ) ) ;

    }
        if( third ) return 0 ;
    {
    IFbEcAREFUL
    SCOOP
{
/*1*/countT switchC::leverF( tinS& tinP , const countT idP )/*1*/

//U::CONJ: IT WOULD BE MORE USEFUL TO RETURN THE LEVER OF THE PLATE LAST REFERENCED WHEN !idP

/**/
*/
   i might be changed so that i return the lever of the plate last referenced
  warning: my function when idP is 0 might change
   wrongo: i actually return the lever value of the most recently referenced flavor
  if 0 then the current value of the lever is returned
  if not 0 then the value of the idP'th lever is returned
  can be 0
 idP
 tinP
arguments
  \<A HREF=\"5.3a20104.1.1.0.html\"\>3a20104:  WAKEsHOW( "example.simplest.func.1200009.switchC.leverF" )\</A\>
 simplest
examples
\<A HREF=\"5.1200009.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$leverF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

