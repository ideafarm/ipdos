
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    _OUT_
    }
        BOSpOOP

        }
            while( !POOP && ( bNoQuit || ( bNoQuitEarly && !thPrimeIF( tinP ) ) || ( cTriesP && -- cTriesP ) ) ) ;
            }
                }
                    ++ s ; dosSleepIF( tinP , TOCK >> 2 ) ;
                    //if( bSay ) { CONoUTrAW3( "dosDeleteIF [brcQuery]: " , tinP.brcQuery , "\r\n" ) ; }

                    else              { CONoUTrAW( ostos ) ; }
                    if( tinP.pEther ) tinP.pEther->traceF( tinP , T(ostos) ) ;
                    OStEXTAK( ostos , "\"\r\n" ) ;
                    OStEXTA(  ostos , postP ) ;
                    OStEXTAK( ostos , " \"" ) ;
                    OStEXTC(  ostos , tinP.brcQuery , 0 ) ;
                    OStEXTAK( ostos , "dosDeleteIF [brcQuery,postFile]: \"" ) ;
                    OStEXT(  ostos , TUCK << 1 ) ;
                {
                else
                if( !tinP.bosFail ) break ;
        
                #endif

                    BLAMMO ; //U::ADD CODE TO TEST "NOT FOUND" (SEE NT)
                    BOS( WHATgbo , BOSfAIL , unlink ( postP ) )

                #elif defined( __linux__ )

                    if( tinP.bosFail && ( tinP.brcLath == ERROR_FILE_NOT_FOUND || tinP.brcLath == ERROR_PATH_NOT_FOUND ) ) tinP.bosFail = 0 ;
                    BOS( WHATgbo , BOSoK , DeleteFile( postP ) )
                    BOSnOvALUE( WHATgbo , SetLastError( 0 ) )

                #elif defined( __NT__ )

                    BOSI( WHATgbo , BOSfAIL , DosDelete( postP ) )

                #ifdef __OS2__
            {
            do
            sleepC s( tinP , TAG( TAGiDnULL ) ) ;

            //}
            //    CONoUTrAW( ostos ) ;
            //    OStEXTAK( ostos , "\"\r\n" ) ;
            //    OStEXTA(  ostos , postP ) ;
            //    OStEXTAK( ostos , "deleting \"" ) ;
            //    OStEXT(  ostos , TUCK << 1 ) ;
            //{
            //if( bSay )
            //boolT bSay = tinP.pc Utility[ 0 ] ;
        {
        boolT bNoQuitEarly = !cTriesP ;
        boolT bNoQuit = cTriesP == - 1 ;
    {
    _INoLD_

    }
        countT foo = 2 ;
    {
    if( c_strstrIF( postP , ".!.transcript." ) )

    // 980502.0953: asked Wegge to add code to detect and handle the case of removing a directory
    // 980501.0854: wegge@wegge.dk (Anders Wegge Jakobsen): emailed this definition to Wegge for review

    }
        if( POOP ) return ;
        __Z( postP ) ;
        if( POOP ) return ;
    {
    IFbEcAREFUL
{
/*1*/voidT thirdC::dosDeleteIF( tinS& tinP , const osTextT* const postP , countT cTriesP )/*1*/

/**/
*/
  if - 1 then will retry forever even if thPrimeIF( tinP ) is impotent
  if not 0 then will try cTriesP times (even if thPrimeIF( tinP ) is impotent)
  if 0 then will retry forever unless thPrimeIF( tinP ) is impotent
  can be 0
 cTriesP
  example: "\\fooey"
 postP
arguments
 on linux, will return immediately, but the file will not be d eleted until it is closed by all processes
 on os/2 and windows, will block temporarily if another process has the file open
 if the file does not exist, i return immediately and silently
d eletes the file if it exists
  \<A HREF=\"5.9d00104.1.1.0.html\"\>9d00104:  WAKEsHOW( "example.simplest.func.102001d.thirdC.dosDeleteIF" )\</A\>
 simplest
examples
\<A HREF=\"5.102001d.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$dosDeleteIF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

