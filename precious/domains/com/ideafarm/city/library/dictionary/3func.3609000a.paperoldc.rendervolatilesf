
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    tinP.pAdamGlobal5->frPaper.grab.ungrabF( tinP ) ;

    }
        }
            winPulp.positionPaperBackF( tinP ) ;
            winPulp.cacheF( tinP , saOLD_POPfRAME ) ;
            winPulp.stqr_strokingFrame >> pbsf ;
            byteT* pbsf = (byteT*)&sf ;
            strokingFrameS sf ;
        {
    
        }
            }
                renderVolatileF( tinP , vb , crmm , flagsP , phCloneP ) ;
                vBodyS& vb = *(vBodyS*)&(countT&)*sadamP.features.pswVolBody ;
                sadamP.features.cLeverVolBody = sadamP.features.pswVolBody->leverF( tinP , idf ) ;
            {
            for( countT idf = 1 ; idf <= cFlavors ; idf ++ )
            countT cFlavors = sadamP.features.pswVolBody->cFlavorsF( tinP ) ;
        {
        else
        if( pvbP ) renderVolatileF( tinP , *pvbP , crmm , flagsP , phCloneP ) ;

        }
            crmm.mRowMax += - 1.0 - sadamP.pStrike->sc.mRowsMarginSadamFrameVolatileBodyRendered ;
            crmm.mRowMin +=   1.0 + sadamP.pStrike->sc.mRowsMarginSadamFrameVolatileBodyRendered ;
            crmm.mColMax += - 1.0 - sadamP.pStrike->sc.mColsMarginSadamFrameVolatileBodyRendered ;
            crmm.mColMin +=   1.0 + sadamP.pStrike->sc.mColsMarginSadamFrameVolatileBodyRendered ;
        {
        if( F(sadamP.features.fc.flagsFrame) & flFEATUREsADAMfRAME_EXISTS )
        crmm.mRowMax = sadamP.pStrike->sc.mIdRowHotVolatileBodyRendered - 1.0 + sadamP.pStrike->sc.mRowsHotVolatileBodyRendered ;
        crmm.mRowMin = sadamP.pStrike->sc.mIdRowHotVolatileBodyRendered ;
        crmm.mColMax = sadamP.pStrike->sc.mIdColHotVolatileBodyRendered - 1.0 + sadamP.pStrike->sc.mColsHotVolatileBodyRendered ;
        crmm.mColMin = sadamP.pStrike->sc.mIdColHotVolatileBodyRendered ;
        mColRowMinMaxS crmm ;

        }
            sadamP.pStrike->sc.mRowsMarginSadamFrameVolatileBodyRendered = sadamP.pStrike->sc.mRowsMarginSadamFrame ;
            sadamP.pStrike->sc.mColsMarginSadamFrameVolatileBodyRendered = sadamP.pStrike->sc.mColsMarginSadamFrame ;
            sadamP.pStrike->sc.mRowsHotVolatileBodyRendered              = sadamP.pStrike->sc.mRowsHot              ;
            sadamP.pStrike->sc.mColsHotVolatileBodyRendered              = sadamP.pStrike->sc.mColsHot              ;
            sadamP.pStrike->sc.mIdRowHotVolatileBodyRendered             = sadamP.pStrike->sc.mIdRowHot             ;
            sadamP.pStrike->sc.mIdColHotVolatileBodyRendered             = sadamP.pStrike->sc.mIdColHot             ;
        {
        if( F(flagsP) & flSTRIKEvOLATILE_LOADpOSITION )
        //CODEsYNC: 0b50005 0b50007

        winPulp.positionPaperBackF( tinP ) ;
        winPulp.cacheF( tinP , scOld_mmFRAME ) ;
        winPulp.stqr_strokingFrame << (byteT*)&sfw ;

        sfw.bWrap = 0 ;
        thirdC::c_memcpyIF( tinP , (byteT*)&sfw , (byteT*)&sadamP.pStrike->sc.sf , sizeof sfw ) ;
        strokingFrameS sfw ;
    {
    if( !( F(winPulp.flagsMode) & flPULPmODE_SUPPRESSpELcOLORcHANGES ) )
    winPulpOldC& winPulp = *(winPulpOldC*)x1.pPulp ;

    tinP.pAdamGlobal5->frPaper.grab.grabF( tinP , TAG( TAGiDnULL ) ) ;
{
/*1*/voidT paperOldC::renderVolatilesF( tinS& tinP , sadamC& sadamP , const handleC* const phCloneP , const flagsT flagsP , vBodyS* const pvbP )/*1*/

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//

