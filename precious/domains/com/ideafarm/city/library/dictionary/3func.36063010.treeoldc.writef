
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    grab.ungrabF( tinP ) ;
    }
        walkF( tinP , hWalk , countTC() , countTC() , _treeWriteCBF , cArg , flTREEwALK_HEADERS ) ;
        countT cArg = (countT)&c2p ;
        count2S c2p( (countT)this , (countT)&soulP ) ;
        handleC hWalk( tinP , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_TREEwALK ) ;
    {
    else
    }
        soulP << (countT)ifcIDtYPEtREEwALKcb_END ;
        soulP << flagsTreeWrite ;
        soulP << (countT)ifcIDtYPEtREEwALKcb_BRANCHeND ;
        soulP << flagsTreeWrite ;
        soulP << psttP ;
        soulP << (countT)ifcIDtYPEtREEwALKcb_BRANCHbEGIN ;
        soulP << (countT)ifcIDtYPEtREEwALKcb_BEGIN ;

        flagsT flagsTreeWrite = flTREEwRITE_null ;
    {
    if( psttP )

    soulP << (countT)1 ;    
    soulP << (countT)FINGERnEG_TREEoLDcsOUL ;    
    *sw_pCursor.pLeverLathRefF( tinP ) = cLeverCursor ;
    grab.grabF( tinP , TAG( TAGiDnULL ) ) ;
{
/*1*/voidT treeOldC::writeF( tinS& tinP , soulC& soulP , const strokeS* const psttP )/*1*/

/**/
*/
   it applies only to a treeOldC object with the default data definition (each branch is a strokeS string)
   this mode does not currently support a fully general treeOldC object
  if not 0 then soulP receives the soul of a branch with value psttP and with no kids
  if 0 then the soul of the current branch (and its kids) is written to soulP
  is normally 0
  may be 0
 psttP
  may be empty or not empty
 soulP
 tinP
arguments
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

