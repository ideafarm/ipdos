
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

}
    }
        ++ s ; ether.osSleepF( tinP , TICK ) ;
        sleepC s( tinP , TAG( TAGiDnULL ) ) ;

        }
            }
                etThread.boxPutF( tinP , T("///desk/IdeaFarm " "(tm) Warning (user testing).txt") , postNag , sizeof postNag - 1 ) ;

                } ;

                    "Thank you for using IPDOS (tm).\r\n"
                    "\r\n"
                    "select \"Stop\".\r\n"
                    "Find the entry that begins with \"IdeaFarm\".  Right click on it, and\r\n"
                    "\r\n"
                    "    Windows / Start / Control Panel / Administrative Tools / Services\r\n"
                    "\r\n"
                    "To disable IPDOS (tm) without rebooting, open:\r\n"
                    "\r\n"
                    "placed onto your desktop when IPDOS (tm) disables itself.\r\n"
                    "To remove all files, use the IdeaFarm " "(tm) Removal Utility that will be\r\n"
                    "\r\n"
                    "as before you rebooted and reinstalled.\r\n"
                    "itself in the same place, and your data files will be visible to you just\r\n"
                    "files created by you.  If you download and open IPDOS (tm), it will install\r\n"
                    "After reboot, disk files created by IPDOS (tm) will remain, including any\r\n"
                    "\r\n"
                    "that's all you need to do.\r\n"
                    "turn off, or reboot, this computer.  So, if you want to remove IPDOS (tm),\r\n"
                    "this computer.  This software will automatically disable itself when you\r\n"
                    "A new version of IPDOS (tm) that has not yet passed user testing is active on\r\n"
                    "\r\n"
                    "http://ideafarm.com\r\n"
                    "IPDOS (tm)\r\n"
                    postIPDOSlONG "\r\n"
                {
                osTextT postNag[] =
            {
            if( home.idVersionIpdosProduction < home.idVersionIpdosMe )

            }
                etThread.boxPutF( tinP , T("///desk/IdeaFarm " "(tm) Warning.txt") , postNag , sizeof postNag - 1 ) ;

                } ;

                    "Thank you for using IPDOS (tm).\r\n"
                    "\r\n"
                    "a current version.  This version will eventually be disabled.\r\n"
                    "An old version of IPDOS (tm) is active on this computer.  Please download\r\n"
                    "\r\n"
                    "http://ideafarm.com\r\n"
                    "IPDOS (tm)\r\n"
                    postIPDOSlONG "\r\n"
                {
                osTextT postNag[] =
            {
            if( !( ++ idTick % 0x10 ) && home.idVersionIpdosMe <= home.idVersionIpdosNag )

            home.idVersionIpdosBan        = vv & 0xff ; vv >>= 8 ;
            home.idVersionIpdosNag        = vv & 0xff ; vv >>= 8 ;
            home.idVersionIpdosProduction = vv & 0xff ; vv >>= 8 ;
            home.idVersionIpdosTest       = vv & 0xff ; vv >>= 8 ;

            home.idVersionIpdosMe = 4 ; //HARDCODED idVersion OF THIS RELEASE OF IPDOS (tm)

            homeS& home = homeS::homeIF() ;

            countT vv = *pcNn ;
        {
        if( pcNn && *pcNn )
        const countT* pcNn = nnVersion ;
    
        //CONoUTrAW( tName+T(": ")+T(nnVersion)+T("\r\n") ) ;
        nicNameC nnVersion = socketC::nicNameIF( tinP , etThread , tName ) ;
    {
    while( !ether )
    ZE( countT , idTick ) ;
    TN( tName , "version.ipdos.db.ideafarm.com" ) ;

    }
        ++ s ; ether.osSleepF( tinP , TOCK * 0x20 ) ;
        sleepC s( tinP , TAG( TAGiDnULL ) ) ;
    {

    //PROD: ether.osThreadAdamF( tinP , ifcIDaDAM_DOMAINsERIALnUMBERdISPENSER ) ;

    stateS state( tinP , etThread ) ;
{

TODO

//EACH INCREMENT CREATES A BOUNDARY AT WHICH THE DISABLING CAN BE DONE "UP TO"
//INCREMENT idVersion ONLY AT A MILETONE IN DEVELOPMENT OF IPDOS
//THE PURPOSE OF THIS SUBSYSTEM IS TO DISABLE OLD SOFTWARE IN THE FIELD
//ONLY ff VERSION VALUES ARE AVAILABLE WITH THIS SUBSYSTEM

STATE0

/*1*/WAKEsHOWtEXT( "ifcIDaDAM_KERNELwATCHdATABASE" )/*1*/
/**/
*/
obsoleted by 415 in the sense that 415 is used but 895 is not in the config on 2011.01.11
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

