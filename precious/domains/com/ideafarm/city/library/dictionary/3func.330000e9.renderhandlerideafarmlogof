
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


#endif

}
    return 0 ;
    if( tinP.fingerprint && ether && cArgP ) ;

    }
        }
            break ;
            }
                }
                    break ;
        
                    paperP.mIdRow = mIdRowCenter - 200 * mScale * thirdC::mathSinIF( tinP , ptOnCircle * 2 * PI + PI / 2 ) ;
                    paperP.mIdCol = mIdColCenter + 200 * mScale * thirdC::mathCosIF( tinP , ptOnCircle * 2 * PI + PI / 2 ) ;

                    *(measureT*)&paperP.pPulp->stqr_mSinHotAngle[ 1 ] = thirdC::mathSinIF( tinP , mOsAngle + PI / 2 ) ;
                    *(measureT*)&paperP.pPulp->stqr_mCosHotAngle[ 1 ] = thirdC::mathCosIF( tinP , mOsAngle + PI / 2 ) ;
                    measureT mOsAngle = osAngleF( ptOnCircle ) ;
        
                    measureT ptOnCircle = br ? ptArcStart - ptString * ptArcLen : ptArcStart + ptString * ptArcLen ;
        
                    else      ptArcLen = ptArcEnd   <= ptArcStart ? ptArcStart - ptArcEnd   : 1.0 - ptArcEnd   + ptArcStart ;
                    if( !br ) ptArcLen = ptArcStart <= ptArcEnd   ? ptArcEnd   - ptArcStart : 1.0 - ptArcStart + ptArcEnd   ;
                    ZE( measureT , ptArcLen ) ;
                    measureT ptString = (measureT)( idsP - 1 ) / (measureT)( psttSnipP->idAdam - 1 ) ;
        
                    boolT br = 1 ;              //"REVERSE". INDICATES WHICH WAY TO GO AROUND THE CIRCLE (NORMAL IS CLOCKWISE)
                    measureT ptArcEnd   = 7.0 / 8.0 ;
                    measureT ptArcStart = 1.0 / 8.0 ; //"PER TUCK".  THE WOTH STROKE WILL BE AT START. 0 IS AT BOTTOM
        
                    }
                        mIdRowCenter = paperP.mIdRow ;
                        mIdColCenter = paperP.mIdCol ;
                    {
                    if( idsP == 1 )
                    static measureT mIdRowCenter ;
                    static measureT mIdColCenter ;
                {
                case 2 :
                }
                    break ;
        
                    paperP.mIdRow = mIdRowCenter - 200 * mScale * thirdC::mathSinIF( tinP , ptOnCircle * 2 * PI + PI / 2 ) ;
                    paperP.mIdCol = mIdColCenter + 200 * mScale * thirdC::mathCosIF( tinP , ptOnCircle * 2 * PI + PI / 2 ) ;

                    *(measureT*)&paperP.pPulp->stqr_mSinHotAngle[ 1 ] = thirdC::mathSinIF( tinP , mOsAngle + PI / 2 ) ;
                    *(measureT*)&paperP.pPulp->stqr_mCosHotAngle[ 1 ] = thirdC::mathCosIF( tinP , mOsAngle + PI / 2 ) ;
                    measureT mOsAngle = osAngleF( ptOnCircle + 0.5 ) ;
        
                    measureT ptOnCircle = br ? ptArcStart - ptString * ptArcLen : ptArcStart + ptString * ptArcLen ;
        
                    else      ptArcLen = ptArcEnd   <= ptArcStart ? ptArcStart - ptArcEnd   : 1.0 - ptArcEnd   + ptArcStart ;
                    if( !br ) ptArcLen = ptArcStart <= ptArcEnd   ? ptArcEnd   - ptArcStart : 1.0 - ptArcStart + ptArcEnd   ;
                    ZE( measureT , ptArcLen ) ;
                    measureT ptString = (measureT)( idsP - 1 ) / (measureT)( psttSnipP->idAdam - 1 ) ;
        
                    boolT br = 0 ;              //"REVERSE". INDICATES WHICH WAY TO GO AROUND THE CIRCLE (NORMAL IS CLOCKWISE)
                    measureT ptArcEnd   = 7.0 / 8.0 ;
                    measureT ptArcStart = 1.0 / 8.0 ; //"PER TUCK".  THE WOTH STROKE WILL BE AT START. 0 IS AT BOTTOM
        
                    }
                        mIdRowCenter = paperP.mIdRow ;
                        mIdColCenter = paperP.mIdCol ;
                    {
                    if( idsP == 1 )
                    static measureT mIdRowCenter ;
                    static measureT mIdColCenter ;
                {
                case 1 :
            {
            switch( idString )
        {
        case sc_cALPHABET1 :
        case scOld_FORaDAMtOuSE : { idString = psttSnipP[ CSpREFIX - 1 + idsP ].idAdam ; break ; }
    {
    switch( psttSnipP[ CSpREFIX - 1 + idsP ].idCaste )

    static countT idString ;
{
/*1*/boolT renderHandlerIdeaFarmLogoF( tinS& tinP , etherC& ether , windowOldC& wP , const countT cArgP )/*1*/

measureT mScale ; //U: THIS IS OBVIOUSLY A KLUGE

#if defined( NEVERdEFINED )

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

