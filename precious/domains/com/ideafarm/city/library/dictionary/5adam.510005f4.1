
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


// *********************************************************************************************************************************************
// **** D O   N O T   E D I T   T H I S   F I L E .     I T   D I S P L A Y E D   S O   T H A T   Y O U   C A N   R E F E R   T O   I T .   ****
// *********************************************************************************************************************************************
                    
REST

etThread.strokeF( tinP , T("ok\1\n") ) ;

}
    PUSE( tinP , posto ) ;
    etThread.boxPutF( tinP , T("///ideafarm/precious/domains/com/ideafarm/city/library/snip/1snip.005001c.genSoixlOldWordDefs_etherC_4.h") , posto , costo ) ;
    
    PUSE( tinP , *(byteT**)&psttOut3 ) ;
    countT costo = etThread.strMakeF( tinP , LF , posto , psttOut3 ) ; ___( posto ) ;
    ZE( osTextT* , posto ) ;
    
    PUSE( tinP , *(byteT**)&psttOut2 ) ;
    __( cDone3 - 1 ) ;
    countT cDone3 = etThread.strReplaceF( tinP , psttOut3 , psttOut2 , T("slP << prP") , T("slP << *(baseSoilXxxxC**)&prP") ) ; ___( psttOut3 ) ;
    ZE( strokeS* , psttOut3 ) ;
    
    PUSE( tinP , *(byteT**)&psttOut1 ) ;
    __( cDone2 - 1 ) ;
    countT cDone2 = etThread.strReplaceF( tinP , psttOut2 , psttOut1 , T("etherP.delF( tinP , prP ) ;") , T("//etherP.delF( tinP , prP ) ;") ) ; ___( psttOut2 ) ;
    ZE( strokeS* , psttOut2 ) ;
    
    PUSE( tinP , *(byteT**)&psttIn ) ;
    __( cDone1 - 1 ) ;
    countT cDone1 = etThread.strReplaceF( tinP , psttOut1 , psttIn , T("slP >> prP") , T("slP >> *(baseSoilXxxxC**)&prP") ) ; ___( psttOut1 ) ;
    ZE( strokeS* , psttOut1 ) ;
    
    PUSE( tinP , posti ) ;
    etThread.strMakeFromOsTextF( tinP , psttIn , posti ) ; ___( psttIn ) ;
    ZE( strokeS* , psttIn ) ;
    
    etThread.boxGetShadowF( tinP , posti , costi , T("///ideafarm/precious/domains/com/ideafarm/city/library/snip/1snip.005001c.genSoixlOldWordDefs_etherC_4.h") ) ; ___( posti ) ;
    ZE( countT   , costi ) ;
    ZE( osTextT* , posti ) ;
{

}
    PUSE( tinP , posto ) ;
    etThread.boxPutF( tinP , T("///ideafarm/precious/domains/com/ideafarm/city/library/snip/1snip.005001c.genSoixlOldWordDefs_etherC_2.h") , posto , costo ) ;
    
    PUSE( tinP , *(byteT**)&psttOut2 ) ;
    countT costo = etThread.strMakeF( tinP , LF , posto , psttOut2 ) ; ___( posto ) ;
    ZE( osTextT* , posto ) ;
    
    PUSE( tinP , *(byteT**)&psttOut1 ) ;
    __( cDone2 - 1 ) ;
    countT cDone2 = etThread.strReplaceF( tinP , psttOut2 , psttOut1 , T("etherP.delF( tinP , phFileP ) ;") , T("//etherP.delF( tinP , phFileP ) ;") ) ; ___( psttOut2 ) ;
    ZE( strokeS* , psttOut2 ) ;
    
    PUSE( tinP , *(byteT**)&psttIn ) ;
    __( cDone1 - 1 ) ;
    countT cDone1 = etThread.strReplaceF( tinP , psttOut1 , psttIn , T("slP >> phFileP") , T("slP >> *(baseSoilXxxxC**)&phFileP") ) ; ___( psttOut1 ) ;
    ZE( strokeS* , psttOut1 ) ;
    
    PUSE( tinP , posti ) ;
    etThread.strMakeFromOsTextF( tinP , psttIn , posti ) ; ___( psttIn ) ;
    ZE( strokeS* , psttIn ) ;
    
    etThread.boxGetShadowF( tinP , posti , costi , T("///ideafarm/precious/domains/com/ideafarm/city/library/snip/1snip.005001c.genSoixlOldWordDefs_etherC_2.h") ) ; ___( posti ) ;
    ZE( countT   , costi ) ;
    ZE( osTextT* , posti ) ;
{

BLAMMO ; // 20120326: ENHANCED soulC AND EDITED ifcIDaDAM_SOIXLoLDwORDdEFS TO ELIMINATE THE NEED TO SMUDGE THE SOIL DEFS TO GET CLEAN COMPILE

TODO

/*1*/WAKEsHOWtEXT( "ifcIDaDAM_SMUDGEsOIXLoLDdEFS.tool.smudge.snip.005001c.genSoixlOldWordDefs_etherC_2.h" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//

