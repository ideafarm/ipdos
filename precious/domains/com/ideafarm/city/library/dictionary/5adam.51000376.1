
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


//VISIBLE

REST
etThread.osProcessIdPhaseAdamF( tinP , ifcIDpHASEhANDOFFoLD_SHUTTINGdOWN ) ;

etThread.boxPutF( tinP , T("///d/hello.ttt") , "hello" , 5 ) ;

((thirdC&)etThread).logF( tinP , T("userName=\"")+T(postName)+T("\"") ) ;

BOSpOOP
BOS( WHATgbo , BOSoK , GetUserName( postName , &costaName ) )
DWORD costaName = sizeof postName ;
osTextT postName[ 0x100 ] ;

}
    etThread.delF( tinP , pstta ) ;    
    ((thirdC&)etThread).logF( tinP , T("ability=\"")+T(pstta)+T("\"") ) ;
    sta >> pstta ;
    ZE( strokeS* , pstta ) ;
{
while( !etThread && sta )

myAbilitiesF( tinP , etThread , sta ) ;
stackC sta( tinP , etThread , TAG( TAGiDnULL ) , flSTACKc_null , ifcSTACKtYPE_PTR_strokeS ) ;

TODO

}
   }
      stP << psttOldC( tinP , ether , T((osTextT*)ucPrivilegeName) ) ;
      printf( "%40s (%s)\n", ucDisplayName, ucPrivilegeName );
      BOSpOOP
      BOS( WHATgbo , BOSoK , LookupPrivilegeDisplayName( NULL, (char*)ucPrivilegeName,(char*)ucDisplayName, &dwDisplayNameSize, &dwLangId ) )
      BOSpOOP
      BOS( WHATgbo , BOSoK , LookupPrivilegeName( NULL, &ptgPrivileges->Privileges[x].Luid,(char*)ucPrivilegeName, &dwPrivilegeNameSize ) )
      dwDisplayNameSize = sizeof( ucDisplayName );

      dwPrivilegeNameSize = sizeof( ucPrivilegeName );
   {
   for( x=0; x<ptgPrivileges->PrivilegeCount; x++ )
   printf( "Account privileges: \n\n" );

   BOSpOOP
   BOS( WHATgbo , BOSoK , GetTokenInformation( hAccessToken, TokenPrivileges, InfoBuffer, sizeof(InfoBuffer), &dwInfoBufferSize) )

   BOSpOOP
   BOS( WHATgbo , BOSoK , OpenProcessToken( hProcess, TOKEN_READ, &hAccessToken ) )

   hProcess = (HANDLE)tinP.brcRaw ;
   BOSdOnOTtEST( WHATgbo , GetCurrentProcess() )

   UINT x;
   DWORD dwLangId;
   UCHAR ucDisplayName[500];
   UCHAR ucPrivilegeName[500];

   DWORD dwDisplayNameSize;
   DWORD dwPrivilegeNameSize;
   DWORD dwInfoBufferSize;
   PTOKEN_PRIVILEGES ptgPrivileges = (PTOKEN_PRIVILEGES)InfoBuffer;
   UCHAR InfoBuffer[1000];
   HANDLE hProcess, hAccessToken;
{
voidT myAbilitiesF( tinS& tinP , etherC& ether , stackC& stP )

/*1*/WAKEhIDE( "doodle.nt.privileges" )/*1*/
/**/
*/
\<A HREF=\"5.8730104.1.0.html\"\>definition\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

