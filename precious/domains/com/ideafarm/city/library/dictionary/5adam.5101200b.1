
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//

                            
REST

etherC::loafIF( tinP ) ;



etThread.delF( tinP , posti ) ;
socki.readF( tinP , posti , costi , idpHe , nnHe , 0 , 0 ) ; ___( posti ) ;
ZE( countT , idpHe ) ;
nicNameC nnHe ;
ZE( countT   , costi ) ;
ZE( osTextT* , posti ) ;

etThread.osThreadF( TaRG1( tmSayF ) ) ;

idpMe = socki.bindF( tinP , 0 , nicNameC() , 1 , 0 ) ;
socketC socki( tinP , etThread , TAG( TAGiDnULL ) , ifcSOCKETtYPE_DATAgRAM , flSOCKETc_null , 0 , 0 , 0 , 0 , 0 ) ;

nnMe = socketC::nicNameIF( tinP , etThread , 0 ) ;

//etThread.delF( tinP , pNicName ) ;
//socketC::nicNameIF( tinP , etThread , pNicName , cNicName , 0 ) ; ___( pNicName ) ;
//ZE( countT    , cNicName ) ;
//ZE( nicNameC* , pNicName ) ;


TODO

DONE( tmSayF )

socko.writeF( tinP , idpMe , nnMe , tSay , tSay.csF( tinP ) ) ;

TN( tSay , "Hello, Jesus!" ) ;

socketC socko( tinP , etThread , TAG( TAGiDnULL ) , ifcSOCKETtYPE_DATAgRAM , flSOCKETc_null , 0 , 0 , 0 , 0 , 0 ) ;

}
    ++ s ; ether.osSleepF( tinP , TOCK ) ;
    sleepC s( tinP , TAG( TAGiDnULL ) ) ;
{

TASK( tmSayF )

countT idpMe ;
nicNameC nnMe ;

/*1*/WAKEsHOWtEXT( "scratch b" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

