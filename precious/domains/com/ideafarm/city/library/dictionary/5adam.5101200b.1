
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//

                            
REST

etThread.loafIF( tinP ) ;

nodeC nodeMe( tinP , etThread ) ;

TODO

}
    }
        ++ s ; ether.osSleepF( tinP , TOCK >> 2 ) ;
    {
    while( cKids )
    bQuit = 1 ;

    }
        ++ s ; ether.osSleepF( tinP , TOCK ) ;
    {
    while( !etPrime )
    sleepC s( tinP , TAG( TAGiDnULL ) ) ;
    etherC& etPrime = etherC::etPrimeIF( tinP ) ;

    ether.osThreadF( TaRG1( tmRefreshListF ) , (countT)this , (countT)&bQuit , (countT)&cKids ) ;
    countT cKids = 1 ;
    ZE( boolT , bQuit ) ;
{
stOpen( tinP , ether , TAG( TAGiDnULL ) , flSTACKc_BLOB , sizeof( idPortTimeC ) )
ether( etherP ) ,
nodeC::nodeC( tinS& tinP , etherC& etherP , const countT idTypeP ) :

DONE( tmRefreshListF )
}
    dec02AM( cKidsP ) ;

    }
        }
            }
                ++ s ; ether.osSleepF( tinP , TOCK ) ;
                sleepC s( tinP , TAG( TAGiDnULL ) ) ;

                etThread.traceF( tinP , T("local nodes (end)") , flTRACE_null , ifcIDtRACEdIVERT_e ) ;
                }
                    }
                        etThread.traceF( tinP , T("local node [off,nn,nnv4]:    ")+TF2(offi,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED)+tb4+T(nl.pEntry[offi].nn)+tb4+T(nicNameC(nl.pEntry[offi].nnv4)) , flTRACE_null , ifcIDtRACEdIVERT_e ) ;
                    {
                    if( nl.pEntry[ offi ].ttl )
                {
                for( countT offi = 0 ; offi < nl.cEltsMax ; offi ++ )
                etThread.traceF( tinP , T("local nodes (begin)") , flTRACE_null , ifcIDtRACEdIVERT_e ) ;
            {
            while( !ether && !POOP && !bQuitP )
            nodeListS& nl = *(nodeListS*)(byteT*)napNodeList ;
            TN( tb4 , "    " ) ;
        {
        if( !bFail )

        THREADmODE3rESTORE
        }
            bFail = 1 ;
            etThread.traceF( tinP , T("watch must be running for this home; doing nothing") ) ;
            napNodeList.formattingIsDoneF( tinP ) ;
        {
        if( !napNodeList.bFormattedF() )
        napkinC napNodeList( tinP , TAG( TAGiDnULL ) , "ipdos.node.list" , 0 , TOCK , ifcOPENsHAREDmEMORYhOW_nCeO , flNAPKINc_null , - 1 , ifcIDmEMORYsPACE_UNIVERSE ) ;
        THREADmODE3oN( flTHREADmODE3_ALLOWeXPLICITmEMORYsPACE )
        ZE( boolT , bFail ) ;
    {

    countT& cKidsP = *(countT*)pTaskP->c3 ;
    boolT&  bQuitP =  *(boolT*)pTaskP->c2 ;
    nodeC&  nodeP  =  *(nodeC*)pTaskP->c1 ;
{
if( pTaskP && pTaskP->c1 )
TASK( tmRefreshListF )

;
}
    nodeC( tinS& tinP , etherC& etherP , const countT idTypeP = ifcIDtYPEnODE_LOCAL ) ;

    public :

    stackC  stOpen ;
    etherC& ether  ;
{
class nodeC

#define ifcIDtYPEnODE_GLOBAL         2 
#define ifcIDtYPEnODE_LOCAL          1


/*1*/WAKEhIDE( "doodle.nodeC.bang.relay" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

