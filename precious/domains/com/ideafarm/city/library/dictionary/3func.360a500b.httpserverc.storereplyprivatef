
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    swReply.ungrabF( tinP ) ;

    new( 0 , tinP , (byteT*)pzRef , sizeof( httpReplySrefC ) ) httpReplySrefC( *pReply ) ;
    }
        DELzOMBIE( pRef ) ;
        httpReplySrefC* pRef = pzRef ;
    {
    if( bExists )
    httpReplySrefC* pzRef = (httpReplySrefC*)&(countT&)swReply ;
    psttLeverUrl = (strokeS*)argP.psttUrl ;
    const boolT bExists = !!swReply.idSlotOfLeverF( tinP , (countT)argP.psttUrl ) ;

    swReply.grabF( tinP , TAG( TAGiDnULL ) ) ;

    httpReplyS* pReply = new( 0 , tinP , LF ) httpReplyS( argP.ppRefOverride , argP.idForm , *argP.pprPostBody , argP.pCBF , argP.idSnipHttpPrefix , prPostUrl , *argP.pprPostTitle , *argP.pprPostDescription , *argP.pprPostMetaDescription , *argP.pprPostSlogan , *argP.pprPostPageHelp , *argP.pprPostKeywords , argP.idSnipHttpLocation ) ; ___( pReply ) ;

    ether.strMakeF( tinP , prPostUrl , argP.psttUrl , 0 , flSTRmAKE_PREFIXlENGTH ) ; ___( prPostUrl ) ;
    ZE( pbRefC* , prPostUrl ) ;

    _IO_
{
/*1*/voidT httpServerC::storeReplyPrivateF( tinS& tinP , storeReplyPrivateF_argS& argP )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

