
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    // _OUT_
    }
        for( countT off = 0 ; off < csttLength ; off ++ ) psttP[ CSpREFIX + off ] = postP[ off ] ;_WQ
        SETpREFIX( psttP , csttLength , csttExtraP ) ;_WQ
    {
    if( psttP )
    POSTPONEtEST( psttP ) ;_WQ
    third.newF( tinP , LF , psttP , CSpREFIX + csttLength + csttExtraP ) ; // CALLER MUST TAG ___( psttP ) ;_WQ
    { POOPIES csttLength = costP ? costP : thirdC::c_strlenIF( tinP , postP ) ; }
    ZE( countT , csttLength ) ;_WQ
    // _INoLD_

    }
        __Z( postP ) ;_WQ
        __NZ( psttP ) ;_WQ
        if( POOP ) return ;
    {
    IFbEcAREFUL
    SCOOP
{
/*1*/voidT etherC::strMakeFromOsTextF( tinS& tinP , strokeS*& psttP , const osTextT* const postP , const countT costP , const countT csttExtraP )/*1*/

/**/
*/
 csttExtraP
 costP
  if costP is 0 then postP is treated as a pointer to a null terminated string
  points to a string that can contain nulls iff costP is not 0
  must not be 0
 postP
 psttP
arguments
 this function will generate an access violation exception if it cannot get an allocation from the poolOld
 the standard overhead code is omitted
for maximum speed, this function omits some standard code
  \<A HREF=\"5.4830104.1.1.0.html\"\>4830104:  WAKEsHOW( "example.simplest.func.1030063.etherC.strMakeFromOsTextF" )\</A\>
 simplest
examples
\<A HREF=\"5.1030063.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$strMakeFromOsTextF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

