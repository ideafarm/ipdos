
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return vv ;
    _OUTbATONsTACKc_
    }
        extractF( (byteT*)&vv , tinP , idP ) ;
        _IO_
    {
    ZE( countT , vv ) ;
    _INbATONsTACKc_

    __( idType == ifcSTACKtYPE_BLOB ) ;
    __( idType == ifcSTACKtYPE_timeS ) ;
    __( idType == ifcSTACKtYPE_nicNameC ) ;
    SCOOP
{
/*1*/countT stackC::extractF( tinS& tinP , const countT idP )/*1*/

/**/
*/
  idP == -2 , -3 , -4 , ... refer to items near the bottom of the stack
  idP == -1 refers to the bottommost (earliest) item
  idP == 2 , 3 , 4 , ... refer to items near the top of the stack
  idP == 1 refers to the topmost (most recently added) item
   it is illegal to call this function with idP == 0 before using one of the other member functions to refer to an item on this stackC object
   if idP == 0 then the plate whose value was most recently referenced will be extracted
  1-based: idP == 0 has a special meaning
 idP
arguments
it is illegal to call me for an ifcSTACKtYPE_nicNameC or ifcSTACKtYPE_timeS stackC
this function zees the internal cursor that is used to make operator [] speedy
returns the idP'th item and removes it from the stack
  \<A HREF=\"5.dd10104.1.1.0.html\"\>dd10104:  WAKEsHOW( "example.simplest.func.115000f.stackC.extractF" )\</A\>
 simplest
examples
\<A HREF=\"5.115000f.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$extractF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

