
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


#endif

}
    }
        }
            }
                break ;
                meP.pushSnipF( tinP , stBodyP , ifcIDsNIPpREDEFINED_HOMEfACEapART1 ) ;
            {
            case 0xa :
            }
                break ;
                meP.pushSnipF( tinP , stBodyP , ifcIDsNIPpREDEFINED_HOMEfACE9pART1 ) ;
            {
            case 9 :
            }
                break ;
                meP.pushSnipF( tinP , stBodyP , ifcIDsNIPpREDEFINED_HOMEfACE8pART1 ) ;
            {
            case 8 :
            }
                break ;
                meP.pushSnipF( tinP , stBodyP , ifcIDsNIPpREDEFINED_HOMEfACE7pART1 ) ;
            {
            case 7 :
            }
                break ;
                meP.pushSnipF( tinP , stBodyP , ifcIDsNIPpREDEFINED_HOMEfACE6pART1 ) ;
            {
            case 6 :
            }
                break ;
                meP.pushSnipF( tinP , stBodyP , ifcIDsNIPpREDEFINED_HOMEfACE5pART1 ) ;
            {
            case 5 :
            }
                break ;
                meP.pushSnipF( tinP , stBodyP , ifcIDsNIPpREDEFINED_HOMEfACE4pART1 ) ;
            {
            case 4 :
            }
                break ;
                meP.pushSnipF( tinP , stBodyP , ifcIDsNIPpREDEFINED_HOMEfACE3pART1 ) ;
            {
            case 3 :
            }
                break ;
                meP.pushSnipF( tinP , stBodyP , ifcIDsNIPpREDEFINED_HOMEfACE2pART1 ) ;
            {
            case 2 :
            }
                break ;
                meP.pushSnipF( tinP , stBodyP , ifcIDsNIPpREDEFINED_HOMEfACE1pART1 ) ;
            {
            case 1 :
            //CS:CODEsYNC: 1d20003: FACES (BUY CATALOG PAGES)
        {
        switch( idFace )
    
        meP.pushSnipF( tinP , stBodyP , ifcIDsNIPpREDEFINED_HOME2 ) ;
    
        DEL( prPosts ) ;
        if( prPosts ) meP.pushSnipF( tinP , stBodyP , *prPosts ) ;
    
        }
            etThread.delF( tinP , psttw ) ;
            etThread.strMakeF( tinP , LF , prPosts , psttw , 0 , flSTRmAKE_PREFIXlENGTH ) ; ___( prPosts ) ;
    
            }
                etThread.strFuseF( tinP , psttw , T(ppostTitle[offf]) ) ;
                etThread.strFuseF( tinP , psttw , tClose ) ;
                if( offf + 1 == idFace ) etThread.strFuseF( tinP , psttw , tSelected ) ;
                etThread.strFuseF( tinP , psttw , tq ) ;
                etThread.strFuseF( tinP , psttw , T(ppostKey[offf]) ) ;
                etThread.strFuseF( tinP , psttw , tBegin ) ;
            {
            for( countT offf = 0 ; offf < cFaces ; offf ++ )
    
            etThread.strMakeF( tinP , LF , psttw , 0 , TOCK ) ; ___( psttw ) ;
            ZE( strokeS* , psttw ) ;
            TN( tSelected , " SELECTED" ) ;
    
            TN( tEnd , "</OPTION>\r\n" ) ;    

            TN( tClose , ">" ) ;
            TN( tq , "\"" ) ;

            TN( tBegin , "<OPTION VALUE=\"" ) ;
        {
        ZE( pbRefC* , prPosts ) ;
    
        meP.pushSnipF( tinP , stBodyP , ifcIDsNIPpREDEFINED_HOME1 ) ;
    
        }
            }
                idFace = c8s.c1 ;
                if( !c8s.c1 ) c8s.c1 = 1 ;
            {
            else
            if( idFace ) c8s.c1 = idFace ;
            count8S& c8s = *(count8S*)&(countT&)session.swPageState ;
            session.psttLeverUrl = (strokeS*)psttUrlP ;
        {
    
        }
            }
                }
                    }
                        break ;
                        idFace = offf + 1 ;
                    {
                    if( !etThread.strCompareF( tinP , tValueFace , T(ppostKey[offf]) ) )
                {
                for( countT offf = 0 ; offf < cFaces ; offf ++ )
            {
            if( tValueFace.csF( tinP ) )
    
            }
                if( ptv ) *ptv = T((strokeS*)(countT)swKVP) ;
    
                if( !etThread.strCompareF( tinP , psttLeverKVP , tKeyFace ) ) ptv = &tValueFace ;
                ZE( textC* , ptv ) ;
    
                psttLeverKVP = (strokeS*)swKVP.leverF( tinP , idf ) ;
            {
            for( countT idf = 1 ; idf <= cFlavors ; idf ++ )
            countT cFlavors = swKVP.cFlavorsF( tinP ) ;
    
            TN( tValueFace , "" ) ;
            TN( tKeyFace   , "face" ) ;
        {
        ZE( countT , idFace ) ;
    {

    const countT cFaces = sizeof ppostKey / sizeof ppostKey[ 0 ] ;
    
    } ;
        "Who We Are"                 ,
        postIFC " Mission Statement" ,
        postIFCCB " Deposit Account" ,
        postIFCBPP                   ,
        postIFPE                     ,
        postIFA                      ,
        postIFD                      ,
        postIFW                      ,
        "Cover Letter"               ,
        postIFPTS                    ,
    {
    osTextT* ppostTitle[] =
    //CS:CODEsYNC: 1d20003: FACES (BUY CATALOG PAGES)

    } ;
        postFACEkEY_PEOPLE       ,
        postFACEkEY_MISSION      ,
        postFACEkEY_DEPOSIT      ,
        postFACEkEY_BASICPACKAGE ,
        postFACEkEY_EMAIL        ,
        postFACEkEY_TRUST        ,
        postFACEkEY_DIRECTORY    ,
        postFACEkEY_WORK         ,
        postFACEkEY_COVER        ,
        postFACEkEY_POWERtOOLS   ,
    {
    osTextT* ppostKey[] =
    //CS:CODEsYNC: 1d20003: FACES (BUY CATALOG PAGES)

    //POPUP( T(psttUrlP) ) ;

    sessionC& session = sessionsP( tinP , nnPeerP ) ;
{
/*1*/voidT homeOldCBF( tinS& tinP , etherC& etThread , const boolT& bQuitP , httpServerC& meP , countT& cArgP , httpReplyS& replyP , stackC& stBodyP , const strokeS* const psttKVReportP , switchC& swKVP , strokeS*& psttLeverKVP , sessionsC& sessionsP , nicNameC& nnPeerP , const strokeS* const psttNameP , const strokeS* const psttQueryKVP , const strokeS* const psttPeerAgentP , const osTextT* const postBodyP )/*1*/

#if defined( NEVERdEFINED )

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

