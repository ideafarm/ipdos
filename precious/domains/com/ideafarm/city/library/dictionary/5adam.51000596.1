
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

}
    }
        }
            etThread.delF( tinP , psttn ) ;
            CONoUTrAW( T(psttn)+tcr ) ;
    
            sIn >> psttn ;
            ZE( strokeS* , psttn ) ;
        {
        while( cNames -- )
        sIn >> cNames ;
        ZE( countT , cNames ) ;

        CONoUTrAW( T("memory space ")+TF3(idMemorySpace,flFORMAT_UNSIGNED,9)+tcr ) ;
        sIn >> idMemorySpace ;
        ZE( countT , idMemorySpace ) ;
    {
    while( cFlavorsMemory -- )

    sIn >> cFlavorsMemory ;
    ZE( countT , cFlavorsMemory ) ;
{
while( sIn )
TN( tcr , "\r\n" ) ;

__( idReply - ifcIDrEPLYmONITOR_POOLoLDnAMES ) ;
sIn >> idReply ;
ZE( countT , idReply ) ;

sockm.readF( tinP , sIn ) ;
soulC sIn( tinP , TAG( TAGiDnULL ) ) ;

sockm.writeF( tinP , sOut ) ;
sOut << (countT)ifcIDcMDmONITOR_POOLoLDnAMES ;
soulC sOut( tinP , TAG( TAGiDnULL ) ) ;

sockm.connectF( tinP , homeS::homeIF().idPortKernelMonitor , socketC::nicNameIF( tinP , etThread , T("10.1.1.1") ) ) ;
socketC sockm( tinP , etThread , TAG( TAGiDnULL ) ) ;

TODO

/*1*/WAKEsHOWtEXT( "example.other.snip.00102cb.ifcIDcMDmONITOR" )/*1*/
/**/
*/
/*


//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

