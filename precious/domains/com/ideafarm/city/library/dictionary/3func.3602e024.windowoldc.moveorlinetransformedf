
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    }
        }
            thirdC::winMoveIF( tinP , *pulp.pHndDrawBitmap , mColDevice , mRowDevice ) ;
            const measureT mRowDevice = mIdRowOrigin + winPulpP.mIdRowNow ;
            const measureT mColDevice = mIdColOrigin + winPulpP.mIdColNow ;
            winPulpOldC& pulp = *(winPulpOldC*)&winPulpP ;
        {
        if( !( F(winPulpP.flagsMode) & flPULPmODE_SUPPRESSpELcOLORcHANGES ) )
        if( winPulpP.rCache.bPeeWhileMoving ) winPulpP.newWaterF( winPulpP.mIdColNow , winPulpP.mIdRowNow ) ;

        transformHotAngleF( tinP , winPulpP.mIdColNow , winPulpP.mIdRowNow , winPulpP ) ;

        //winPulpP.mIdRowNow = winPulpP.mIdRowTransformAnchor - mRow ;
        //measureT mRow = winPulpP.mIdRowNow - winPulpP.mIdRowTransformAnchor ; //U:PLAY TRANSFORM: MIRROR HORIZONTALLY AT THE BASELINE
    {
    else
    }
        }
            }
                thirdC::winLineIF( tinP , *pulp.pHndDrawBitmap , mColDevice , mRowDevice , pulp.colorF() , flagsl ) ;
                const measureT mRowDevice = mIdRowOrigin + winPulpP.mIdRowNow ;
                const measureT mColDevice = mIdColOrigin + winPulpP.mIdColNow ;
                winPulpOldC& pulp = *(winPulpOldC*)&winPulpP ;
            {
            if( !( F(flagsl) & flDRAW_SUPPRESSpELcOLORcHANGES ) )
            if( winPulpP.idLineType == 2 ) flagsl |= flDRAW_INCLUDEeNDpEL ;
            flagsT flagsl = F(winPulpP.flagsMode) & flPULPmODE_SUPPRESSpELcOLORcHANGES ? flDRAW_SUPPRESSpELcOLORcHANGES : flDRAW_null ;
        {
        winPulpP.newWaterF( winPulpP.mIdColNow , winPulpP.mIdRowNow ) ;
        transformHotAngleF( tinP , winPulpP.mIdColNow , winPulpP.mIdRowNow , winPulpP ) ;

        //winPulpP.mIdRowNow   = winPulpP.mIdRowTransformAnchor - mRow ;
        //measureT mRow = winPulpP.mIdRowNow - winPulpP.mIdRowTransformAnchor ; //U:PLAY TRANSFORM: MIRROR HORIZONTALLY AT THE BASELINE
    {
    if( winPulpP.idLineType )
{
/*1*/voidT windowOldC::moveOrLineTransformedF( tinS& tinP , winPulpOldC& winPulpP )/*1*/

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

