
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return sgn ;

    _OUT_

    }
        }
            else sgn = strCompareF( tinP , ppstt1P[ off ] , ppstt2P[ off ] , csMaxP ) ;
            else if( !ppstt2P[ off ] ) sgn =   1 ;
            else if( !ppstt1P[ off ] ) sgn = - 1 ;
            if( ( !ppstt1P[ off ] && !ppstt2P[ off ] ) || ( cpsMaxP && cpsMaxP == off ) ) break ;
        {
        for( countT off = 0 ; !sgn ; off ++ )
    {
    ZE( sCountT , sgn ) ;_WQ
    _INoLD_

    }
        if( POOP ) return 0 ;
        __Z( ppstt2P ) ;_WQ
        __Z( ppstt1P ) ;_WQ
        if( POOP ) return 0 ;
    {
    IFbEcAREFUL
    SCOOP
{
/*1*/sCountT etherC::strCompareF( tinS& tinP , const strokeS** const ppstt1P , const strokeS** const ppstt2P , const countT cpsMaxP , const countT csMaxP )/*1*/

/**/
*/
 ccMaxP
 pstt2P
 pstt1P
arguments
 if one of the strings of strings is exhausted without finding a difference, evaluates to the difference in length of the two strings of strings
 evaluates to the difference within the first pair of distinct strokes
evaluates to a positive number iff ppstt1P is "greater than" ppstt2P
  \<A HREF=\"5.e810104.1.1.0.html\"\>e810104:  WAKEsHOW( "example.simplest.func.1030054.etherC.strCompareF" )\</A\>
 simplest
examples
\<A HREF=\"5.1030054.1.0.html\"\>definition\</A\>
\<A HREF=\"6.$strCompareF.0.html\"\>instances\</A\>
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2019 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

