
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etherC::loafIF( tinP ) ;
etThread.traceF( tinP , T("ok") ) ;

etThread.traceF( tinP , T("cMissing : ")+TF3(cMissing,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED,8) ) ;
etThread.traceF( tinP , T("cFilesOnA: ")+TF3(cFilesOnA,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED,8) ) ;
}
    while( !ether && !POOP && ~hFind ) ;
    }
        DEL( pInfo ) ;
        }
            }
                etThread.traceF( tinP , TF3(++cMissing,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED,8)+T("    Not matching content found: ")+T(pInfo->psttIfoName) ) ;
            {
            if( !swTallyByHash.idSlotOfLeverF( tinP , (countT)pbHash ) )

            hasher.queryF( tinP , pbHash , sizeof pbHash ) ;
            hasher.eatF( tinP , pInfo->psttIfoName ) ;
            hasherC hasher( tinP , etThread ) ;

            if( !( ( ++ cFilesOnA ) % ( TUCK << 4 ) ) ) etThread.traceF( tinP , TF3(cFilesOnA,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED,8)+T("    ")+T(pInfo->psttIfoName) ) ;
        {
        if( pInfo && pInfo->psttIfoName && pInfo->psttIfoName[ CSpREFIX - 1 + pInfo->psttIfoName->idAdam ].idAdam != '/' )
        etThread.diskFindFileOrDirF( tinP , pInfo , hFind , tLike ) ;
        ZE( infoFileS* , pInfo ) ;
    {
    do
    handleC hFind( tinP , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_FILEfIND ) ;
    TN( tLike , "///a/ideafarm.home.101/IdeaFarm (tm)/SYSTEM/Drop Files Here To Archive/*" ) ;
{
if( !ether && !POOP )
ZE( countT , cMissing ) ;
ZE( countT , cFilesOnA ) ;

etThread.traceF( tinP , T("cFilesOnI: ")+TF3(cFilesOnI,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED,8) ) ;
}
    while( !ether && !POOP && ~hFind ) ;
    }
        DEL( pInfo ) ;
        }
            swTallyByHash ++ ;

            hasher.queryF( tinP , pbHash , sizeof pbHash ) ;
            hasher.eatF( tinP , pInfo->psttIfoName ) ;
            hasherC hasher( tinP , etThread ) ;

            if( !( ( ++ cFilesOnI ) % ( TUCK << 4 ) ) ) etThread.traceF( tinP , TF3(cFilesOnI,flFORMAT_NObIGITvALUES|flFORMAT_UNSIGNED,8)+T("    ")+T(pInfo->psttIfoName) ) ;
        {
        if( pInfo && pInfo->psttIfoName && pInfo->psttIfoName[ CSpREFIX - 1 + pInfo->psttIfoName->idAdam ].idAdam != '/' )
        etThread.diskFindFileOrDirF( tinP , pInfo , hFind , tLike ) ;
        ZE( infoFileS* , pInfo ) ;
    {
    do
    handleC hFind( tinP , TAG( TAGiDnULL ) , ifcIDtYPEhANDLE_FILEfIND ) ;
    TN( tLike , "///d/ideafarm.home.101/IdeaFarm (tm)/SYSTEM/Drop Files Here To Archive/*" ) ;
{
switchC swTallyByHash( tinP , etThread , TAG( TAGiDnULL ) , flSTACKc_DOnOTsERIALIZE , pbLever , sizeof pbHash ) ;
ZE( countT , cFilesOnI ) ;
const byteT* pbLever = pbHash ;
byteT pbHash[ 4 * sizeof( count02T ) ] ;

TODO

/*1*/WAKEsHOWtEXT( "tool.detect.missing.content.in.archive.using.hash.not.filename" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

