
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    BOSpOOP
    BOS( WHATgbo , BOSoK , CloseHandle( osh ) )
    BOSpOOP
    BOS( WHATgbo , BOSoK , SetThreadPriority( osh , THREAD_PRIORITY_TIME_CRITICAL ) )
    HANDLE osh = (HANDLE)tinP.brcRaw ;

    BOSpOOP
    BOS( WHATgbo , BOSoK , CreateThread( &sa , 1 * 1024 , (tmfosFT)tmHeartF , 0 , 0 , (ULONG*)&tidP ) )

    ZE( countT , tidP ) ;

    BOSnOtIN( SetSecurityDescriptorDacl( sa.lpSecurityDescriptor , 1 , 0 , 0 ) )
    BOSnOtIN( InitializeSecurityDescriptor( sa.lpSecurityDescriptor , SECURITY_DESCRIPTOR_REVISION ) )
    ZE( countT , _brcRaw ) ;

    sa.bInheritHandle = 0 ;
    sa.lpSecurityDescriptor = (SECURITY_DESCRIPTOR*)( _pbsd + _cbAlign ) ;
    sa.nLength = sizeof sa ;
    SECURITY_ATTRIBUTES sa ;

    if( _cbAlign ) _cbAlign = sizeof( countT ) - _cbAlign ;
    countT _cbAlign = (countT)_pbsd % sizeof( countT ) ;

    byteT _pbsd[ SECURITY_DESCRIPTOR_MIN_LENGTH + sizeof( countT ) ] ;

    _IO_

    }
        if( POOP )  return ;
    {
    IFbEcAREFUL
{
/*1*/voidT thirdC::osThreadLaunchHeartbeatIF( tinS& tinP )/*1*/

}
    #endif
        return 0 ;
    #if defined( __NT__ )
    if( argP ) ;

    }
        TELL( "tmHeartF: cleaning up" )

        }
            ++ s ; thirdC::dosSleepRawIF( tinP , MShEARTbEATnAP ) ;
            //POOPIE
            TELL( "napping" )
    
            }
                }
                    inc02AM( home.pFireAll[ processGlobal2I.pFireGroup[ offg ].idGroup - 1 ].cHeartBeats ) ;
                {
                if( processGlobal2I.pFireGroup[ offg ].idAdam && processGlobal2I.pFireGroup[ offg ].idGroup && processGlobal2I.pFireGroup[ offg ].idGroup < CfIREaLLrANKS )
            {
            for( countT offg = 0 ; offg < CfIREgROUPS ; offg ++ )
            TELL( "working" )
        {
        while( bWo )
        countT bWo = 1 ; //TO AVOID COMPILER WARNING
        sleepC s( tinP , LF , (byteT*)0 ) ; //MUST NOT EVER BE DESTROYED, SINCE THAT WOULD INVOKE TINSL

        homeS& home = homeS::homeIF() ;
        if( !( ++ processGlobal2I.pcPhaseLow[ tinP.monitor.idThread ] ) ) { BLAMMO ; }

        POOPIES
    {

    _IO_
    TELL( "setting up" )
    if( tinP.monitor.idThread - ifcIDtHREADlOW_tmHeartF ) { BLAMMO ; }
    if( !( ++ processGlobal2I.pcPhaseLow[ tinP.monitor.idThread ] ) ) { BLAMMO ; }
    processGlobal5I.tinHeart.osPid = _brcRaw ;
    BOSnOtIN( GetCurrentProcessId() )
    processGlobal5I.tinHeart.osTid = _brcRaw ;
    BOSnOtIN( GetCurrentThreadId() )
    thirdC::osTraceWrongNodeIF( tinP , (byteT*)&_brcRaw , "tmHeartF: _brcRaw" ) ;
    ZE( countT , _brcRaw ) ;
    tinS& tinP = processGlobal5I.tinHeart ;

    //TINSL MUST NOT BE USED ANYWHERE ON THIS THREAD; THAT WOULD REFERENCE THE tinS FOR THREAD main (SINCE I EXIST EARLY AND LATE)
{
/*1*/TASK0PROTO( tmHeartF ) // NOTE THAT THIS S A RAW THREAD; IT HAS NO THREAD LOCAL STORAGE SO CANNOT CALL pTinF/*1*/
/**/
*/
/*

#endif
    typedef ULONG (OSF *tmfosFT)( voidT* argP ) ;
#elif defined( __NT__ )
    typedef voidT (OSF *tmfosFT)( ULONG argP ) ;
#ifdef __OS2__
//DUPLICATED CODE: 1020057 1610008

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//

