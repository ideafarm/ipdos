
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    return bListed ;

    UNGRABtINaRGS( ifcIDtYPEtINaRGiNuSE_LIST )
    tinP.ta.retained.u.listWalk.walk.pPoolRecord = 0 ;                                                                            \
    }
        }
            POPtINaRGS
            listC::walkIF( tinP , pczMe ) ;
            tinP.ta.pushed.u.listWalk.util.pcP[ 1 ]      = (countT)&listingP ;
            tinP.ta.pushed.u.listWalk.util.pcP[ 0 ]      = (countT)&bListed ;
            tinP.ta.pushed.u.listWalk.walk.flagsWalkP    = flLISTwALK_null ;
            tinP.ta.pushed.u.listWalk.walk.pListWalkCBFP = listWalkSelectIsListedCBF ;
            PUSHtINaRGS
        {
    
        countT pczMe[] = { LISTnAME_ROOT , LISTnAME_ROOTsYSTEM4 , LISTnAME_TEMPORARY , LISTnAME_SELECTED , idName , LISTnAME_RECORD , 0 } ;
    
        puseC puseat( tinP , ifcIDpOOL_ADAMtEMP ) ;
    {
    tinP.ta.retained.u.listWalk.walk.pPoolRecord = &PUSE ;                                                                                                                    \
    ZE( boolT , bListed ) ;
    GRABtINaRGS( ifcIDtYPEtINaRGiNuSE_LIST )

    }
        if( POOP ) return 0 ;
        __( tinP.ta.retained.u.listWalk.walk.pPoolRecord ) ;
        if( POOP ) return 0 ;
    {
    IFbEcAREFUL
{
/*1*/boolT selectC::isListedF( tinS& tinP , const listingC& listingP )/*1*/

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//

