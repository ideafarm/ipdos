
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etThread.strokeF( tinP , T("ok\r\n") ) ;

FORsTRINGSiNsPANNEDcOMBINEDtAIL1
}
    etThread.delF( tinP , postd ) ;
    etThread.boxPutF( tinP , tOut , postd , costd ) ;
    etThread.delF( tinP , psttw2 ) ;
    etThread.delF( tinP , psttw3 ) ;
    textC tOut = T("///ideafarm/precious/domains/com/ideafarm/city/library/snip/1snip.")+T(psttw2)+T(".")+T(psttw3)+T(".ClINESiNdEF") ;
    etThread.delF( tinP , psttw ) ;
    etThread.strWordF( tinP , psttw3 , psttw , sttq , S1C('.') , 3 ) ; ___( psttw3 ) ;
    ZE( strokeS* , psttw3 ) ;
    etThread.strWordF( tinP , psttw2 , psttw , sttq , S1C('.') , 2 ) ; ___( psttw2 ) ;
    ZE( strokeS* , psttw2 ) ;

    etThread.winSetTitleF( tinP , psttw ) ;
    etThread.strWordF( tinP , psttw , psttc1 , sttq , S1C('/') , - 1 ) ; ___( psttw ) ;
    strokeS sttq( (countT)0 , sc_IGNOREqUOTES ) ;
    ZE( strokeS* , psttw ) ;

    etThread.delF( tinP , pstto ) ;
    costd = etThread.strMakeF( tinP , postd , pstto ) ; ___( postd ) ;

    etThread.strMakeF( tinP , pstto , T("#define ClINESiNdEF 0x")+TF2(cLines,flFORMAT_FOREIGN)+T("\r\n") ) ; ___( pstto ) ;
    ZE( strokeS* , pstto ) ;

    etThread.delF( tinP , postd ) ;
    countT cLines = etThread.strCLinesF( tinP , T(postd) ) ;
    etThread.boxGetShadowF( tinP , postd , costd , psttc1 ) ;
    ZE( countT , costd ) ;
    ZE( osTextT* , postd ) ;

    if( ether ) break ;
{
FORsTRINGSiNsPANNEDcOMBINEDhEAD1( soul1m )
ZE( countT , idf ) ;

etThread.delF( tinP , pstth ) ;
}

    else { etThread.boxMenuF( tinP , soul1m , T("///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/?????." )+T(pstth)+T("*") ) ; }
    }
        etThread.boxMenuF( tinP , soul1m , T("///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/1snip.0050002.*") ) ;
        etThread.boxMenuF( tinP , soul1m , T("///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/4boot.*"        ) ) ;
        etThread.boxMenuF( tinP , soul1m , T("///ideafarm/precious/domains/com/ideafarm/city/library/dictionary/5adam.*"        ) ) ;
    {
    if( !pstth || !pstth->idAdam )

    etThread.strokeF( tinP , T("file: \"")+T(pstth)+T("\"\r\n") ) ;
{
soulC soul1m( tinP , TAG( TAGiDnULL ) ) ;

}
    }
        else if( !ether.strCompareF( tinP , psttc1 , T("!file" ) ) ) bArmed = 1 ;
        }
            break ;
            etThread.strMakeF( tinP , pstth , psttc1 ) ; ___( pstth ) ;
        {
        if( bArmed )
    {
    FORsTRINGSiN1( ether.ether_pstt1_processParametersI_F( tinP ) )
    ZE( boolT , bArmed ) ;
{
ZE( strokeS* , pstth ) ;

CONoUTrAW( "COUNT SOURCE CODE LINES\r\n" ) ;

TODO

/*1*/WAKEsHOWtEXT( "ifcIDaDAM_DEFlINES.countLines" )/*1*/
/**/
*/
 example (without the quote marks): "4000321"
parameter 1 (optional): an immutable file id, in foreign bigit order
writes a snip for each definition that contains the line count for that definition
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 25 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//

