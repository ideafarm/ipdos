
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
// Respecting the rights of other people is an important part of empowering one another.
//


REST

etherC::loafIF( tinP ) ;
etThread.traceF( tinP , T("ok") ) ;

etThread.diskWalkF( tinP , cDirs , cFiles , T("///d/tmp/archive.shrunk/") , bQuit , diskWalkFooCBF , 0 , 0 , 0 ) ;
ZE( boolT , bQuit ) ;
ZE( countT , cFiles ) ;
ZE( countT , cDirs ) ;

TODO


}
    return bDoIt ;

    _OUT_

    }
        tinP.pEther->delF( tinP , psttShort ) ;
        tinP.pEther->delF( tinP , psttPath ) ;

        }
            DEL( pInfoShrunk ) ;
            DEL( pInfoUnshrunk ) ;

            }
                tinP.pEther->diskFileOrDirDeleteF( tinP , tShrunk , flFILEoRdIRdELETE_null , 0 ) ;
                tinP.pEther->traceF( tinP , T("deleting: ")+tShrunk ) ;
            {
            if( pInfoShrunk->cbUsedHigh > pInfoUnshrunk->cbUsedHigh || pInfoShrunk->cbUsed > pInfoUnshrunk->cbUsed )

            }
                tinP.pEther->diskFileQueryF( tinP , pInfoUnshrunk , fi ) ;
                fileC fi( tinP , (strokeS*)tUnshrunk , ifcOPENaCCESS_R , ifcOPENsHARE_R , flOPENdETAILS_LOCsEQ , ifcOPENhOW_nFeO , flFILEaTTR_null , flFILEc_null , 0 , 0 ) ;
            {
            ZE( infoFileS* , pInfoUnshrunk ) ;

            }
                tinP.pEther->diskFileQueryF( tinP , pInfoShrunk , fi ) ;
                fileC fi( tinP , (strokeS*)tShrunk , ifcOPENaCCESS_R , ifcOPENsHARE_R , flOPENdETAILS_LOCsEQ , ifcOPENhOW_nFeO , flFILEaTTR_null , flFILEc_null , 0 , 0 ) ;
            {
            ZE( infoFileS* , pInfoShrunk ) ;
        {
        if( tinP.pEther->diskFileExistsF( tinP , tUnshrunk ) )

        TN( tUnshrunk , "" ) ; tUnshrunk = T("///d/tmp/archive.unshrunk/")+T(psttShort) ;

        tinP.pEther->strBisectF( tinP , psttPath , psttShort , tShrunk , T("/") , -1 , flSTRbISECT_APPENDdELIMITER , 0 ) ;  ___( psttPath ) ; ___( psttShort ) ;
        ZE( strokeS* , psttShort ) ;
        ZE( strokeS* , psttPath ) ;

        TN( tShrunk , ifName ) ;
        ifFileNameC ifName( tinP , *tinP.pEther , postNameP ) ;
    {
    if( postNameP[ thirdC::c_strlenIF( tinP , postNameP ) - 1 ] != '\\' && tinP.pEther ) // IF NOT A DIRECTORY
    ZE( boolT , bDoIt ) ;
    _INoLD_
{
/*1*/boolT diskWalkFooCBF( tinS& tinP , countT& cDirsP , countT& cFilesP , boolT& bQuitP , const osTextT* const postNameP , countT* const pcArgP , const countT* const pModuloFilesP , const countT* const pModuloDirsP )/*1*/


/*1*/WAKEsHOWtEXT( "tool.archive.zap.shrunk.if.bigger" )/*1*/
/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 28 years.
//
// Copyright (c) 1992-2020 Wo Of Ideafarm.  All rights reserved.  See IDEAFARM.COM for permitted uses.
//
