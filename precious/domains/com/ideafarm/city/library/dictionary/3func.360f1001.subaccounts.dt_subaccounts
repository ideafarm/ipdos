
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
// Respecting the rights of other people is an important part of empowering one another.
//


}
    }
        { _IO_ if( pStkEmailPenpalContainsAnd ) (*tinP.pEtScratch)( tinP , pStkEmailPenpalContainsAnd ) ; }
        { _IO_ if( pStkEmailPenpalContainsOr  ) (*tinP.pEtScratch)( tinP , pStkEmailPenpalContainsOr  ) ; }
        { _IO_ if( pStkEmailPenpalExactOr     ) (*tinP.pEtScratch)( tinP , pStkEmailPenpalExactOr     ) ; }
        { _IO_ if( pStkRecipe                 ) (*tinP.pEtScratch)( tinP , pStkRecipe                 ) ; }
        { _IO_ if( pStkAutoresponse           ) (*tinP.pEtScratch)( tinP , pStkAutoresponse           ) ; }
        { _IO_ if( pStkEmailRelay             ) (*tinP.pEtScratch)( tinP , pStkEmailRelay             ) ; }
    
        PUSE( tinP , *(byteT**)&psttNameOut ) ;
        PUSE( tinP , *(byteT**)&psttNameIn  ) ;
        PUSE( tinP , *(byteT**)&psttTitle   ) ;

        }
            //CONoUTrAWb( "\r\nsubaccountS/dt [idAdam,idThread,idAcc,idSub,bDone]: " , tinP.pAdamGlobal1->idAdam , "(" , tinP.monitor.idThread , ") " , idAcc , ":" , idSub , " bDone:" , bDone , "\r\n" ) ; //U::
            //CONoUTrAW( tinP.postThreadName ) ;

            if( POOP ) { POOPR ; }

            __( idSubSave && idSub != idSubSave ) ;
            sIn >> idSub ;
            countT idSubSave = idSub ; idSub = 0 ;
                    
            __Z( bDone ) ;
            sIn >> bDone ;
            ZE( boolT , bDone ) ;
                    
            __( idFormat - 1 ) ;
            sIn >> idFormat ;
            ZE( countT , idFormat ) ;
                    
            __( finger - FINGERnEG_LISTsERVERrEPLY ) ;
            sIn >> finger ;
            ZE( countT , finger ) ;
                    
            sock.readF( tinP , sIn ) ;
            soulC sIn( tinP , TAG( TAGiDnULL ) ) ;
                    
            sock.writeF( tinP , sOut ) ;

            pushFieldValuesF( tinP , sOut , pStkEmailPenpalContainsAnd ) ;
            pushFieldValuesF( tinP , sOut , pStkEmailPenpalContainsOr  ) ;
            pushFieldValuesF( tinP , sOut , pStkEmailPenpalExactOr     ) ;
            pushFieldValuesF( tinP , sOut , pStkRecipe                 ) ;
            pushFieldValuesF( tinP , sOut , pStkAutoresponse           ) ;
            sOut << cEmailRelayDrawings ;
            pushFieldValuesF( tinP , sOut , pStkEmailRelay             ) ;
            sOut << psttNameOut ;
            sOut << psttNameIn ;
            sOut << psttTitle ;
            sOut << flagsMode ;
            sOut << idSub ;
            sOut << idAcc ;
            sOut << (countT)ifcIDcMDlISTsERVERiDaCCOUNTdESCRIPTION_SETsUBACCOUNTdESCRIPTION ;
            sOut << (countT)1 ;
            sOut << (countT)FINGERnEG_LISTsERVERcMD ;
            soulC sOut( tinP , TAG( TAGiDnULL ) ) ;
                    
            sock.connectF( tinP , homeS::homeIF().idPortListServerIdAccountDescription ) ;
            socketC sock( tinP , *tinP.pEtScratch , TAG( TAGiDnULL ) ) ;
        {
        if( F(flagsThis) & flSUBACCOUNT_SET )

        if( POOP ) { POOPR ; }

        SCOOPS
    {
    IFsCRATCH

    TINSL
{
/*1*/subaccountS::~subaccountS( voidT )/*1*/

/**/
*/
/*

//
// Respecting the rights of other people is an important part of empowering one another.
// This proprietary software was crafted at great expense and with great hardship by one man.  It took 29 years.
//
// Copyright (c) 1992-2021 Wo Of Ideafarm.  All rights reserved.  See https://github.com/ideafarm/ipdos for permitted uses.
//

